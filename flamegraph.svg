<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="694" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="677.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="677.00"> </text><svg id="frames" x="10" width="1180" total_samples="4142"><g><title>hx`tokio::runtime::builder::Builder::build (1 samples, 0.02%)</title><rect x="0.0000%" y="533" width="0.0241%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="543.50"></text></g><g><title>hx`tokio::runtime::scheduler::multi_thread::worker::Launch::launch (1 samples, 0.02%)</title><rect x="0.0000%" y="517" width="0.0241%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="527.50"></text></g><g><title>hx`tokio::runtime::blocking::pool::spawn_blocking (1 samples, 0.02%)</title><rect x="0.0000%" y="501" width="0.0241%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="511.50"></text></g><g><title>hx`tokio::runtime::blocking::pool::Spawner::spawn_blocking (1 samples, 0.02%)</title><rect x="0.0000%" y="485" width="0.0241%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="495.50"></text></g><g><title>hx`tokio::runtime::blocking::pool::Spawner::spawn_task (1 samples, 0.02%)</title><rect x="0.0000%" y="469" width="0.0241%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="479.50"></text></g><g><title>hx`std::thread::Builder::spawn (1 samples, 0.02%)</title><rect x="0.0000%" y="453" width="0.0241%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="463.50"></text></g><g><title>hx`std::sys::unix::thread::Thread::new (1 samples, 0.02%)</title><rect x="0.0000%" y="437" width="0.0241%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (1 samples, 0.02%)</title><rect x="0.0000%" y="421" width="0.0241%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="431.50"></text></g><g><title>hx`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="0.0966%" y="469" width="0.0241%" height="15" fill="rgb(218,30,26)" fg:x="4" fg:w="1"/><text x="0.3466%" y="479.50"></text></g><g><title>hx`&lt;helix_view::input::Event as core::convert::From&lt;crossterm::event::Event&gt;&gt;::from (1 samples, 0.02%)</title><rect x="0.1207%" y="469" width="0.0241%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="1"/><text x="0.3707%" y="479.50"></text></g><g><title>hx`&lt;toml::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="0.1449%" y="469" width="0.0241%" height="15" fill="rgb(250,228,42)" fg:x="6" fg:w="1"/><text x="0.3949%" y="479.50"></text></g><g><title>hx`&lt;toml_edit::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="0.1449%" y="453" width="0.0241%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="1"/><text x="0.3949%" y="463.50"></text></g><g><title>hx`&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="0.1449%" y="437" width="0.0241%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="1"/><text x="0.3949%" y="447.50"></text></g><g><title>hx`&lt;toml_edit::de::table::TableDeserializer as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="0.1449%" y="421" width="0.0241%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="1"/><text x="0.3949%" y="431.50"></text></g><g><title>hx`&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="0.1449%" y="405" width="0.0241%" height="15" fill="rgb(217,207,13)" fg:x="6" fg:w="1"/><text x="0.3949%" y="415.50"></text></g><g><title>hx`&lt;helix_view::editor::_::&lt;impl serde::de::Deserialize for helix_view::editor::Config&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="0.1449%" y="389" width="0.0241%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="1"/><text x="0.3949%" y="399.50"></text></g><g><title>hx`&lt;helix_view::editor::CursorShapeConfig as serde::de::Deserialize&gt;::deserialize (1 samples, 0.02%)</title><rect x="0.1449%" y="373" width="0.0241%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="1"/><text x="0.3949%" y="383.50"></text></g><g><title>hx`&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="0.1449%" y="357" width="0.0241%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="1"/><text x="0.3949%" y="367.50"></text></g><g><title>hx`&lt;toml_edit::de::table::TableDeserializer as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="0.1449%" y="341" width="0.0241%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="1"/><text x="0.3949%" y="351.50"></text></g><g><title>hx`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="0.1449%" y="325" width="0.0241%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="1"/><text x="0.3949%" y="335.50"></text></g><g><title>hx`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="0.1449%" y="309" width="0.0241%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="1"/><text x="0.3949%" y="319.50"></text></g><g><title>hx`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.02%)</title><rect x="0.1690%" y="453" width="0.0241%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="1"/><text x="0.4190%" y="463.50"></text></g><g><title>hx`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.02%)</title><rect x="0.1690%" y="437" width="0.0241%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="1"/><text x="0.4190%" y="447.50"></text></g><g><title>hx`ts_tree_delete (1 samples, 0.02%)</title><rect x="0.1931%" y="373" width="0.0241%" height="15" fill="rgb(247,18,42)" fg:x="8" fg:w="1"/><text x="0.4431%" y="383.50"></text></g><g><title>hx`ts_subtree_release (1 samples, 0.02%)</title><rect x="0.1931%" y="357" width="0.0241%" height="15" fill="rgb(241,131,45)" fg:x="8" fg:w="1"/><text x="0.4431%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="0.1931%" y="341" width="0.0241%" height="15" fill="rgb(249,31,29)" fg:x="8" fg:w="1"/><text x="0.4431%" y="351.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;helix_term::application::Application&gt; (3 samples, 0.07%)</title><rect x="0.1690%" y="469" width="0.0724%" height="15" fill="rgb(225,111,53)" fg:x="7" fg:w="3"/><text x="0.4190%" y="479.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;helix_view::editor::Editor&gt; (2 samples, 0.05%)</title><rect x="0.1931%" y="453" width="0.0483%" height="15" fill="rgb(238,160,17)" fg:x="8" fg:w="2"/><text x="0.4431%" y="463.50"></text></g><g><title>hx`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="0.1931%" y="437" width="0.0483%" height="15" fill="rgb(214,148,48)" fg:x="8" fg:w="2"/><text x="0.4431%" y="447.50"></text></g><g><title>hx`core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2 samples, 0.05%)</title><rect x="0.1931%" y="421" width="0.0483%" height="15" fill="rgb(232,36,49)" fg:x="8" fg:w="2"/><text x="0.4431%" y="431.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;core::option::Option&lt;helix_core::syntax::Syntax&gt;&gt; (2 samples, 0.05%)</title><rect x="0.1931%" y="405" width="0.0483%" height="15" fill="rgb(209,103,24)" fg:x="8" fg:w="2"/><text x="0.4431%" y="415.50"></text></g><g><title>hx`&lt;slotmap::hop::Slot&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="0.1931%" y="389" width="0.0483%" height="15" fill="rgb(229,88,8)" fg:x="8" fg:w="2"/><text x="0.4431%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="0.2173%" y="373" width="0.0241%" height="15" fill="rgb(213,181,19)" fg:x="9" fg:w="1"/><text x="0.4673%" y="383.50"></text></g><g><title>hx`&lt;toml::value::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.02%)</title><rect x="0.2414%" y="453" width="0.0241%" height="15" fill="rgb(254,191,54)" fg:x="10" fg:w="1"/><text x="0.4914%" y="463.50"></text></g><g><title>hx`&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="0.2656%" y="453" width="0.0241%" height="15" fill="rgb(241,83,37)" fg:x="11" fg:w="1"/><text x="0.5156%" y="463.50"></text></g><g><title>hx`&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="0.2656%" y="437" width="0.0241%" height="15" fill="rgb(233,36,39)" fg:x="11" fg:w="1"/><text x="0.5156%" y="447.50"></text></g><g><title>hx`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.02%)</title><rect x="0.2656%" y="421" width="0.0241%" height="15" fill="rgb(226,3,54)" fg:x="11" fg:w="1"/><text x="0.5156%" y="431.50"></text></g><g><title>hx`&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="0.2656%" y="405" width="0.0241%" height="15" fill="rgb(245,192,40)" fg:x="11" fg:w="1"/><text x="0.5156%" y="415.50"></text></g><g><title>hx`helix_core::syntax::deserialize_regex (1 samples, 0.02%)</title><rect x="0.2656%" y="389" width="0.0241%" height="15" fill="rgb(238,167,29)" fg:x="11" fg:w="1"/><text x="0.5156%" y="399.50"></text></g><g><title>hx`regex::re_unicode::Regex::new (1 samples, 0.02%)</title><rect x="0.2656%" y="373" width="0.0241%" height="15" fill="rgb(232,182,51)" fg:x="11" fg:w="1"/><text x="0.5156%" y="383.50"></text></g><g><title>hx`regex::exec::ExecBuilder::build (1 samples, 0.02%)</title><rect x="0.2656%" y="357" width="0.0241%" height="15" fill="rgb(231,60,39)" fg:x="11" fg:w="1"/><text x="0.5156%" y="367.50"></text></g><g><title>hx`regex::literal::imp::LiteralSearcher::suffixes (1 samples, 0.02%)</title><rect x="0.2656%" y="341" width="0.0241%" height="15" fill="rgb(208,69,12)" fg:x="11" fg:w="1"/><text x="0.5156%" y="351.50"></text></g><g><title>hx`regex::literal::imp::LiteralSearcher::new (1 samples, 0.02%)</title><rect x="0.2656%" y="325" width="0.0241%" height="15" fill="rgb(235,93,37)" fg:x="11" fg:w="1"/><text x="0.5156%" y="335.50"></text></g><g><title>hx`regex::literal::imp::Memmem::new (1 samples, 0.02%)</title><rect x="0.2656%" y="309" width="0.0241%" height="15" fill="rgb(213,116,39)" fg:x="11" fg:w="1"/><text x="0.5156%" y="319.50"></text></g><g><title>hx`memchr::memmem::rarebytes::RareNeedleBytes::forward (1 samples, 0.02%)</title><rect x="0.2656%" y="293" width="0.0241%" height="15" fill="rgb(222,207,29)" fg:x="11" fg:w="1"/><text x="0.5156%" y="303.50"></text></g><g><title>hx`helix_loader::config::default_lang_config (2 samples, 0.05%)</title><rect x="0.2897%" y="437" width="0.0483%" height="15" fill="rgb(206,96,30)" fg:x="12" fg:w="2"/><text x="0.5397%" y="447.50"></text></g><g><title>hx`&lt;toml::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.05%)</title><rect x="0.2897%" y="421" width="0.0483%" height="15" fill="rgb(218,138,4)" fg:x="12" fg:w="2"/><text x="0.5397%" y="431.50"></text></g><g><title>hx`toml_edit::parser::parse_document (2 samples, 0.05%)</title><rect x="0.2897%" y="405" width="0.0483%" height="15" fill="rgb(250,191,14)" fg:x="12" fg:w="2"/><text x="0.5397%" y="415.50"></text></g><g><title>hx`&lt;F as nom8::parser::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.05%)</title><rect x="0.2897%" y="389" width="0.0483%" height="15" fill="rgb(239,60,40)" fg:x="12" fg:w="2"/><text x="0.5397%" y="399.50"></text></g><g><title>hx`&lt;(P1,P2,P3,P4) as nom8::parser::Parser&lt;I,(O1,O2,O3,O4),E&gt;&gt;::parse (2 samples, 0.05%)</title><rect x="0.2897%" y="373" width="0.0483%" height="15" fill="rgb(206,27,48)" fg:x="12" fg:w="2"/><text x="0.5397%" y="383.50"></text></g><g><title>hx`&lt;F as nom8::parser::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.05%)</title><rect x="0.2897%" y="357" width="0.0483%" height="15" fill="rgb(225,35,8)" fg:x="12" fg:w="2"/><text x="0.5397%" y="367.50"></text></g><g><title>hx`&lt;(P1,P2) as nom8::parser::Parser&lt;I,(O1,O2),E&gt;&gt;::parse (2 samples, 0.05%)</title><rect x="0.2897%" y="341" width="0.0483%" height="15" fill="rgb(250,213,24)" fg:x="12" fg:w="2"/><text x="0.5397%" y="351.50"></text></g><g><title>hx`&lt;nom8::combinator::MapRes&lt;F,G,O1&gt; as nom8::parser::Parser&lt;I,O2,E&gt;&gt;::parse (2 samples, 0.05%)</title><rect x="0.2897%" y="325" width="0.0483%" height="15" fill="rgb(247,123,22)" fg:x="12" fg:w="2"/><text x="0.5397%" y="335.50"></text></g><g><title>hx`toml_edit::parser::document::parse_keyval (2 samples, 0.05%)</title><rect x="0.2897%" y="309" width="0.0483%" height="15" fill="rgb(231,138,38)" fg:x="12" fg:w="2"/><text x="0.5397%" y="319.50"></text></g><g><title>hx`&lt;nom8::combinator::MapRes&lt;F,G,O1&gt; as nom8::parser::Parser&lt;I,O2,E&gt;&gt;::parse (2 samples, 0.05%)</title><rect x="0.2897%" y="293" width="0.0483%" height="15" fill="rgb(231,145,46)" fg:x="12" fg:w="2"/><text x="0.5397%" y="303.50"></text></g><g><title>hx`&lt;(P1,P2) as nom8::parser::Parser&lt;I,(O1,O2),E&gt;&gt;::parse (2 samples, 0.05%)</title><rect x="0.2897%" y="277" width="0.0483%" height="15" fill="rgb(251,118,11)" fg:x="12" fg:w="2"/><text x="0.5397%" y="287.50"></text></g><g><title>hx`&lt;(P1,P2) as nom8::parser::Parser&lt;I,(O1,O2),E&gt;&gt;::parse (2 samples, 0.05%)</title><rect x="0.2897%" y="261" width="0.0483%" height="15" fill="rgb(217,147,25)" fg:x="12" fg:w="2"/><text x="0.5397%" y="271.50"></text></g><g><title>hx`&lt;(P1,P2,P3) as nom8::parser::Parser&lt;I,(O1,O2,O3),E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.3139%" y="245" width="0.0241%" height="15" fill="rgb(247,81,37)" fg:x="13" fg:w="1"/><text x="0.5639%" y="255.50"></text></g><g><title>hx`&lt;nom8::combinator::MapRes&lt;F,G,O1&gt; as nom8::parser::Parser&lt;I,O2,E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.3139%" y="229" width="0.0241%" height="15" fill="rgb(209,12,38)" fg:x="13" fg:w="1"/><text x="0.5639%" y="239.50"></text></g><g><title>hx`helix_core::config::user_syntax_loader (5 samples, 0.12%)</title><rect x="0.2414%" y="469" width="0.1207%" height="15" fill="rgb(227,1,9)" fg:x="10" fg:w="5"/><text x="0.4914%" y="479.50"></text></g><g><title>hx`helix_loader::config::user_lang_config (3 samples, 0.07%)</title><rect x="0.2897%" y="453" width="0.0724%" height="15" fill="rgb(248,47,43)" fg:x="12" fg:w="3"/><text x="0.5397%" y="463.50"></text></g><g><title>hx`helix_loader::local_config_dirs (1 samples, 0.02%)</title><rect x="0.3380%" y="437" width="0.0241%" height="15" fill="rgb(221,10,30)" fg:x="14" fg:w="1"/><text x="0.5880%" y="447.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="0.3380%" y="421" width="0.0241%" height="15" fill="rgb(210,229,1)" fg:x="14" fg:w="1"/><text x="0.5880%" y="431.50"></text></g><g><title>hx`helix_view::editor::Editor::new (1 samples, 0.02%)</title><rect x="0.3621%" y="453" width="0.0241%" height="15" fill="rgb(222,148,37)" fg:x="15" fg:w="1"/><text x="0.6121%" y="463.50"></text></g><g><title>hx`once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.02%)</title><rect x="0.3621%" y="437" width="0.0241%" height="15" fill="rgb(234,67,33)" fg:x="15" fg:w="1"/><text x="0.6121%" y="447.50"></text></g><g><title>hx`once_cell::imp::initialize_or_wait (1 samples, 0.02%)</title><rect x="0.3621%" y="421" width="0.0241%" height="15" fill="rgb(247,98,35)" fg:x="15" fg:w="1"/><text x="0.6121%" y="431.50"></text></g><g><title>hx`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.02%)</title><rect x="0.3621%" y="405" width="0.0241%" height="15" fill="rgb(247,138,52)" fg:x="15" fg:w="1"/><text x="0.6121%" y="415.50"></text></g><g><title>hx`core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="0.3621%" y="389" width="0.0241%" height="15" fill="rgb(213,79,30)" fg:x="15" fg:w="1"/><text x="0.6121%" y="399.50"></text></g><g><title>hx`once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.02%)</title><rect x="0.3621%" y="373" width="0.0241%" height="15" fill="rgb(246,177,23)" fg:x="15" fg:w="1"/><text x="0.6121%" y="383.50"></text></g><g><title>hx`once_cell::imp::initialize_or_wait (1 samples, 0.02%)</title><rect x="0.3621%" y="357" width="0.0241%" height="15" fill="rgb(230,62,27)" fg:x="15" fg:w="1"/><text x="0.6121%" y="367.50"></text></g><g><title>hx`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.02%)</title><rect x="0.3621%" y="341" width="0.0241%" height="15" fill="rgb(216,154,8)" fg:x="15" fg:w="1"/><text x="0.6121%" y="351.50"></text></g><g><title>hx`core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="0.3621%" y="325" width="0.0241%" height="15" fill="rgb(244,35,45)" fg:x="15" fg:w="1"/><text x="0.6121%" y="335.50"></text></g><g><title>hx`&lt;toml::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="0.3621%" y="309" width="0.0241%" height="15" fill="rgb(251,115,12)" fg:x="15" fg:w="1"/><text x="0.6121%" y="319.50"></text></g><g><title>hx`toml_edit::parser::parse_document (1 samples, 0.02%)</title><rect x="0.3621%" y="293" width="0.0241%" height="15" fill="rgb(240,54,50)" fg:x="15" fg:w="1"/><text x="0.6121%" y="303.50"></text></g><g><title>hx`&lt;F as nom8::parser::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.3621%" y="277" width="0.0241%" height="15" fill="rgb(233,84,52)" fg:x="15" fg:w="1"/><text x="0.6121%" y="287.50"></text></g><g><title>hx`&lt;(P1,P2,P3,P4) as nom8::parser::Parser&lt;I,(O1,O2,O3,O4),E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.3621%" y="261" width="0.0241%" height="15" fill="rgb(207,117,47)" fg:x="15" fg:w="1"/><text x="0.6121%" y="271.50"></text></g><g><title>hx`&lt;F as nom8::parser::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.3621%" y="245" width="0.0241%" height="15" fill="rgb(249,43,39)" fg:x="15" fg:w="1"/><text x="0.6121%" y="255.50"></text></g><g><title>hx`&lt;(P1,P2) as nom8::parser::Parser&lt;I,(O1,O2),E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.3621%" y="229" width="0.0241%" height="15" fill="rgb(209,38,44)" fg:x="15" fg:w="1"/><text x="0.6121%" y="239.50"></text></g><g><title>hx`&lt;nom8::combinator::MapRes&lt;F,G,O1&gt; as nom8::parser::Parser&lt;I,O2,E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.3621%" y="213" width="0.0241%" height="15" fill="rgb(236,212,23)" fg:x="15" fg:w="1"/><text x="0.6121%" y="223.50"></text></g><g><title>hx`toml_edit::parser::document::parse_keyval (1 samples, 0.02%)</title><rect x="0.3621%" y="197" width="0.0241%" height="15" fill="rgb(242,79,21)" fg:x="15" fg:w="1"/><text x="0.6121%" y="207.50"></text></g><g><title>hx`&lt;nom8::combinator::MapRes&lt;F,G,O1&gt; as nom8::parser::Parser&lt;I,O2,E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.3621%" y="181" width="0.0241%" height="15" fill="rgb(211,96,35)" fg:x="15" fg:w="1"/><text x="0.6121%" y="191.50"></text></g><g><title>hx`&lt;(P1,P2) as nom8::parser::Parser&lt;I,(O1,O2),E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.3621%" y="165" width="0.0241%" height="15" fill="rgb(253,215,40)" fg:x="15" fg:w="1"/><text x="0.6121%" y="175.50"></text></g><g><title>hx`&lt;helix_view::theme::Theme as core::convert::From&lt;toml::value::Value&gt;&gt;::from (1 samples, 0.02%)</title><rect x="0.3863%" y="437" width="0.0241%" height="15" fill="rgb(211,81,21)" fg:x="16" fg:w="1"/><text x="0.6363%" y="447.50"></text></g><g><title>hx`helix_view::theme::build_theme_values (1 samples, 0.02%)</title><rect x="0.3863%" y="421" width="0.0241%" height="15" fill="rgb(208,190,38)" fg:x="16" fg:w="1"/><text x="0.6363%" y="431.50"></text></g><g><title>hx`&lt;fern::log_impl::Dispatch as log::Log&gt;::log (1 samples, 0.02%)</title><rect x="0.3863%" y="405" width="0.0241%" height="15" fill="rgb(235,213,38)" fg:x="16" fg:w="1"/><text x="0.6363%" y="415.50"></text></g><g><title>hx`&lt;fern::log_impl::Dispatch as log::Log&gt;::log (1 samples, 0.02%)</title><rect x="0.3863%" y="389" width="0.0241%" height="15" fill="rgb(237,122,38)" fg:x="16" fg:w="1"/><text x="0.6363%" y="399.50"></text></g><g><title>hx`hx::setup_logging::_{{closure}} (1 samples, 0.02%)</title><rect x="0.3863%" y="373" width="0.0241%" height="15" fill="rgb(244,218,35)" fg:x="16" fg:w="1"/><text x="0.6363%" y="383.50"></text></g><g><title>hx`fern::log_impl::FormatCallback::finish (1 samples, 0.02%)</title><rect x="0.3863%" y="357" width="0.0241%" height="15" fill="rgb(240,68,47)" fg:x="16" fg:w="1"/><text x="0.6363%" y="367.50"></text></g><g><title>hx`&lt;fern::log_impl::File as log::Log&gt;::log (1 samples, 0.02%)</title><rect x="0.3863%" y="341" width="0.0241%" height="15" fill="rgb(210,16,53)" fg:x="16" fg:w="1"/><text x="0.6363%" y="351.50"></text></g><g><title>hx`std::io::Write::write_fmt (1 samples, 0.02%)</title><rect x="0.3863%" y="325" width="0.0241%" height="15" fill="rgb(235,124,12)" fg:x="16" fg:w="1"/><text x="0.6363%" y="335.50"></text></g><g><title>hx`core::fmt::write (1 samples, 0.02%)</title><rect x="0.3863%" y="309" width="0.0241%" height="15" fill="rgb(224,169,11)" fg:x="16" fg:w="1"/><text x="0.6363%" y="319.50"></text></g><g><title>hx`&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="0.3863%" y="293" width="0.0241%" height="15" fill="rgb(250,166,2)" fg:x="16" fg:w="1"/><text x="0.6363%" y="303.50"></text></g><g><title>hx`core::fmt::write (1 samples, 0.02%)</title><rect x="0.3863%" y="277" width="0.0241%" height="15" fill="rgb(242,216,29)" fg:x="16" fg:w="1"/><text x="0.6363%" y="287.50"></text></g><g><title>hx`&lt;chrono::format::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="0.3863%" y="261" width="0.0241%" height="15" fill="rgb(230,116,27)" fg:x="16" fg:w="1"/><text x="0.6363%" y="271.50"></text></g><g><title>hx`chrono::format::format_inner (1 samples, 0.02%)</title><rect x="0.3863%" y="245" width="0.0241%" height="15" fill="rgb(228,99,48)" fg:x="16" fg:w="1"/><text x="0.6363%" y="255.50"></text></g><g><title>hx`core::fmt::write (1 samples, 0.02%)</title><rect x="0.3863%" y="229" width="0.0241%" height="15" fill="rgb(253,11,6)" fg:x="16" fg:w="1"/><text x="0.6363%" y="239.50"></text></g><g><title>hx`helix_term::application::Application::new (3 samples, 0.07%)</title><rect x="0.3621%" y="469" width="0.0724%" height="15" fill="rgb(247,143,39)" fg:x="15" fg:w="3"/><text x="0.6121%" y="479.50"></text></g><g><title>hx`helix_view::theme::Loader::load (2 samples, 0.05%)</title><rect x="0.3863%" y="453" width="0.0483%" height="15" fill="rgb(236,97,10)" fg:x="16" fg:w="2"/><text x="0.6363%" y="463.50"></text></g><g><title>hx`helix_view::theme::Loader::load_theme (1 samples, 0.02%)</title><rect x="0.4104%" y="437" width="0.0241%" height="15" fill="rgb(233,208,19)" fg:x="17" fg:w="1"/><text x="0.6604%" y="447.50"></text></g><g><title>hx`&lt;toml::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="0.4104%" y="421" width="0.0241%" height="15" fill="rgb(216,164,2)" fg:x="17" fg:w="1"/><text x="0.6604%" y="431.50"></text></g><g><title>hx`toml_edit::parser::parse_document (1 samples, 0.02%)</title><rect x="0.4104%" y="405" width="0.0241%" height="15" fill="rgb(220,129,5)" fg:x="17" fg:w="1"/><text x="0.6604%" y="415.50"></text></g><g><title>hx`&lt;F as nom8::parser::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.4104%" y="389" width="0.0241%" height="15" fill="rgb(242,17,10)" fg:x="17" fg:w="1"/><text x="0.6604%" y="399.50"></text></g><g><title>hx`&lt;(P1,P2,P3,P4) as nom8::parser::Parser&lt;I,(O1,O2,O3,O4),E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.4104%" y="373" width="0.0241%" height="15" fill="rgb(242,107,0)" fg:x="17" fg:w="1"/><text x="0.6604%" y="383.50"></text></g><g><title>hx`&lt;F as nom8::parser::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.4104%" y="357" width="0.0241%" height="15" fill="rgb(251,28,31)" fg:x="17" fg:w="1"/><text x="0.6604%" y="367.50"></text></g><g><title>hx`&lt;(P1,P2) as nom8::parser::Parser&lt;I,(O1,O2),E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.4104%" y="341" width="0.0241%" height="15" fill="rgb(233,223,10)" fg:x="17" fg:w="1"/><text x="0.6604%" y="351.50"></text></g><g><title>hx`&lt;nom8::combinator::MapRes&lt;F,G,O1&gt; as nom8::parser::Parser&lt;I,O2,E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.4104%" y="325" width="0.0241%" height="15" fill="rgb(215,21,27)" fg:x="17" fg:w="1"/><text x="0.6604%" y="335.50"></text></g><g><title>hx`toml_edit::parser::document::parse_keyval (1 samples, 0.02%)</title><rect x="0.4104%" y="309" width="0.0241%" height="15" fill="rgb(232,23,21)" fg:x="17" fg:w="1"/><text x="0.6604%" y="319.50"></text></g><g><title>hx`&lt;nom8::combinator::MapRes&lt;F,G,O1&gt; as nom8::parser::Parser&lt;I,O2,E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.4104%" y="293" width="0.0241%" height="15" fill="rgb(244,5,23)" fg:x="17" fg:w="1"/><text x="0.6604%" y="303.50"></text></g><g><title>hx`&lt;(P1,P2) as nom8::parser::Parser&lt;I,(O1,O2),E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.4104%" y="277" width="0.0241%" height="15" fill="rgb(226,81,46)" fg:x="17" fg:w="1"/><text x="0.6604%" y="287.50"></text></g><g><title>hx`&lt;(P1,P2) as nom8::parser::Parser&lt;I,(O1,O2),E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.4104%" y="261" width="0.0241%" height="15" fill="rgb(247,70,30)" fg:x="17" fg:w="1"/><text x="0.6604%" y="271.50"></text></g><g><title>hx`&lt;(P1,P2,P3) as nom8::parser::Parser&lt;I,(O1,O2,O3),E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.4104%" y="245" width="0.0241%" height="15" fill="rgb(212,68,19)" fg:x="17" fg:w="1"/><text x="0.6604%" y="255.50"></text></g><g><title>hx`&lt;nom8::combinator::MapRes&lt;F,G,O1&gt; as nom8::parser::Parser&lt;I,O2,E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.4104%" y="229" width="0.0241%" height="15" fill="rgb(240,187,13)" fg:x="17" fg:w="1"/><text x="0.6604%" y="239.50"></text></g><g><title>hx`&lt;F as nom8::parser::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.4104%" y="213" width="0.0241%" height="15" fill="rgb(223,113,26)" fg:x="17" fg:w="1"/><text x="0.6604%" y="223.50"></text></g><g><title>hx`&lt;(A,B,C,D) as nom8::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.02%)</title><rect x="0.4104%" y="197" width="0.0241%" height="15" fill="rgb(206,192,2)" fg:x="17" fg:w="1"/><text x="0.6604%" y="207.50"></text></g><g><title>hx`&lt;nom8::error::Context&lt;F,O,C&gt; as nom8::parser::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.02%)</title><rect x="0.4104%" y="181" width="0.0241%" height="15" fill="rgb(241,108,4)" fg:x="17" fg:w="1"/><text x="0.6604%" y="191.50"></text></g><g><title>hx`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.02%)</title><rect x="0.4104%" y="165" width="0.0241%" height="15" fill="rgb(247,173,49)" fg:x="17" fg:w="1"/><text x="0.6604%" y="175.50"></text></g><g><title>hx`helix_core::line_ending::line_end_byte_index (1 samples, 0.02%)</title><rect x="0.4829%" y="405" width="0.0241%" height="15" fill="rgb(224,114,35)" fg:x="20" fg:w="1"/><text x="0.7329%" y="415.50"></text></g><g><title>hx`ropey::slice::RopeSlice::get_chunk_at_line_break (1 samples, 0.02%)</title><rect x="0.4829%" y="389" width="0.0241%" height="15" fill="rgb(245,159,27)" fg:x="20" fg:w="1"/><text x="0.7329%" y="399.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="0.4829%" y="453" width="0.0483%" height="15" fill="rgb(245,172,44)" fg:x="20" fg:w="2"/><text x="0.7329%" y="463.50"></text></g><g><title>hx`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.05%)</title><rect x="0.4829%" y="437" width="0.0483%" height="15" fill="rgb(236,23,11)" fg:x="20" fg:w="2"/><text x="0.7329%" y="447.50"></text></g><g><title>hx`helix_lsp::util::lsp_pos_to_pos (2 samples, 0.05%)</title><rect x="0.4829%" y="421" width="0.0483%" height="15" fill="rgb(205,117,38)" fg:x="20" fg:w="2"/><text x="0.7329%" y="431.50"></text></g><g><title>hx`ropey::rope::Rope::line_to_byte (1 samples, 0.02%)</title><rect x="0.5070%" y="405" width="0.0241%" height="15" fill="rgb(237,72,25)" fg:x="21" fg:w="1"/><text x="0.7570%" y="415.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_line_break (1 samples, 0.02%)</title><rect x="0.5070%" y="389" width="0.0241%" height="15" fill="rgb(244,70,9)" fg:x="21" fg:w="1"/><text x="0.7570%" y="399.50"></text></g><g><title>hx`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::flush (1 samples, 0.02%)</title><rect x="0.5794%" y="437" width="0.0241%" height="15" fill="rgb(217,125,39)" fg:x="24" fg:w="1"/><text x="0.8294%" y="447.50"></text></g><g><title>hx`&lt;arc_swap::access::MapGuard&lt;G,F,T,R&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.05%)</title><rect x="0.6036%" y="437" width="0.0483%" height="15" fill="rgb(235,36,10)" fg:x="25" fg:w="2"/><text x="0.8536%" y="447.50"></text></g><g><title>hx`&lt;slotmap::KeyData as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="0.6760%" y="405" width="0.0241%" height="15" fill="rgb(251,123,47)" fg:x="28" fg:w="1"/><text x="0.9260%" y="415.50"></text></g><g><title>hx`helix_view::editor::Editor::cursor (2 samples, 0.05%)</title><rect x="0.6760%" y="421" width="0.0483%" height="15" fill="rgb(221,13,13)" fg:x="28" fg:w="2"/><text x="0.9260%" y="431.50"></text></g><g><title>hx`helix_core::graphemes::nth_prev_grapheme_boundary (1 samples, 0.02%)</title><rect x="0.7001%" y="405" width="0.0241%" height="15" fill="rgb(238,131,9)" fg:x="29" fg:w="1"/><text x="0.9501%" y="415.50"></text></g><g><title>hx`&lt;helix_term::ui::editor::EditorView as helix_term::compositor::Component&gt;::cursor (4 samples, 0.10%)</title><rect x="0.6519%" y="437" width="0.0966%" height="15" fill="rgb(211,50,8)" fg:x="27" fg:w="4"/><text x="0.9019%" y="447.50"></text></g><g><title>hx`ropey::rope::Rope::slice (1 samples, 0.02%)</title><rect x="0.7243%" y="421" width="0.0241%" height="15" fill="rgb(245,182,24)" fg:x="30" fg:w="1"/><text x="0.9743%" y="431.50"></text></g><g><title>hx`&lt;helix_term::ui::completion::Completion as helix_term::compositor::Component&gt;::render (2 samples, 0.05%)</title><rect x="0.8209%" y="421" width="0.0483%" height="15" fill="rgb(242,14,37)" fg:x="34" fg:w="2"/><text x="1.0709%" y="431.50"></text></g><g><title>hx`&lt;helix_term::ui::popup::Popup&lt;T&gt; as helix_term::compositor::Component&gt;::render (2 samples, 0.05%)</title><rect x="0.8209%" y="405" width="0.0483%" height="15" fill="rgb(246,228,12)" fg:x="34" fg:w="2"/><text x="1.0709%" y="415.50"></text></g><g><title>hx`helix_tui::widgets::table::Table::render_table (2 samples, 0.05%)</title><rect x="0.8209%" y="389" width="0.0483%" height="15" fill="rgb(213,55,15)" fg:x="34" fg:w="2"/><text x="1.0709%" y="399.50"></text></g><g><title>hx`std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.05%)</title><rect x="0.8209%" y="373" width="0.0483%" height="15" fill="rgb(209,9,3)" fg:x="34" fg:w="2"/><text x="1.0709%" y="383.50"></text></g><g><title>hx`helix_tui::layout::split (2 samples, 0.05%)</title><rect x="0.8209%" y="357" width="0.0483%" height="15" fill="rgb(230,59,30)" fg:x="34" fg:w="2"/><text x="1.0709%" y="367.50"></text></g><g><title>hx`cassowary::solver_impl::Solver::add_constraint (2 samples, 0.05%)</title><rect x="0.8209%" y="341" width="0.0483%" height="15" fill="rgb(209,121,21)" fg:x="34" fg:w="2"/><text x="1.0709%" y="351.50"></text></g><g><title>hx`cassowary::solver_impl::Solver::optimise (1 samples, 0.02%)</title><rect x="0.8450%" y="325" width="0.0241%" height="15" fill="rgb(220,109,13)" fg:x="35" fg:w="1"/><text x="1.0950%" y="335.50"></text></g><g><title>hx`cassowary::solver_impl::Solver::substitute (1 samples, 0.02%)</title><rect x="0.8450%" y="309" width="0.0241%" height="15" fill="rgb(232,18,1)" fg:x="35" fg:w="1"/><text x="1.0950%" y="319.50"></text></g><g><title>hx`cassowary::Row::substitute (1 samples, 0.02%)</title><rect x="0.8450%" y="293" width="0.0241%" height="15" fill="rgb(215,41,42)" fg:x="35" fg:w="1"/><text x="1.0950%" y="303.50"></text></g><g><title>hx`cassowary::Row::insert_symbol (1 samples, 0.02%)</title><rect x="0.8450%" y="277" width="0.0241%" height="15" fill="rgb(224,123,36)" fg:x="35" fg:w="1"/><text x="1.0950%" y="287.50"></text></g><g><title>hx`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.02%)</title><rect x="0.8450%" y="261" width="0.0241%" height="15" fill="rgb(240,125,3)" fg:x="35" fg:w="1"/><text x="1.0950%" y="271.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;helix_term::ui::editor::EditorView::render_gutter::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="0.8691%" y="421" width="0.0241%" height="15" fill="rgb(205,98,50)" fg:x="36" fg:w="1"/><text x="1.1191%" y="431.50"></text></g><g><title>hx`helix_term::ui::document::render_document (1 samples, 0.02%)</title><rect x="0.8933%" y="421" width="0.0241%" height="15" fill="rgb(205,185,37)" fg:x="37" fg:w="1"/><text x="1.1433%" y="431.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::doc_syntax_highlights (1 samples, 0.02%)</title><rect x="0.9174%" y="421" width="0.0241%" height="15" fill="rgb(238,207,15)" fg:x="38" fg:w="1"/><text x="1.1674%" y="431.50"></text></g><g><title>hx`&lt;helix_core::history::History as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="0.9416%" y="405" width="0.0241%" height="15" fill="rgb(213,199,42)" fg:x="39" fg:w="1"/><text x="1.1916%" y="415.50"></text></g><g><title>hx`&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.02%)</title><rect x="0.9657%" y="405" width="0.0241%" height="15" fill="rgb(235,201,11)" fg:x="40" fg:w="1"/><text x="1.2157%" y="415.50"></text></g><g><title>hx`std::path::Components::parse_next_component_back (1 samples, 0.02%)</title><rect x="0.9657%" y="389" width="0.0241%" height="15" fill="rgb(207,46,11)" fg:x="40" fg:w="1"/><text x="1.2157%" y="399.50"></text></g><g><title>hx`alloc::fmt::format::format_inner (1 samples, 0.02%)</title><rect x="0.9899%" y="405" width="0.0241%" height="15" fill="rgb(241,35,35)" fg:x="41" fg:w="1"/><text x="1.2399%" y="415.50"></text></g><g><title>hx`core::fmt::write (1 samples, 0.02%)</title><rect x="0.9899%" y="389" width="0.0241%" height="15" fill="rgb(243,32,47)" fg:x="41" fg:w="1"/><text x="1.2399%" y="399.50"></text></g><g><title>hx`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="0.9899%" y="373" width="0.0241%" height="15" fill="rgb(247,202,23)" fg:x="41" fg:w="1"/><text x="1.2399%" y="383.50"></text></g><g><title>hx`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="0.9899%" y="357" width="0.0241%" height="15" fill="rgb(219,102,11)" fg:x="41" fg:w="1"/><text x="1.2399%" y="367.50"></text></g><g><title>hx`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="0.9899%" y="341" width="0.0241%" height="15" fill="rgb(243,110,44)" fg:x="41" fg:w="1"/><text x="1.2399%" y="351.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::clear_with (4 samples, 0.10%)</title><rect x="1.0140%" y="405" width="0.0966%" height="15" fill="rgb(222,74,54)" fg:x="42" fg:w="4"/><text x="1.2640%" y="415.50"></text></g><g><title>hx`&lt;helix_core::history::History as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="1.1106%" y="389" width="0.0241%" height="15" fill="rgb(216,99,12)" fg:x="46" fg:w="1"/><text x="1.3606%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="1.1106%" y="373" width="0.0241%" height="15" fill="rgb(226,22,26)" fg:x="46" fg:w="1"/><text x="1.3606%" y="383.50"></text></g><g><title>hx`helix_view::document::Document::is_modified (2 samples, 0.05%)</title><rect x="1.1106%" y="405" width="0.0483%" height="15" fill="rgb(217,163,10)" fg:x="46" fg:w="2"/><text x="1.3606%" y="415.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;helix_core::transaction::Transaction&gt; (1 samples, 0.02%)</title><rect x="1.1347%" y="389" width="0.0241%" height="15" fill="rgb(213,25,53)" fg:x="47" fg:w="1"/><text x="1.3847%" y="399.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::render_bufferline (10 samples, 0.24%)</title><rect x="0.9416%" y="421" width="0.2414%" height="15" fill="rgb(252,105,26)" fg:x="39" fg:w="10"/><text x="1.1916%" y="431.50"></text></g><g><title>hx`helix_view::theme::Theme::try_get (1 samples, 0.02%)</title><rect x="1.1589%" y="405" width="0.0241%" height="15" fill="rgb(220,39,43)" fg:x="48" fg:w="1"/><text x="1.4089%" y="415.50"></text></g><g><title>hx`&lt;F as helix_term::ui::document::LineDecoration&gt;::render_background (5 samples, 0.12%)</title><rect x="1.3520%" y="405" width="0.1207%" height="15" fill="rgb(229,68,48)" fg:x="56" fg:w="5"/><text x="1.6020%" y="415.50"></text></g><g><title>hx`tree_sitter::QueryMatch::satisfies_text_predicates (1 samples, 0.02%)</title><rect x="1.4969%" y="357" width="0.0241%" height="15" fill="rgb(252,8,32)" fg:x="62" fg:w="1"/><text x="1.7469%" y="367.50"></text></g><g><title>hx`regex::re_bytes::Regex::is_match_at (1 samples, 0.02%)</title><rect x="1.4969%" y="341" width="0.0241%" height="15" fill="rgb(223,20,43)" fg:x="62" fg:w="1"/><text x="1.7469%" y="351.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (2 samples, 0.05%)</title><rect x="1.6900%" y="325" width="0.0483%" height="15" fill="rgb(229,81,49)" fg:x="70" fg:w="2"/><text x="1.9400%" y="335.50"></text></g><g><title>hx`ts_query_cursor__advance (8 samples, 0.19%)</title><rect x="1.5693%" y="341" width="0.1931%" height="15" fill="rgb(236,28,36)" fg:x="65" fg:w="8"/><text x="1.8193%" y="351.50"></text></g><g><title>hx`ts_tree_cursor_goto_first_child (1 samples, 0.02%)</title><rect x="1.7383%" y="325" width="0.0241%" height="15" fill="rgb(249,185,26)" fg:x="72" fg:w="1"/><text x="1.9883%" y="335.50"></text></g><g><title>hx`ts_tree_cursor_current_status (5 samples, 0.12%)</title><rect x="1.7624%" y="341" width="0.1207%" height="15" fill="rgb(249,174,33)" fg:x="73" fg:w="5"/><text x="2.0124%" y="351.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (1 samples, 0.02%)</title><rect x="1.8831%" y="341" width="0.0241%" height="15" fill="rgb(233,201,37)" fg:x="78" fg:w="1"/><text x="2.1331%" y="351.50"></text></g><g><title>hx`&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.43%)</title><rect x="1.4969%" y="373" width="0.4346%" height="15" fill="rgb(221,78,26)" fg:x="62" fg:w="18"/><text x="1.7469%" y="383.50"></text></g><g><title>hx`ts_query_cursor_next_capture (17 samples, 0.41%)</title><rect x="1.5210%" y="357" width="0.4104%" height="15" fill="rgb(250,127,30)" fg:x="63" fg:w="17"/><text x="1.7710%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="1.9073%" y="341" width="0.0241%" height="15" fill="rgb(230,49,44)" fg:x="79" fg:w="1"/><text x="2.1573%" y="351.50"></text></g><g><title>hx`helix_core::syntax::HighlightIter::sort_layers (1 samples, 0.02%)</title><rect x="1.9314%" y="373" width="0.0241%" height="15" fill="rgb(229,67,23)" fg:x="80" fg:w="1"/><text x="2.1814%" y="383.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.51%)</title><rect x="1.4727%" y="405" width="0.5070%" height="15" fill="rgb(249,83,47)" fg:x="61" fg:w="21"/><text x="1.7227%" y="415.50"></text></g><g><title>hx`&lt;helix_core::syntax::HighlightIter as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.51%)</title><rect x="1.4727%" y="389" width="0.5070%" height="15" fill="rgb(215,43,3)" fg:x="61" fg:w="21"/><text x="1.7227%" y="399.50"></text></g><g><title>hx`ropey::slice::RopeSlice::byte_slice (1 samples, 0.02%)</title><rect x="1.9556%" y="373" width="0.0241%" height="15" fill="rgb(238,154,13)" fg:x="81" fg:w="1"/><text x="2.2056%" y="383.50"></text></g><g><title>hx`ropey::slice::RopeSlice::new_with_byte_range (1 samples, 0.02%)</title><rect x="1.9556%" y="357" width="0.0241%" height="15" fill="rgb(219,56,2)" fg:x="81" fg:w="1"/><text x="2.2056%" y="367.50"></text></g><g><title>hx`&lt;helix_core::doc_formatter::DocumentFormatter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="1.9797%" y="405" width="0.0724%" height="15" fill="rgb(233,0,4)" fg:x="82" fg:w="3"/><text x="2.2297%" y="415.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;helix_term::ui::editor::EditorView::render_gutter::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="2.0521%" y="405" width="0.0241%" height="15" fill="rgb(235,30,7)" fg:x="85" fg:w="1"/><text x="2.3021%" y="415.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;helix_view::gutter::diff::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="2.0763%" y="405" width="0.0241%" height="15" fill="rgb(250,79,13)" fg:x="86" fg:w="1"/><text x="2.3263%" y="415.50"></text></g><g><title>hx`hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="2.1004%" y="405" width="0.0241%" height="15" fill="rgb(211,146,34)" fg:x="87" fg:w="1"/><text x="2.3504%" y="415.50"></text></g><g><title>hx`helix_core::position::visual_offset_from_block (1 samples, 0.02%)</title><rect x="2.1246%" y="405" width="0.0241%" height="15" fill="rgb(228,22,38)" fg:x="88" fg:w="1"/><text x="2.3746%" y="415.50"></text></g><g><title>hx`helix_term::ui::document::LineDecoration::render_foreground (2 samples, 0.05%)</title><rect x="2.1487%" y="405" width="0.0483%" height="15" fill="rgb(235,168,5)" fg:x="89" fg:w="2"/><text x="2.3987%" y="415.50"></text></g><g><title>hx`helix_term::ui::document::TextRenderer::draw_grapheme (3 samples, 0.07%)</title><rect x="2.1970%" y="405" width="0.0724%" height="15" fill="rgb(221,155,16)" fg:x="91" fg:w="3"/><text x="2.4470%" y="415.50"></text></g><g><title>hx`core::fmt::write (1 samples, 0.02%)</title><rect x="3.7904%" y="373" width="0.0241%" height="15" fill="rgb(215,215,53)" fg:x="157" fg:w="1"/><text x="4.0404%" y="383.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::set_string_truncated_at_end (10 samples, 0.24%)</title><rect x="3.8146%" y="373" width="0.2414%" height="15" fill="rgb(223,4,10)" fg:x="158" fg:w="10"/><text x="4.0646%" y="383.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="4.0319%" y="357" width="0.0241%" height="15" fill="rgb(234,103,6)" fg:x="167" fg:w="1"/><text x="4.2819%" y="367.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::set_style (4 samples, 0.10%)</title><rect x="4.0560%" y="373" width="0.0966%" height="15" fill="rgb(227,97,0)" fg:x="168" fg:w="4"/><text x="4.3060%" y="383.50"></text></g><g><title>hx`helix_view::gutter::diff::_{{closure}} (1 samples, 0.02%)</title><rect x="4.1526%" y="373" width="0.0241%" height="15" fill="rgb(234,150,53)" fg:x="172" fg:w="1"/><text x="4.4026%" y="383.50"></text></g><g><title>hx`core::fmt::write (1 samples, 0.02%)</title><rect x="4.1526%" y="357" width="0.0241%" height="15" fill="rgb(228,201,54)" fg:x="172" fg:w="1"/><text x="4.4026%" y="367.50"></text></g><g><title>hx`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="4.1526%" y="341" width="0.0241%" height="15" fill="rgb(222,22,37)" fg:x="172" fg:w="1"/><text x="4.4026%" y="351.50"></text></g><g><title>hx`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="4.1526%" y="325" width="0.0241%" height="15" fill="rgb(237,53,32)" fg:x="172" fg:w="1"/><text x="4.4026%" y="335.50"></text></g><g><title>hx`core::fmt::Formatter::pad_integral (1 samples, 0.02%)</title><rect x="4.2733%" y="341" width="0.0241%" height="15" fill="rgb(233,25,53)" fg:x="177" fg:w="1"/><text x="4.5233%" y="351.50"></text></g><g><title>hx`&lt;&amp;mut W as core::fmt::Write&gt;::write_char (2 samples, 0.05%)</title><rect x="4.3457%" y="325" width="0.0483%" height="15" fill="rgb(210,40,34)" fg:x="180" fg:w="2"/><text x="4.5957%" y="335.50"></text></g><g><title>hx`helix_view::gutter::line_numbers::_{{closure}} (11 samples, 0.27%)</title><rect x="4.1767%" y="373" width="0.2656%" height="15" fill="rgb(241,220,44)" fg:x="173" fg:w="11"/><text x="4.4267%" y="383.50"></text></g><g><title>hx`core::fmt::write (11 samples, 0.27%)</title><rect x="4.1767%" y="357" width="0.2656%" height="15" fill="rgb(235,28,35)" fg:x="173" fg:w="11"/><text x="4.4267%" y="367.50"></text></g><g><title>hx`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (6 samples, 0.14%)</title><rect x="4.2974%" y="341" width="0.1449%" height="15" fill="rgb(210,56,17)" fg:x="178" fg:w="6"/><text x="4.5474%" y="351.50"></text></g><g><title>hx`core::fmt::Formatter::pad_integral (2 samples, 0.05%)</title><rect x="4.3940%" y="325" width="0.0483%" height="15" fill="rgb(224,130,29)" fg:x="182" fg:w="2"/><text x="4.6440%" y="335.50"></text></g><g><title>hx`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="4.4182%" y="309" width="0.0241%" height="15" fill="rgb(235,212,8)" fg:x="183" fg:w="1"/><text x="4.6682%" y="319.50"></text></g><g><title>hx`&lt;F as helix_term::ui::document::LineDecoration&gt;::render_background (38 samples, 0.92%)</title><rect x="3.5490%" y="389" width="0.9174%" height="15" fill="rgb(223,33,50)" fg:x="147" fg:w="38"/><text x="3.7990%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="4.4423%" y="373" width="0.0241%" height="15" fill="rgb(219,149,13)" fg:x="184" fg:w="1"/><text x="4.6923%" y="383.50"></text></g><g><title>hx`&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="4.4664%" y="389" width="0.0483%" height="15" fill="rgb(250,156,29)" fg:x="185" fg:w="2"/><text x="4.7164%" y="399.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="4.5147%" y="389" width="0.0241%" height="15" fill="rgb(216,193,19)" fg:x="187" fg:w="1"/><text x="4.7647%" y="399.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.39%)</title><rect x="5.3839%" y="373" width="0.3863%" height="15" fill="rgb(216,135,14)" fg:x="223" fg:w="16"/><text x="5.6339%" y="383.50"></text></g><g><title>hx`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.10%)</title><rect x="6.3979%" y="357" width="0.0966%" height="15" fill="rgb(241,47,5)" fg:x="265" fg:w="4"/><text x="6.6479%" y="367.50"></text></g><g><title>hx`&lt;helix_core::graphemes::GraphemeStr as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (4 samples, 0.10%)</title><rect x="6.4944%" y="357" width="0.0966%" height="15" fill="rgb(233,42,35)" fg:x="269" fg:w="4"/><text x="6.7444%" y="367.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::is_boundary (1 samples, 0.02%)</title><rect x="7.0497%" y="341" width="0.0241%" height="15" fill="rgb(231,13,6)" fg:x="292" fg:w="1"/><text x="7.2997%" y="351.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::grapheme_category (7 samples, 0.17%)</title><rect x="8.2327%" y="325" width="0.1690%" height="15" fill="rgb(207,181,40)" fg:x="341" fg:w="7"/><text x="8.4827%" y="335.50"></text></g><g><title>hx`&lt;helix_core::graphemes::RopeGraphemes as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 2.29%)</title><rect x="6.5910%" y="357" width="2.2936%" height="15" fill="rgb(254,173,49)" fg:x="273" fg:w="95"/><text x="6.8410%" y="367.50">h..</text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::next_boundary (75 samples, 1.81%)</title><rect x="7.0739%" y="341" width="1.8107%" height="15" fill="rgb(221,1,38)" fg:x="293" fg:w="75"/><text x="7.3239%" y="351.50">h..</text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::is_boundary (20 samples, 0.48%)</title><rect x="8.4017%" y="325" width="0.4829%" height="15" fill="rgb(206,124,46)" fg:x="348" fg:w="20"/><text x="8.6517%" y="335.50"></text></g><g><title>hx`helix_core::graphemes::Grapheme::new (4 samples, 0.10%)</title><rect x="8.8846%" y="357" width="0.0966%" height="15" fill="rgb(249,21,11)" fg:x="368" fg:w="4"/><text x="9.1346%" y="367.50"></text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::advance_grapheme (136 samples, 3.28%)</title><rect x="5.7702%" y="373" width="3.2834%" height="15" fill="rgb(222,201,40)" fg:x="239" fg:w="136"/><text x="6.0202%" y="383.50">hx`..</text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::next_boundary (3 samples, 0.07%)</title><rect x="8.9812%" y="357" width="0.0724%" height="15" fill="rgb(235,61,29)" fg:x="372" fg:w="3"/><text x="9.2312%" y="367.50"></text></g><g><title>hx`&lt;helix_core::doc_formatter::DocumentFormatter as core::iter::traits::iterator::Iterator&gt;::next (191 samples, 4.61%)</title><rect x="4.5389%" y="389" width="4.6113%" height="15" fill="rgb(219,207,3)" fg:x="188" fg:w="191"/><text x="4.7889%" y="399.50">hx`&lt;h..</text></g><g><title>hx`helix_core::graphemes::Grapheme::new (4 samples, 0.10%)</title><rect x="9.0536%" y="373" width="0.0966%" height="15" fill="rgb(222,56,46)" fg:x="375" fg:w="4"/><text x="9.3036%" y="383.50"></text></g><g><title>hx`&lt;helix_core::syntax::Merge&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="9.1502%" y="389" width="0.0241%" height="15" fill="rgb(239,76,54)" fg:x="379" fg:w="1"/><text x="9.4002%" y="399.50"></text></g><g><title>hx`tree_sitter::QueryMatch::satisfies_text_predicates (3 samples, 0.07%)</title><rect x="9.5123%" y="325" width="0.0724%" height="15" fill="rgb(231,124,27)" fg:x="394" fg:w="3"/><text x="9.7623%" y="335.50"></text></g><g><title>hx`tree_sitter::QueryMatch::satisfies_text_predicates::get_text (1 samples, 0.02%)</title><rect x="9.5847%" y="325" width="0.0241%" height="15" fill="rgb(249,195,6)" fg:x="397" fg:w="1"/><text x="9.8347%" y="335.50"></text></g><g><title>hx`&lt;helix_core::syntax::RopeProvider as tree_sitter::TextProvider&gt;::text (5 samples, 0.12%)</title><rect x="9.6089%" y="309" width="0.1207%" height="15" fill="rgb(237,174,47)" fg:x="398" fg:w="5"/><text x="9.8589%" y="319.50"></text></g><g><title>hx`ropey::slice::RopeSlice::byte_slice (5 samples, 0.12%)</title><rect x="9.6089%" y="293" width="0.1207%" height="15" fill="rgb(206,201,31)" fg:x="398" fg:w="5"/><text x="9.8589%" y="303.50"></text></g><g><title>hx`ropey::slice::RopeSlice::new_with_byte_range (5 samples, 0.12%)</title><rect x="9.6089%" y="277" width="0.1207%" height="15" fill="rgb(231,57,52)" fg:x="398" fg:w="5"/><text x="9.8589%" y="287.50"></text></g><g><title>hx`tree_sitter::QueryMatch::satisfies_text_predicates::get_text (1 samples, 0.02%)</title><rect x="9.7296%" y="309" width="0.0241%" height="15" fill="rgb(248,177,22)" fg:x="403" fg:w="1"/><text x="9.9796%" y="319.50"></text></g><g><title>hx`ropey::iter::Chunks::next_impl (1 samples, 0.02%)</title><rect x="9.7296%" y="293" width="0.0241%" height="15" fill="rgb(215,211,37)" fg:x="403" fg:w="1"/><text x="9.9796%" y="303.50"></text></g><g><title>hx`tree_sitter::QueryMatch::satisfies_text_predicates (7 samples, 0.17%)</title><rect x="9.6089%" y="325" width="0.1690%" height="15" fill="rgb(241,128,51)" fg:x="398" fg:w="7"/><text x="9.8589%" y="335.50"></text></g><g><title>hx`ts_node_end_byte (1 samples, 0.02%)</title><rect x="9.7537%" y="309" width="0.0241%" height="15" fill="rgb(227,165,31)" fg:x="404" fg:w="1"/><text x="10.0037%" y="319.50"></text></g><g><title>hx`ts_query_cursor__first_in_progress_capture (2 samples, 0.05%)</title><rect x="9.7779%" y="325" width="0.0483%" height="15" fill="rgb(228,167,24)" fg:x="405" fg:w="2"/><text x="10.0279%" y="335.50"></text></g><g><title>hx`array__grow (2 samples, 0.05%)</title><rect x="10.9367%" y="293" width="0.0483%" height="15" fill="rgb(228,143,12)" fg:x="453" fg:w="2"/><text x="11.1867%" y="303.50"></text></g><g><title>hx`ts_query_cursor__capture (1 samples, 0.02%)</title><rect x="10.9850%" y="293" width="0.0241%" height="15" fill="rgb(249,149,8)" fg:x="455" fg:w="1"/><text x="11.2350%" y="303.50"></text></g><g><title>hx`ts_query_cursor__prepare_to_capture (1 samples, 0.02%)</title><rect x="10.9850%" y="277" width="0.0241%" height="15" fill="rgb(243,35,44)" fg:x="455" fg:w="1"/><text x="11.2350%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (21 samples, 0.51%)</title><rect x="11.0092%" y="293" width="0.5070%" height="15" fill="rgb(246,89,9)" fg:x="456" fg:w="21"/><text x="11.2592%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_goto_first_child (1 samples, 0.02%)</title><rect x="11.5162%" y="293" width="0.0241%" height="15" fill="rgb(233,213,13)" fg:x="477" fg:w="1"/><text x="11.7662%" y="303.50"></text></g><g><title>hx`ts_query_cursor__advance (69 samples, 1.67%)</title><rect x="10.0435%" y="309" width="1.6659%" height="15" fill="rgb(233,141,41)" fg:x="416" fg:w="69"/><text x="10.2935%" y="319.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (7 samples, 0.17%)</title><rect x="11.5403%" y="293" width="0.1690%" height="15" fill="rgb(239,167,4)" fg:x="478" fg:w="7"/><text x="11.7903%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (3 samples, 0.07%)</title><rect x="11.6369%" y="277" width="0.0724%" height="15" fill="rgb(209,217,16)" fg:x="482" fg:w="3"/><text x="11.8869%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_current_status (8 samples, 0.19%)</title><rect x="11.7093%" y="309" width="0.1931%" height="15" fill="rgb(219,88,35)" fg:x="485" fg:w="8"/><text x="11.9593%" y="319.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (1 samples, 0.02%)</title><rect x="11.9025%" y="309" width="0.0241%" height="15" fill="rgb(220,193,23)" fg:x="493" fg:w="1"/><text x="12.1525%" y="319.50"></text></g><g><title>hx`&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 samples, 2.46%)</title><rect x="9.5123%" y="341" width="2.4626%" height="15" fill="rgb(230,90,52)" fg:x="394" fg:w="102"/><text x="9.7623%" y="351.50">hx..</text></g><g><title>hx`ts_query_cursor_next_capture (89 samples, 2.15%)</title><rect x="9.8262%" y="325" width="2.1487%" height="15" fill="rgb(252,106,19)" fg:x="407" fg:w="89"/><text x="10.0762%" y="335.50">h..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.05%)</title><rect x="11.9266%" y="309" width="0.0483%" height="15" fill="rgb(206,74,20)" fg:x="494" fg:w="2"/><text x="12.1766%" y="319.50"></text></g><g><title>hx`core::slice::rotate::ptr_rotate (1 samples, 0.02%)</title><rect x="11.9749%" y="341" width="0.0241%" height="15" fill="rgb(230,138,44)" fg:x="496" fg:w="1"/><text x="12.2249%" y="351.50"></text></g><g><title>hx`helix_core::syntax::HighlightIter::sort_layers (6 samples, 0.14%)</title><rect x="11.9990%" y="341" width="0.1449%" height="15" fill="rgb(235,182,43)" fg:x="497" fg:w="6"/><text x="12.2490%" y="351.50"></text></g><g><title>hx`helix_core::syntax::HighlightIterLayer::sort_key (6 samples, 0.14%)</title><rect x="11.9990%" y="325" width="0.1449%" height="15" fill="rgb(242,16,51)" fg:x="497" fg:w="6"/><text x="12.2490%" y="335.50"></text></g><g><title>hx`&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="12.1197%" y="309" width="0.0241%" height="15" fill="rgb(248,9,4)" fg:x="502" fg:w="1"/><text x="12.3697%" y="319.50"></text></g><g><title>hx`ts_query_cursor_next_capture (1 samples, 0.02%)</title><rect x="12.1197%" y="293" width="0.0241%" height="15" fill="rgb(210,31,22)" fg:x="502" fg:w="1"/><text x="12.3697%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_current_status (1 samples, 0.02%)</title><rect x="12.1197%" y="277" width="0.0241%" height="15" fill="rgb(239,54,39)" fg:x="502" fg:w="1"/><text x="12.3697%" y="287.50"></text></g><g><title>hx`helix_core::syntax::HighlightIterLayer::sort_key (1 samples, 0.02%)</title><rect x="12.1439%" y="341" width="0.0241%" height="15" fill="rgb(230,99,41)" fg:x="503" fg:w="1"/><text x="12.3939%" y="351.50"></text></g><g><title>hx`&lt;helix_core::syntax::HighlightIter as core::iter::traits::iterator::Iterator&gt;::next (118 samples, 2.85%)</title><rect x="9.3433%" y="357" width="2.8489%" height="15" fill="rgb(253,106,12)" fg:x="387" fg:w="118"/><text x="9.5933%" y="367.50">hx..</text></g><g><title>hx`ropey::slice::RopeSlice::byte_slice (1 samples, 0.02%)</title><rect x="12.1680%" y="341" width="0.0241%" height="15" fill="rgb(213,46,41)" fg:x="504" fg:w="1"/><text x="12.4180%" y="351.50"></text></g><g><title>hx`ropey::slice::RopeSlice::new_with_byte_range (1 samples, 0.02%)</title><rect x="12.1680%" y="325" width="0.0241%" height="15" fill="rgb(215,133,35)" fg:x="504" fg:w="1"/><text x="12.4180%" y="335.50"></text></g><g><title>hx`ropey::slice::RopeSlice::try_chunk_at_byte (2 samples, 0.05%)</title><rect x="12.2163%" y="341" width="0.0483%" height="15" fill="rgb(213,28,5)" fg:x="506" fg:w="2"/><text x="12.4663%" y="351.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_byte (2 samples, 0.05%)</title><rect x="12.2163%" y="325" width="0.0483%" height="15" fill="rgb(215,77,49)" fg:x="506" fg:w="2"/><text x="12.4663%" y="335.50"></text></g><g><title>hx`helix_core::graphemes::is_grapheme_boundary_byte (5 samples, 0.12%)</title><rect x="12.1922%" y="357" width="0.1207%" height="15" fill="rgb(248,100,22)" fg:x="505" fg:w="5"/><text x="12.4422%" y="367.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::is_boundary (2 samples, 0.05%)</title><rect x="12.2646%" y="341" width="0.0483%" height="15" fill="rgb(208,67,9)" fg:x="508" fg:w="2"/><text x="12.5146%" y="351.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::grapheme_category (1 samples, 0.02%)</title><rect x="12.2887%" y="325" width="0.0241%" height="15" fill="rgb(219,133,21)" fg:x="509" fg:w="1"/><text x="12.5387%" y="335.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (133 samples, 3.21%)</title><rect x="9.3192%" y="373" width="3.2110%" height="15" fill="rgb(246,46,29)" fg:x="386" fg:w="133"/><text x="9.5692%" y="383.50">hx`..</text></g><g><title>hx`ropey::slice::RopeSlice::byte_to_char (9 samples, 0.22%)</title><rect x="12.3129%" y="357" width="0.2173%" height="15" fill="rgb(246,185,52)" fg:x="510" fg:w="9"/><text x="12.5629%" y="367.50"></text></g><g><title>hx`ropey::slice::RopeSlice::try_chunk_at_byte (3 samples, 0.07%)</title><rect x="12.4577%" y="341" width="0.0724%" height="15" fill="rgb(252,136,11)" fg:x="516" fg:w="3"/><text x="12.7077%" y="351.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_byte (2 samples, 0.05%)</title><rect x="12.4819%" y="325" width="0.0483%" height="15" fill="rgb(219,138,53)" fg:x="517" fg:w="2"/><text x="12.7319%" y="335.50"></text></g><g><title>hx`&lt;helix_core::syntax::HighlightIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="12.5302%" y="373" width="0.0241%" height="15" fill="rgb(211,51,23)" fg:x="519" fg:w="1"/><text x="12.7802%" y="383.50"></text></g><g><title>hx`&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load (1 samples, 0.02%)</title><rect x="12.9406%" y="325" width="0.0241%" height="15" fill="rgb(247,221,28)" fg:x="536" fg:w="1"/><text x="13.1906%" y="335.50"></text></g><g><title>hx`ropey::slice::RopeSlice::byte_slice (10 samples, 0.24%)</title><rect x="13.1096%" y="277" width="0.2414%" height="15" fill="rgb(251,222,45)" fg:x="543" fg:w="10"/><text x="13.3596%" y="287.50"></text></g><g><title>hx`ropey::slice::RopeSlice::new_with_byte_range (9 samples, 0.22%)</title><rect x="13.1338%" y="261" width="0.2173%" height="15" fill="rgb(217,162,53)" fg:x="544" fg:w="9"/><text x="13.3838%" y="271.50"></text></g><g><title>hx`&lt;helix_core::syntax::RopeProvider as tree_sitter::TextProvider&gt;::text (11 samples, 0.27%)</title><rect x="13.1096%" y="293" width="0.2656%" height="15" fill="rgb(229,93,14)" fg:x="543" fg:w="11"/><text x="13.3596%" y="303.50"></text></g><g><title>hx`ropey::slice::RopeSlice::new_with_byte_range (1 samples, 0.02%)</title><rect x="13.3510%" y="277" width="0.0241%" height="15" fill="rgb(209,67,49)" fg:x="553" fg:w="1"/><text x="13.6010%" y="287.50"></text></g><g><title>hx`regex::re_bytes::Regex::is_match_at (5 samples, 0.12%)</title><rect x="13.3752%" y="293" width="0.1207%" height="15" fill="rgb(213,87,29)" fg:x="554" fg:w="5"/><text x="13.6252%" y="303.50"></text></g><g><title>hx`tree_sitter::QueryMatch::satisfies_text_predicates (22 samples, 0.53%)</title><rect x="12.9889%" y="309" width="0.5311%" height="15" fill="rgb(205,151,52)" fg:x="538" fg:w="22"/><text x="13.2389%" y="319.50"></text></g><g><title>hx`tree_sitter::QueryMatch::satisfies_text_predicates::get_text (1 samples, 0.02%)</title><rect x="13.4959%" y="293" width="0.0241%" height="15" fill="rgb(253,215,39)" fg:x="559" fg:w="1"/><text x="13.7459%" y="303.50"></text></g><g><title>hx`ropey::iter::Chunks::next_impl (1 samples, 0.02%)</title><rect x="13.4959%" y="277" width="0.0241%" height="15" fill="rgb(221,220,41)" fg:x="559" fg:w="1"/><text x="13.7459%" y="287.50"></text></g><g><title>hx`ts_query_cursor__first_in_progress_capture (7 samples, 0.17%)</title><rect x="13.5200%" y="309" width="0.1690%" height="15" fill="rgb(218,133,21)" fg:x="560" fg:w="7"/><text x="13.7700%" y="319.50"></text></g><g><title>hx`ts_query_cursor__add_state (1 samples, 0.02%)</title><rect x="14.1960%" y="293" width="0.0241%" height="15" fill="rgb(221,193,43)" fg:x="588" fg:w="1"/><text x="14.4460%" y="303.50"></text></g><g><title>hx`array__grow (1 samples, 0.02%)</title><rect x="16.3930%" y="277" width="0.0241%" height="15" fill="rgb(240,128,52)" fg:x="679" fg:w="1"/><text x="16.6430%" y="287.50"></text></g><g><title>hx`ts_query_cursor__add_state (1 samples, 0.02%)</title><rect x="16.4172%" y="277" width="0.0241%" height="15" fill="rgb(253,114,12)" fg:x="680" fg:w="1"/><text x="16.6672%" y="287.50"></text></g><g><title>hx`ts_malloc_default (1 samples, 0.02%)</title><rect x="16.6345%" y="245" width="0.0241%" height="15" fill="rgb(215,223,47)" fg:x="689" fg:w="1"/><text x="16.8845%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="16.6345%" y="229" width="0.0241%" height="15" fill="rgb(248,225,23)" fg:x="689" fg:w="1"/><text x="16.8845%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="16.6345%" y="213" width="0.0241%" height="15" fill="rgb(250,108,0)" fg:x="689" fg:w="1"/><text x="16.8845%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="16.6345%" y="197" width="0.0241%" height="15" fill="rgb(228,208,7)" fg:x="689" fg:w="1"/><text x="16.8845%" y="207.50"></text></g><g><title>hx`array__grow (4 samples, 0.10%)</title><rect x="16.5862%" y="261" width="0.0966%" height="15" fill="rgb(244,45,10)" fg:x="687" fg:w="4"/><text x="16.8362%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="16.6586%" y="245" width="0.0241%" height="15" fill="rgb(207,125,25)" fg:x="690" fg:w="1"/><text x="16.9086%" y="255.50"></text></g><g><title>hx`ts_query_cursor__capture (13 samples, 0.31%)</title><rect x="16.4413%" y="277" width="0.3139%" height="15" fill="rgb(210,195,18)" fg:x="681" fg:w="13"/><text x="16.6913%" y="287.50"></text></g><g><title>hx`ts_query_cursor__prepare_to_capture (3 samples, 0.07%)</title><rect x="16.6828%" y="261" width="0.0724%" height="15" fill="rgb(249,80,12)" fg:x="691" fg:w="3"/><text x="16.9328%" y="271.50"></text></g><g><title>hx`ts_query_cursor__prepare_to_capture (1 samples, 0.02%)</title><rect x="16.7552%" y="277" width="0.0241%" height="15" fill="rgb(221,65,9)" fg:x="694" fg:w="1"/><text x="17.0052%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (24 samples, 0.58%)</title><rect x="16.7793%" y="277" width="0.5794%" height="15" fill="rgb(235,49,36)" fg:x="695" fg:w="24"/><text x="17.0293%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_goto_first_child (5 samples, 0.12%)</title><rect x="17.3588%" y="277" width="0.1207%" height="15" fill="rgb(225,32,20)" fg:x="719" fg:w="5"/><text x="17.6088%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (6 samples, 0.14%)</title><rect x="17.7692%" y="261" width="0.1449%" height="15" fill="rgb(215,141,46)" fg:x="736" fg:w="6"/><text x="18.0192%" y="271.50"></text></g><g><title>hx`ts_query_cursor__advance (154 samples, 3.72%)</title><rect x="14.2202%" y="293" width="3.7180%" height="15" fill="rgb(250,160,47)" fg:x="589" fg:w="154"/><text x="14.4702%" y="303.50">hx`t..</text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (19 samples, 0.46%)</title><rect x="17.4795%" y="277" width="0.4587%" height="15" fill="rgb(216,222,40)" fg:x="724" fg:w="19"/><text x="17.7295%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_goto_first_child (1 samples, 0.02%)</title><rect x="17.9141%" y="261" width="0.0241%" height="15" fill="rgb(234,217,39)" fg:x="742" fg:w="1"/><text x="18.1641%" y="271.50"></text></g><g><title>hx`ts_query_cursor__compare_captures (1 samples, 0.02%)</title><rect x="17.9382%" y="293" width="0.0241%" height="15" fill="rgb(207,178,40)" fg:x="743" fg:w="1"/><text x="18.1882%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_current_status (25 samples, 0.60%)</title><rect x="17.9623%" y="293" width="0.6036%" height="15" fill="rgb(221,136,13)" fg:x="744" fg:w="25"/><text x="18.2123%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_goto_first_child (1 samples, 0.02%)</title><rect x="18.5659%" y="293" width="0.0241%" height="15" fill="rgb(249,199,10)" fg:x="769" fg:w="1"/><text x="18.8159%" y="303.50"></text></g><g><title>hx`ts_query_cursor_next_capture (206 samples, 4.97%)</title><rect x="13.6890%" y="309" width="4.9734%" height="15" fill="rgb(249,222,13)" fg:x="567" fg:w="206"/><text x="13.9390%" y="319.50">hx`ts_..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.07%)</title><rect x="18.5901%" y="293" width="0.0724%" height="15" fill="rgb(244,185,38)" fg:x="770" fg:w="3"/><text x="18.8401%" y="303.50"></text></g><g><title>hx`ts_query_cursor_remove_match (4 samples, 0.10%)</title><rect x="18.6625%" y="309" width="0.0966%" height="15" fill="rgb(236,202,9)" fg:x="773" fg:w="4"/><text x="18.9125%" y="319.50"></text></g><g><title>hx`&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (243 samples, 5.87%)</title><rect x="12.9648%" y="325" width="5.8667%" height="15" fill="rgb(250,229,37)" fg:x="537" fg:w="243"/><text x="13.2148%" y="335.50">hx`&lt;tre..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.07%)</title><rect x="18.7591%" y="309" width="0.0724%" height="15" fill="rgb(206,174,23)" fg:x="777" fg:w="3"/><text x="19.0091%" y="319.50"></text></g><g><title>hx`core::slice::rotate::ptr_rotate (1 samples, 0.02%)</title><rect x="18.8315%" y="325" width="0.0241%" height="15" fill="rgb(211,33,43)" fg:x="780" fg:w="1"/><text x="19.0815%" y="335.50"></text></g><g><title>hx`helix_core::syntax::HighlightIter::sort_layers (14 samples, 0.34%)</title><rect x="18.8556%" y="325" width="0.3380%" height="15" fill="rgb(245,58,50)" fg:x="781" fg:w="14"/><text x="19.1056%" y="335.50"></text></g><g><title>hx`helix_core::syntax::HighlightIterLayer::sort_key (8 samples, 0.19%)</title><rect x="19.0005%" y="309" width="0.1931%" height="15" fill="rgb(244,68,36)" fg:x="787" fg:w="8"/><text x="19.2505%" y="319.50"></text></g><g><title>hx`&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="19.1453%" y="293" width="0.0483%" height="15" fill="rgb(232,229,15)" fg:x="793" fg:w="2"/><text x="19.3953%" y="303.50"></text></g><g><title>hx`ts_query_cursor_next_capture (1 samples, 0.02%)</title><rect x="19.1695%" y="277" width="0.0241%" height="15" fill="rgb(254,30,23)" fg:x="794" fg:w="1"/><text x="19.4195%" y="287.50"></text></g><g><title>hx`ts_query_cursor__advance (1 samples, 0.02%)</title><rect x="19.1695%" y="261" width="0.0241%" height="15" fill="rgb(235,160,14)" fg:x="794" fg:w="1"/><text x="19.4195%" y="271.50"></text></g><g><title>hx`helix_core::syntax::HighlightIterLayer::sort_key (1 samples, 0.02%)</title><rect x="19.1936%" y="325" width="0.0241%" height="15" fill="rgb(212,155,44)" fg:x="795" fg:w="1"/><text x="19.4436%" y="335.50"></text></g><g><title>hx`ropey::slice::RopeSlice::byte_slice (5 samples, 0.12%)</title><rect x="19.2178%" y="325" width="0.1207%" height="15" fill="rgb(226,2,50)" fg:x="796" fg:w="5"/><text x="19.4678%" y="335.50"></text></g><g><title>hx`ropey::slice::RopeSlice::new_with_byte_range (5 samples, 0.12%)</title><rect x="19.2178%" y="309" width="0.1207%" height="15" fill="rgb(234,177,6)" fg:x="796" fg:w="5"/><text x="19.4678%" y="319.50"></text></g><g><title>hx`tree_sitter::QueryMatch::satisfies_text_predicates (1 samples, 0.02%)</title><rect x="19.3385%" y="325" width="0.0241%" height="15" fill="rgb(217,24,9)" fg:x="801" fg:w="1"/><text x="19.5885%" y="335.50"></text></g><g><title>hx`&lt;helix_core::syntax::HighlightIter as core::iter::traits::iterator::Iterator&gt;::next (275 samples, 6.64%)</title><rect x="12.7475%" y="341" width="6.6393%" height="15" fill="rgb(220,13,46)" fg:x="528" fg:w="275"/><text x="12.9975%" y="351.50">hx`&lt;helix..</text></g><g><title>hx`ts_query_cursor_next_capture (1 samples, 0.02%)</title><rect x="19.3626%" y="325" width="0.0241%" height="15" fill="rgb(239,221,27)" fg:x="802" fg:w="1"/><text x="19.6126%" y="335.50"></text></g><g><title>hx`&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="19.3868%" y="341" width="0.0241%" height="15" fill="rgb(222,198,25)" fg:x="803" fg:w="1"/><text x="19.6368%" y="351.50"></text></g><g><title>hx`ropey::slice::RopeSlice::try_chunk_at_byte (7 samples, 0.17%)</title><rect x="19.4351%" y="325" width="0.1690%" height="15" fill="rgb(211,99,13)" fg:x="805" fg:w="7"/><text x="19.6851%" y="335.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_byte (3 samples, 0.07%)</title><rect x="19.5316%" y="309" width="0.0724%" height="15" fill="rgb(232,111,31)" fg:x="809" fg:w="3"/><text x="19.7816%" y="319.50"></text></g><g><title>hx`helix_core::graphemes::is_grapheme_boundary_byte (17 samples, 0.41%)</title><rect x="19.4109%" y="341" width="0.4104%" height="15" fill="rgb(245,82,37)" fg:x="804" fg:w="17"/><text x="19.6609%" y="351.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::is_boundary (9 samples, 0.22%)</title><rect x="19.6041%" y="325" width="0.2173%" height="15" fill="rgb(227,149,46)" fg:x="812" fg:w="9"/><text x="19.8541%" y="335.50"></text></g><g><title>hx`ropey::slice::RopeSlice::byte_to_char (19 samples, 0.46%)</title><rect x="19.8213%" y="341" width="0.4587%" height="15" fill="rgb(218,36,50)" fg:x="821" fg:w="19"/><text x="20.0713%" y="351.50"></text></g><g><title>hx`ropey::slice::RopeSlice::try_chunk_at_byte (6 samples, 0.14%)</title><rect x="20.1352%" y="325" width="0.1449%" height="15" fill="rgb(226,80,48)" fg:x="834" fg:w="6"/><text x="20.3852%" y="335.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_byte (2 samples, 0.05%)</title><rect x="20.2318%" y="309" width="0.0483%" height="15" fill="rgb(238,224,15)" fg:x="838" fg:w="2"/><text x="20.4818%" y="319.50"></text></g><g><title>hx`ropey::slice::RopeSlice::try_chunk_at_byte (1 samples, 0.02%)</title><rect x="20.2801%" y="341" width="0.0241%" height="15" fill="rgb(241,136,10)" fg:x="840" fg:w="1"/><text x="20.5301%" y="351.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (322 samples, 7.77%)</title><rect x="12.6750%" y="357" width="7.7740%" height="15" fill="rgb(208,32,45)" fg:x="525" fg:w="322"/><text x="12.9250%" y="367.50">hx`&lt;core::i..</text></g><g><title>hx`ts_node_end_byte (6 samples, 0.14%)</title><rect x="20.3042%" y="341" width="0.1449%" height="15" fill="rgb(207,135,9)" fg:x="841" fg:w="6"/><text x="20.5542%" y="351.50"></text></g><g><title>hx`&lt;helix_core::syntax::HighlightIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="20.4491%" y="357" width="0.0241%" height="15" fill="rgb(206,86,44)" fg:x="847" fg:w="1"/><text x="20.6991%" y="367.50"></text></g><g><title>hx`&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load (2 samples, 0.05%)</title><rect x="20.6663%" y="309" width="0.0483%" height="15" fill="rgb(245,177,15)" fg:x="856" fg:w="2"/><text x="20.9163%" y="319.50"></text></g><g><title>hx`&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load::_{{closure}} (2 samples, 0.05%)</title><rect x="20.6663%" y="293" width="0.0483%" height="15" fill="rgb(206,64,50)" fg:x="856" fg:w="2"/><text x="20.9163%" y="303.50"></text></g><g><title>hx`regex::dfa::Fsm::next_state (1 samples, 0.02%)</title><rect x="20.7871%" y="277" width="0.0241%" height="15" fill="rgb(234,36,40)" fg:x="861" fg:w="1"/><text x="21.0371%" y="287.50"></text></g><g><title>hx`tree_sitter::QueryMatch::satisfies_text_predicates (4 samples, 0.10%)</title><rect x="20.7388%" y="293" width="0.0966%" height="15" fill="rgb(213,64,8)" fg:x="859" fg:w="4"/><text x="20.9888%" y="303.50"></text></g><g><title>hx`tree_sitter::QueryMatch::satisfies_text_predicates::get_text (1 samples, 0.02%)</title><rect x="20.8112%" y="277" width="0.0241%" height="15" fill="rgb(210,75,36)" fg:x="862" fg:w="1"/><text x="21.0612%" y="287.50"></text></g><g><title>hx`ts_query_cursor__first_in_progress_capture (3 samples, 0.07%)</title><rect x="20.8353%" y="293" width="0.0724%" height="15" fill="rgb(229,88,21)" fg:x="863" fg:w="3"/><text x="21.0853%" y="303.50"></text></g><g><title>hx`ts_query_cursor__add_state (1 samples, 0.02%)</title><rect x="21.5596%" y="261" width="0.0241%" height="15" fill="rgb(252,204,47)" fg:x="893" fg:w="1"/><text x="21.8096%" y="271.50"></text></g><g><title>hx`ts_query_cursor__capture (2 samples, 0.05%)</title><rect x="21.5838%" y="261" width="0.0483%" height="15" fill="rgb(208,77,27)" fg:x="894" fg:w="2"/><text x="21.8338%" y="271.50"></text></g><g><title>hx`ts_query_cursor__prepare_to_capture (1 samples, 0.02%)</title><rect x="21.6079%" y="245" width="0.0241%" height="15" fill="rgb(221,76,26)" fg:x="895" fg:w="1"/><text x="21.8579%" y="255.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (13 samples, 0.31%)</title><rect x="21.6321%" y="261" width="0.3139%" height="15" fill="rgb(225,139,18)" fg:x="896" fg:w="13"/><text x="21.8821%" y="271.50"></text></g><g><title>hx`ts_tree_cursor_goto_first_child (3 samples, 0.07%)</title><rect x="21.9459%" y="261" width="0.0724%" height="15" fill="rgb(230,137,11)" fg:x="909" fg:w="3"/><text x="22.1959%" y="271.50"></text></g><g><title>hx`ts_query_cursor__advance (50 samples, 1.21%)</title><rect x="20.9561%" y="277" width="1.2071%" height="15" fill="rgb(212,28,1)" fg:x="868" fg:w="50"/><text x="21.2061%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (6 samples, 0.14%)</title><rect x="22.0183%" y="261" width="0.1449%" height="15" fill="rgb(248,164,17)" fg:x="912" fg:w="6"/><text x="22.2683%" y="271.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (1 samples, 0.02%)</title><rect x="22.1391%" y="245" width="0.0241%" height="15" fill="rgb(222,171,42)" fg:x="917" fg:w="1"/><text x="22.3891%" y="255.50"></text></g><g><title>hx`ts_query_cursor_next_capture (61 samples, 1.47%)</title><rect x="20.9078%" y="293" width="1.4727%" height="15" fill="rgb(243,84,45)" fg:x="866" fg:w="61"/><text x="21.1578%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_current_status (9 samples, 0.22%)</title><rect x="22.1632%" y="277" width="0.2173%" height="15" fill="rgb(252,49,23)" fg:x="918" fg:w="9"/><text x="22.4132%" y="287.50"></text></g><g><title>hx`&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 1.76%)</title><rect x="20.7146%" y="309" width="1.7624%" height="15" fill="rgb(215,19,7)" fg:x="858" fg:w="73"/><text x="20.9646%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.10%)</title><rect x="22.3805%" y="293" width="0.0966%" height="15" fill="rgb(238,81,41)" fg:x="927" fg:w="4"/><text x="22.6305%" y="303.50"></text></g><g><title>hx`helix_core::syntax::HighlightIter::sort_layers (3 samples, 0.07%)</title><rect x="22.4771%" y="309" width="0.0724%" height="15" fill="rgb(210,199,37)" fg:x="931" fg:w="3"/><text x="22.7271%" y="319.50"></text></g><g><title>hx`helix_core::syntax::HighlightIterLayer::sort_key (2 samples, 0.05%)</title><rect x="22.5012%" y="293" width="0.0483%" height="15" fill="rgb(244,192,49)" fg:x="932" fg:w="2"/><text x="22.7512%" y="303.50"></text></g><g><title>hx`&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="22.5254%" y="277" width="0.0241%" height="15" fill="rgb(226,211,11)" fg:x="933" fg:w="1"/><text x="22.7754%" y="287.50"></text></g><g><title>hx`ts_query_cursor_next_capture (1 samples, 0.02%)</title><rect x="22.5254%" y="261" width="0.0241%" height="15" fill="rgb(236,162,54)" fg:x="933" fg:w="1"/><text x="22.7754%" y="271.50"></text></g><g><title>hx`ts_query_cursor__advance (1 samples, 0.02%)</title><rect x="22.5254%" y="245" width="0.0241%" height="15" fill="rgb(220,229,9)" fg:x="933" fg:w="1"/><text x="22.7754%" y="255.50"></text></g><g><title>hx`ts_query_cursor__capture (1 samples, 0.02%)</title><rect x="22.5254%" y="229" width="0.0241%" height="15" fill="rgb(250,87,22)" fg:x="933" fg:w="1"/><text x="22.7754%" y="239.50"></text></g><g><title>hx`&lt;helix_core::syntax::HighlightIter as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 2.03%)</title><rect x="20.5456%" y="325" width="2.0280%" height="15" fill="rgb(239,43,17)" fg:x="851" fg:w="84"/><text x="20.7956%" y="335.50">h..</text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="22.5495%" y="309" width="0.0241%" height="15" fill="rgb(231,177,25)" fg:x="934" fg:w="1"/><text x="22.7995%" y="319.50"></text></g><g><title>hx`ropey::slice::RopeSlice::try_chunk_at_byte (7 samples, 0.17%)</title><rect x="22.5978%" y="309" width="0.1690%" height="15" fill="rgb(219,179,1)" fg:x="936" fg:w="7"/><text x="22.8478%" y="319.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_byte (7 samples, 0.17%)</title><rect x="22.5978%" y="293" width="0.1690%" height="15" fill="rgb(238,219,53)" fg:x="936" fg:w="7"/><text x="22.8478%" y="303.50"></text></g><g><title>hx`helix_core::graphemes::is_grapheme_boundary_byte (10 samples, 0.24%)</title><rect x="22.5736%" y="325" width="0.2414%" height="15" fill="rgb(232,167,36)" fg:x="935" fg:w="10"/><text x="22.8236%" y="335.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::is_boundary (2 samples, 0.05%)</title><rect x="22.7668%" y="309" width="0.0483%" height="15" fill="rgb(244,19,51)" fg:x="943" fg:w="2"/><text x="23.0168%" y="319.50"></text></g><g><title>hx`helix_core::syntax::HighlightIter::sort_layers (1 samples, 0.02%)</title><rect x="22.8151%" y="325" width="0.0241%" height="15" fill="rgb(224,6,22)" fg:x="945" fg:w="1"/><text x="23.0651%" y="335.50"></text></g><g><title>hx`ropey::slice::RopeSlice::byte_slice (1 samples, 0.02%)</title><rect x="22.8392%" y="325" width="0.0241%" height="15" fill="rgb(224,145,5)" fg:x="946" fg:w="1"/><text x="23.0892%" y="335.50"></text></g><g><title>hx`ropey::slice::RopeSlice::byte_to_char (13 samples, 0.31%)</title><rect x="22.8634%" y="325" width="0.3139%" height="15" fill="rgb(234,130,49)" fg:x="947" fg:w="13"/><text x="23.1134%" y="335.50"></text></g><g><title>hx`ropey::slice::RopeSlice::try_chunk_at_byte (3 samples, 0.07%)</title><rect x="23.1048%" y="309" width="0.0724%" height="15" fill="rgb(254,6,2)" fg:x="957" fg:w="3"/><text x="23.3548%" y="319.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_byte (3 samples, 0.07%)</title><rect x="23.1048%" y="293" width="0.0724%" height="15" fill="rgb(208,96,46)" fg:x="957" fg:w="3"/><text x="23.3548%" y="303.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (111 samples, 2.68%)</title><rect x="20.5215%" y="341" width="2.6799%" height="15" fill="rgb(239,3,39)" fg:x="850" fg:w="111"/><text x="20.7715%" y="351.50">hx..</text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::is_boundary (1 samples, 0.02%)</title><rect x="23.1772%" y="325" width="0.0241%" height="15" fill="rgb(233,210,1)" fg:x="960" fg:w="1"/><text x="23.4272%" y="335.50"></text></g><g><title>hx`&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load (1 samples, 0.02%)</title><rect x="23.2255%" y="293" width="0.0241%" height="15" fill="rgb(244,137,37)" fg:x="962" fg:w="1"/><text x="23.4755%" y="303.50"></text></g><g><title>hx`&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load::_{{closure}} (1 samples, 0.02%)</title><rect x="23.2255%" y="277" width="0.0241%" height="15" fill="rgb(240,136,2)" fg:x="962" fg:w="1"/><text x="23.4755%" y="287.50"></text></g><g><title>hx`&lt;helix_core::syntax::RopeProvider as tree_sitter::TextProvider&gt;::text (1 samples, 0.02%)</title><rect x="23.2496%" y="261" width="0.0241%" height="15" fill="rgb(239,18,37)" fg:x="963" fg:w="1"/><text x="23.4996%" y="271.50"></text></g><g><title>hx`ropey::slice::RopeSlice::byte_slice (1 samples, 0.02%)</title><rect x="23.2496%" y="245" width="0.0241%" height="15" fill="rgb(218,185,22)" fg:x="963" fg:w="1"/><text x="23.4996%" y="255.50"></text></g><g><title>hx`ropey::slice::RopeSlice::new_with_byte_range (1 samples, 0.02%)</title><rect x="23.2496%" y="229" width="0.0241%" height="15" fill="rgb(225,218,4)" fg:x="963" fg:w="1"/><text x="23.4996%" y="239.50"></text></g><g><title>hx`tree_sitter::QueryMatch::satisfies_text_predicates (2 samples, 0.05%)</title><rect x="23.2496%" y="277" width="0.0483%" height="15" fill="rgb(230,182,32)" fg:x="963" fg:w="2"/><text x="23.4996%" y="287.50"></text></g><g><title>hx`tree_sitter::QueryMatch::satisfies_text_predicates::get_text (1 samples, 0.02%)</title><rect x="23.2738%" y="261" width="0.0241%" height="15" fill="rgb(242,56,43)" fg:x="964" fg:w="1"/><text x="23.5238%" y="271.50"></text></g><g><title>hx`ts_query_cursor__capture (1 samples, 0.02%)</title><rect x="23.6601%" y="245" width="0.0241%" height="15" fill="rgb(233,99,24)" fg:x="980" fg:w="1"/><text x="23.9101%" y="255.50"></text></g><g><title>hx`array__grow (1 samples, 0.02%)</title><rect x="23.6601%" y="229" width="0.0241%" height="15" fill="rgb(234,209,42)" fg:x="980" fg:w="1"/><text x="23.9101%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="23.6601%" y="213" width="0.0241%" height="15" fill="rgb(227,7,12)" fg:x="980" fg:w="1"/><text x="23.9101%" y="223.50"></text></g><g><title>hx`ts_query_cursor__prepare_to_capture (1 samples, 0.02%)</title><rect x="23.6842%" y="245" width="0.0241%" height="15" fill="rgb(245,203,43)" fg:x="981" fg:w="1"/><text x="23.9342%" y="255.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (5 samples, 0.12%)</title><rect x="23.7084%" y="245" width="0.1207%" height="15" fill="rgb(238,205,33)" fg:x="982" fg:w="5"/><text x="23.9584%" y="255.50"></text></g><g><title>hx`ts_tree_cursor_goto_first_child (1 samples, 0.02%)</title><rect x="23.8291%" y="245" width="0.0241%" height="15" fill="rgb(231,56,7)" fg:x="987" fg:w="1"/><text x="24.0791%" y="255.50"></text></g><g><title>hx`ts_query_cursor__advance (22 samples, 0.53%)</title><rect x="23.3704%" y="261" width="0.5311%" height="15" fill="rgb(244,186,29)" fg:x="968" fg:w="22"/><text x="23.6204%" y="271.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (2 samples, 0.05%)</title><rect x="23.8532%" y="245" width="0.0483%" height="15" fill="rgb(234,111,31)" fg:x="988" fg:w="2"/><text x="24.1032%" y="255.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (2 samples, 0.05%)</title><rect x="23.8532%" y="229" width="0.0483%" height="15" fill="rgb(241,149,10)" fg:x="988" fg:w="2"/><text x="24.1032%" y="239.50"></text></g><g><title>hx`ts_query_cursor__capture (1 samples, 0.02%)</title><rect x="23.9015%" y="261" width="0.0241%" height="15" fill="rgb(249,206,44)" fg:x="990" fg:w="1"/><text x="24.1515%" y="271.50"></text></g><g><title>hx`&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.72%)</title><rect x="23.2496%" y="293" width="0.7243%" height="15" fill="rgb(251,153,30)" fg:x="963" fg:w="30"/><text x="23.4996%" y="303.50"></text></g><g><title>hx`ts_query_cursor_next_capture (28 samples, 0.68%)</title><rect x="23.2979%" y="277" width="0.6760%" height="15" fill="rgb(239,152,38)" fg:x="965" fg:w="28"/><text x="23.5479%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_current_status (2 samples, 0.05%)</title><rect x="23.9256%" y="261" width="0.0483%" height="15" fill="rgb(249,139,47)" fg:x="991" fg:w="2"/><text x="24.1756%" y="271.50"></text></g><g><title>hx`&lt;helix_core::syntax::HighlightIter as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.85%)</title><rect x="23.2014%" y="309" width="0.8450%" height="15" fill="rgb(244,64,35)" fg:x="961" fg:w="35"/><text x="23.4514%" y="319.50"></text></g><g><title>hx`helix_core::syntax::HighlightIter::sort_layers (3 samples, 0.07%)</title><rect x="23.9739%" y="293" width="0.0724%" height="15" fill="rgb(216,46,15)" fg:x="993" fg:w="3"/><text x="24.2239%" y="303.50"></text></g><g><title>hx`helix_core::syntax::HighlightIterLayer::sort_key (1 samples, 0.02%)</title><rect x="24.0222%" y="277" width="0.0241%" height="15" fill="rgb(250,74,19)" fg:x="995" fg:w="1"/><text x="24.2722%" y="287.50"></text></g><g><title>hx`&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="24.0222%" y="261" width="0.0241%" height="15" fill="rgb(249,42,33)" fg:x="995" fg:w="1"/><text x="24.2722%" y="271.50"></text></g><g><title>hx`ts_query_cursor_next_capture (1 samples, 0.02%)</title><rect x="24.0222%" y="245" width="0.0241%" height="15" fill="rgb(242,149,17)" fg:x="995" fg:w="1"/><text x="24.2722%" y="255.50"></text></g><g><title>hx`ts_query_cursor__advance (1 samples, 0.02%)</title><rect x="24.0222%" y="229" width="0.0241%" height="15" fill="rgb(244,29,21)" fg:x="995" fg:w="1"/><text x="24.2722%" y="239.50"></text></g><g><title>hx`helix_core::graphemes::is_grapheme_boundary_byte (4 samples, 0.10%)</title><rect x="24.0464%" y="309" width="0.0966%" height="15" fill="rgb(220,130,37)" fg:x="996" fg:w="4"/><text x="24.2964%" y="319.50"></text></g><g><title>hx`ropey::slice::RopeSlice::try_chunk_at_byte (3 samples, 0.07%)</title><rect x="24.0705%" y="293" width="0.0724%" height="15" fill="rgb(211,67,2)" fg:x="997" fg:w="3"/><text x="24.3205%" y="303.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_byte (3 samples, 0.07%)</title><rect x="24.0705%" y="277" width="0.0724%" height="15" fill="rgb(235,68,52)" fg:x="997" fg:w="3"/><text x="24.3205%" y="287.50"></text></g><g><title>hx`ropey::slice::RopeSlice::byte_to_char (5 samples, 0.12%)</title><rect x="24.1429%" y="309" width="0.1207%" height="15" fill="rgb(246,142,3)" fg:x="1000" fg:w="5"/><text x="24.3929%" y="319.50"></text></g><g><title>hx`ropey::slice::RopeSlice::try_chunk_at_byte (4 samples, 0.10%)</title><rect x="24.1671%" y="293" width="0.0966%" height="15" fill="rgb(241,25,7)" fg:x="1001" fg:w="4"/><text x="24.4171%" y="303.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_byte (4 samples, 0.10%)</title><rect x="24.1671%" y="277" width="0.0966%" height="15" fill="rgb(242,119,39)" fg:x="1001" fg:w="4"/><text x="24.4171%" y="287.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 1.09%)</title><rect x="23.2014%" y="325" width="1.0864%" height="15" fill="rgb(241,98,45)" fg:x="961" fg:w="45"/><text x="23.4514%" y="335.50"></text></g><g><title>hx`ropey::slice::RopeSlice::try_chunk_at_byte (1 samples, 0.02%)</title><rect x="24.2636%" y="309" width="0.0241%" height="15" fill="rgb(254,28,30)" fg:x="1005" fg:w="1"/><text x="24.5136%" y="319.50"></text></g><g><title>hx`tree_sitter::QueryMatch::satisfies_text_predicates (1 samples, 0.02%)</title><rect x="24.3119%" y="261" width="0.0241%" height="15" fill="rgb(241,142,54)" fg:x="1007" fg:w="1"/><text x="24.5619%" y="271.50"></text></g><g><title>hx`&lt;helix_core::syntax::RopeProvider as tree_sitter::TextProvider&gt;::text (1 samples, 0.02%)</title><rect x="24.3119%" y="245" width="0.0241%" height="15" fill="rgb(222,85,15)" fg:x="1007" fg:w="1"/><text x="24.5619%" y="255.50"></text></g><g><title>hx`ropey::slice::RopeSlice::byte_slice (1 samples, 0.02%)</title><rect x="24.3119%" y="229" width="0.0241%" height="15" fill="rgb(210,85,47)" fg:x="1007" fg:w="1"/><text x="24.5619%" y="239.50"></text></g><g><title>hx`ropey::slice::RopeSlice::new_with_byte_range (1 samples, 0.02%)</title><rect x="24.3119%" y="213" width="0.0241%" height="15" fill="rgb(224,206,25)" fg:x="1007" fg:w="1"/><text x="24.5619%" y="223.50"></text></g><g><title>hx`ts_query_cursor__first_in_progress_capture (2 samples, 0.05%)</title><rect x="24.3361%" y="261" width="0.0483%" height="15" fill="rgb(243,201,19)" fg:x="1008" fg:w="2"/><text x="24.5861%" y="271.50"></text></g><g><title>hx`ts_query_cursor__add_state (1 samples, 0.02%)</title><rect x="24.4326%" y="245" width="0.0241%" height="15" fill="rgb(236,59,4)" fg:x="1012" fg:w="1"/><text x="24.6826%" y="255.50"></text></g><g><title>hx`ts_query_cursor__capture (1 samples, 0.02%)</title><rect x="24.6982%" y="229" width="0.0241%" height="15" fill="rgb(254,179,45)" fg:x="1023" fg:w="1"/><text x="24.9482%" y="239.50"></text></g><g><title>hx`ts_query_cursor__prepare_to_capture (1 samples, 0.02%)</title><rect x="24.6982%" y="213" width="0.0241%" height="15" fill="rgb(226,14,10)" fg:x="1023" fg:w="1"/><text x="24.9482%" y="223.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (9 samples, 0.22%)</title><rect x="24.7224%" y="229" width="0.2173%" height="15" fill="rgb(244,27,41)" fg:x="1024" fg:w="9"/><text x="24.9724%" y="239.50"></text></g><g><title>hx`ts_query_cursor__advance (24 samples, 0.58%)</title><rect x="24.4568%" y="245" width="0.5794%" height="15" fill="rgb(235,35,32)" fg:x="1013" fg:w="24"/><text x="24.7068%" y="255.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (4 samples, 0.10%)</title><rect x="24.9396%" y="229" width="0.0966%" height="15" fill="rgb(218,68,31)" fg:x="1033" fg:w="4"/><text x="25.1896%" y="239.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (1 samples, 0.02%)</title><rect x="25.0121%" y="213" width="0.0241%" height="15" fill="rgb(207,120,37)" fg:x="1036" fg:w="1"/><text x="25.2621%" y="223.50"></text></g><g><title>hx`&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.87%)</title><rect x="24.3119%" y="277" width="0.8691%" height="15" fill="rgb(227,98,0)" fg:x="1007" fg:w="36"/><text x="24.5619%" y="287.50"></text></g><g><title>hx`ts_query_cursor_next_capture (33 samples, 0.80%)</title><rect x="24.3844%" y="261" width="0.7967%" height="15" fill="rgb(207,7,3)" fg:x="1010" fg:w="33"/><text x="24.6344%" y="271.50"></text></g><g><title>hx`ts_tree_cursor_current_status (6 samples, 0.14%)</title><rect x="25.0362%" y="245" width="0.1449%" height="15" fill="rgb(206,98,19)" fg:x="1037" fg:w="6"/><text x="25.2862%" y="255.50"></text></g><g><title>hx`DYLD-STUB$$memmove (1 samples, 0.02%)</title><rect x="25.1811%" y="277" width="0.0241%" height="15" fill="rgb(217,5,26)" fg:x="1043" fg:w="1"/><text x="25.4311%" y="287.50"></text></g><g><title>hx`helix_core::syntax::HighlightIter::sort_layers (3 samples, 0.07%)</title><rect x="25.2052%" y="277" width="0.0724%" height="15" fill="rgb(235,190,38)" fg:x="1044" fg:w="3"/><text x="25.4552%" y="287.50"></text></g><g><title>hx`helix_core::syntax::HighlightIterLayer::sort_key (1 samples, 0.02%)</title><rect x="25.2535%" y="261" width="0.0241%" height="15" fill="rgb(247,86,24)" fg:x="1046" fg:w="1"/><text x="25.5035%" y="271.50"></text></g><g><title>hx`&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="25.2535%" y="245" width="0.0241%" height="15" fill="rgb(205,101,16)" fg:x="1046" fg:w="1"/><text x="25.5035%" y="255.50"></text></g><g><title>hx`ts_query_cursor_next_capture (1 samples, 0.02%)</title><rect x="25.2535%" y="229" width="0.0241%" height="15" fill="rgb(246,168,33)" fg:x="1046" fg:w="1"/><text x="25.5035%" y="239.50"></text></g><g><title>hx`ts_query_cursor__advance (1 samples, 0.02%)</title><rect x="25.2535%" y="213" width="0.0241%" height="15" fill="rgb(231,114,1)" fg:x="1046" fg:w="1"/><text x="25.5035%" y="223.50"></text></g><g><title>hx`ropey::slice::RopeSlice::byte_slice (1 samples, 0.02%)</title><rect x="25.2776%" y="277" width="0.0241%" height="15" fill="rgb(207,184,53)" fg:x="1047" fg:w="1"/><text x="25.5276%" y="287.50"></text></g><g><title>hx`ropey::slice::RopeSlice::new_with_byte_range (1 samples, 0.02%)</title><rect x="25.2776%" y="261" width="0.0241%" height="15" fill="rgb(224,95,51)" fg:x="1047" fg:w="1"/><text x="25.5276%" y="271.50"></text></g><g><title>hx`ropey::slice::RopeSlice::new_with_byte_range (1 samples, 0.02%)</title><rect x="25.3018%" y="277" width="0.0241%" height="15" fill="rgb(212,188,45)" fg:x="1048" fg:w="1"/><text x="25.5518%" y="287.50"></text></g><g><title>hx`&lt;helix_core::syntax::HighlightIter as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 1.06%)</title><rect x="24.2878%" y="293" width="1.0623%" height="15" fill="rgb(223,154,38)" fg:x="1006" fg:w="44"/><text x="24.5378%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="25.3259%" y="277" width="0.0241%" height="15" fill="rgb(251,22,52)" fg:x="1049" fg:w="1"/><text x="25.5759%" y="287.50"></text></g><g><title>hx`ropey::slice::RopeSlice::try_chunk_at_byte (5 samples, 0.12%)</title><rect x="25.3742%" y="277" width="0.1207%" height="15" fill="rgb(229,209,22)" fg:x="1051" fg:w="5"/><text x="25.6242%" y="287.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_byte (3 samples, 0.07%)</title><rect x="25.4225%" y="261" width="0.0724%" height="15" fill="rgb(234,138,34)" fg:x="1053" fg:w="3"/><text x="25.6725%" y="271.50"></text></g><g><title>hx`helix_core::graphemes::is_grapheme_boundary_byte (7 samples, 0.17%)</title><rect x="25.3501%" y="293" width="0.1690%" height="15" fill="rgb(212,95,11)" fg:x="1050" fg:w="7"/><text x="25.6001%" y="303.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::is_boundary (1 samples, 0.02%)</title><rect x="25.4949%" y="277" width="0.0241%" height="15" fill="rgb(240,179,47)" fg:x="1056" fg:w="1"/><text x="25.7449%" y="287.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::grapheme_category (1 samples, 0.02%)</title><rect x="25.4949%" y="261" width="0.0241%" height="15" fill="rgb(240,163,11)" fg:x="1056" fg:w="1"/><text x="25.7449%" y="271.50"></text></g><g><title>hx`ropey::slice::RopeSlice::byte_to_char (5 samples, 0.12%)</title><rect x="25.5191%" y="293" width="0.1207%" height="15" fill="rgb(236,37,12)" fg:x="1057" fg:w="5"/><text x="25.7691%" y="303.50"></text></g><g><title>hx`ropey::slice::RopeSlice::try_chunk_at_byte (2 samples, 0.05%)</title><rect x="25.5915%" y="277" width="0.0483%" height="15" fill="rgb(232,164,16)" fg:x="1060" fg:w="2"/><text x="25.8415%" y="287.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_byte (2 samples, 0.05%)</title><rect x="25.5915%" y="261" width="0.0483%" height="15" fill="rgb(244,205,15)" fg:x="1060" fg:w="2"/><text x="25.8415%" y="271.50"></text></g><g><title>hx`ts_node_end_byte (1 samples, 0.02%)</title><rect x="25.6398%" y="293" width="0.0241%" height="15" fill="rgb(223,117,47)" fg:x="1062" fg:w="1"/><text x="25.8898%" y="303.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 1.40%)</title><rect x="24.2878%" y="309" width="1.4003%" height="15" fill="rgb(244,107,35)" fg:x="1006" fg:w="58"/><text x="24.5378%" y="319.50"></text></g><g><title>hx`ts_node_start_byte (1 samples, 0.02%)</title><rect x="25.6639%" y="293" width="0.0241%" height="15" fill="rgb(205,140,8)" fg:x="1063" fg:w="1"/><text x="25.9139%" y="303.50"></text></g><g><title>hx`regex::re_bytes::Regex::is_match_at (1 samples, 0.02%)</title><rect x="25.7846%" y="245" width="0.0241%" height="15" fill="rgb(228,84,46)" fg:x="1068" fg:w="1"/><text x="26.0346%" y="255.50"></text></g><g><title>hx`tree_sitter::QueryMatch::satisfies_text_predicates (1 samples, 0.02%)</title><rect x="25.8088%" y="245" width="0.0241%" height="15" fill="rgb(254,188,9)" fg:x="1069" fg:w="1"/><text x="26.0588%" y="255.50"></text></g><g><title>hx`&lt;helix_core::syntax::RopeProvider as tree_sitter::TextProvider&gt;::text (1 samples, 0.02%)</title><rect x="25.8088%" y="229" width="0.0241%" height="15" fill="rgb(206,112,54)" fg:x="1069" fg:w="1"/><text x="26.0588%" y="239.50"></text></g><g><title>hx`ropey::slice::RopeSlice::byte_slice (1 samples, 0.02%)</title><rect x="25.8088%" y="213" width="0.0241%" height="15" fill="rgb(216,84,49)" fg:x="1069" fg:w="1"/><text x="26.0588%" y="223.50"></text></g><g><title>hx`ropey::slice::RopeSlice::new_with_byte_range (1 samples, 0.02%)</title><rect x="25.8088%" y="197" width="0.0241%" height="15" fill="rgb(214,194,35)" fg:x="1069" fg:w="1"/><text x="26.0588%" y="207.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (4 samples, 0.10%)</title><rect x="26.0019%" y="213" width="0.0966%" height="15" fill="rgb(249,28,3)" fg:x="1077" fg:w="4"/><text x="26.2519%" y="223.50"></text></g><g><title>hx`&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.34%)</title><rect x="25.7846%" y="261" width="0.3380%" height="15" fill="rgb(222,56,52)" fg:x="1068" fg:w="14"/><text x="26.0346%" y="271.50"></text></g><g><title>hx`ts_query_cursor_next_capture (12 samples, 0.29%)</title><rect x="25.8329%" y="245" width="0.2897%" height="15" fill="rgb(245,217,50)" fg:x="1070" fg:w="12"/><text x="26.0829%" y="255.50"></text></g><g><title>hx`ts_query_cursor__advance (12 samples, 0.29%)</title><rect x="25.8329%" y="229" width="0.2897%" height="15" fill="rgb(213,201,24)" fg:x="1070" fg:w="12"/><text x="26.0829%" y="239.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (1 samples, 0.02%)</title><rect x="26.0985%" y="213" width="0.0241%" height="15" fill="rgb(248,116,28)" fg:x="1081" fg:w="1"/><text x="26.3485%" y="223.50"></text></g><g><title>hx`core::slice::rotate::ptr_rotate (1 samples, 0.02%)</title><rect x="26.1226%" y="261" width="0.0241%" height="15" fill="rgb(219,72,43)" fg:x="1082" fg:w="1"/><text x="26.3726%" y="271.50"></text></g><g><title>hx`helix_core::syntax::HighlightIter::sort_layers (2 samples, 0.05%)</title><rect x="26.1468%" y="261" width="0.0483%" height="15" fill="rgb(209,138,14)" fg:x="1083" fg:w="2"/><text x="26.3968%" y="271.50"></text></g><g><title>hx`&lt;helix_core::syntax::HighlightIter as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.48%)</title><rect x="25.7364%" y="277" width="0.4829%" height="15" fill="rgb(222,18,33)" fg:x="1066" fg:w="20"/><text x="25.9864%" y="287.50"></text></g><g><title>hx`ts_query_cursor_remove_match (1 samples, 0.02%)</title><rect x="26.1951%" y="261" width="0.0241%" height="15" fill="rgb(213,199,7)" fg:x="1085" fg:w="1"/><text x="26.4451%" y="271.50"></text></g><g><title>hx`helix_core::graphemes::is_grapheme_boundary_byte (1 samples, 0.02%)</title><rect x="26.2192%" y="277" width="0.0241%" height="15" fill="rgb(250,110,10)" fg:x="1086" fg:w="1"/><text x="26.4692%" y="287.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::is_boundary (1 samples, 0.02%)</title><rect x="26.2192%" y="261" width="0.0241%" height="15" fill="rgb(248,123,6)" fg:x="1086" fg:w="1"/><text x="26.4692%" y="271.50"></text></g><g><title>hx`&lt;helix_core::syntax::Merge&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.60%)</title><rect x="25.6881%" y="309" width="0.6036%" height="15" fill="rgb(206,91,31)" fg:x="1064" fg:w="25"/><text x="25.9381%" y="319.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.60%)</title><rect x="25.6881%" y="293" width="0.6036%" height="15" fill="rgb(211,154,13)" fg:x="1064" fg:w="25"/><text x="25.9381%" y="303.50"></text></g><g><title>hx`ropey::slice::RopeSlice::byte_to_char (2 samples, 0.05%)</title><rect x="26.2434%" y="277" width="0.0483%" height="15" fill="rgb(225,148,7)" fg:x="1087" fg:w="2"/><text x="26.4934%" y="287.50"></text></g><g><title>hx`ropey::slice::RopeSlice::try_chunk_at_byte (1 samples, 0.02%)</title><rect x="26.2675%" y="261" width="0.0241%" height="15" fill="rgb(220,160,43)" fg:x="1088" fg:w="1"/><text x="26.5175%" y="271.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_byte (1 samples, 0.02%)</title><rect x="26.2675%" y="245" width="0.0241%" height="15" fill="rgb(213,52,39)" fg:x="1088" fg:w="1"/><text x="26.5175%" y="255.50"></text></g><g><title>hx`&lt;helix_core::syntax::Merge&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 samples, 2.05%)</title><rect x="24.2878%" y="325" width="2.0521%" height="15" fill="rgb(243,137,7)" fg:x="1006" fg:w="85"/><text x="24.5378%" y="335.50">h..</text></g><g><title>hx`ropey::slice::RopeSlice::byte_to_char (2 samples, 0.05%)</title><rect x="26.2916%" y="309" width="0.0483%" height="15" fill="rgb(230,79,13)" fg:x="1089" fg:w="2"/><text x="26.5416%" y="319.50"></text></g><g><title>hx`&lt;helix_term::ui::document::StyleIter&lt;H&gt; as core::iter::traits::iterator::Iterator&gt;::next (712 samples, 17.19%)</title><rect x="9.1743%" y="389" width="17.1898%" height="15" fill="rgb(247,105,23)" fg:x="380" fg:w="712"/><text x="9.4243%" y="399.50">hx`&lt;helix_term::ui::documen..</text></g><g><title>hx`&lt;helix_core::syntax::Merge&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (572 samples, 13.81%)</title><rect x="12.5543%" y="373" width="13.8098%" height="15" fill="rgb(223,179,41)" fg:x="520" fg:w="572"/><text x="12.8043%" y="383.50">hx`&lt;helix_core::synta..</text></g><g><title>hx`&lt;helix_core::syntax::Merge&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (244 samples, 5.89%)</title><rect x="20.4732%" y="357" width="5.8909%" height="15" fill="rgb(218,9,34)" fg:x="848" fg:w="244"/><text x="20.7232%" y="367.50">hx`&lt;hel..</text></g><g><title>hx`&lt;helix_core::syntax::Merge&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (131 samples, 3.16%)</title><rect x="23.2014%" y="341" width="3.1627%" height="15" fill="rgb(222,106,8)" fg:x="961" fg:w="131"/><text x="23.4514%" y="351.50">hx`..</text></g><g><title>hx`helix_core::graphemes::is_grapheme_boundary_byte (1 samples, 0.02%)</title><rect x="26.3399%" y="325" width="0.0241%" height="15" fill="rgb(211,220,0)" fg:x="1091" fg:w="1"/><text x="26.5899%" y="335.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;helix_core::doc_formatter::DocumentFormatter&gt; (1 samples, 0.02%)</title><rect x="26.3641%" y="389" width="0.0241%" height="15" fill="rgb(229,52,16)" fg:x="1092" fg:w="1"/><text x="26.6141%" y="399.50"></text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::advance_grapheme (3 samples, 0.07%)</title><rect x="26.3882%" y="389" width="0.0724%" height="15" fill="rgb(212,155,18)" fg:x="1093" fg:w="3"/><text x="26.6382%" y="399.50"></text></g><g><title>hx`ropey::slice::RopeSlice::new_with_range (2 samples, 0.05%)</title><rect x="26.4848%" y="373" width="0.0483%" height="15" fill="rgb(242,21,14)" fg:x="1097" fg:w="2"/><text x="26.7348%" y="383.50"></text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::new_at_prev_checkpoint (4 samples, 0.10%)</title><rect x="26.4606%" y="389" width="0.0966%" height="15" fill="rgb(222,19,48)" fg:x="1096" fg:w="4"/><text x="26.7106%" y="399.50"></text></g><g><title>hx`ropey::str_utils::byte_to_utf16_surrogate_idx (1 samples, 0.02%)</title><rect x="26.5331%" y="373" width="0.0241%" height="15" fill="rgb(232,45,27)" fg:x="1099" fg:w="1"/><text x="26.7831%" y="383.50"></text></g><g><title>hx`helix_core::graphemes::Grapheme::is_whitespace (28 samples, 0.68%)</title><rect x="26.5572%" y="389" width="0.6760%" height="15" fill="rgb(249,103,42)" fg:x="1100" fg:w="28"/><text x="26.8072%" y="399.50"></text></g><g><title>hx`&lt;helix_core::doc_formatter::DocumentFormatter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="27.2332%" y="373" width="0.0241%" height="15" fill="rgb(246,81,33)" fg:x="1128" fg:w="1"/><text x="27.4832%" y="383.50"></text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::advance_grapheme (1 samples, 0.02%)</title><rect x="27.2332%" y="357" width="0.0241%" height="15" fill="rgb(252,33,42)" fg:x="1128" fg:w="1"/><text x="27.4832%" y="367.50"></text></g><g><title>hx`&lt;helix_core::graphemes::RopeGraphemes as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="27.2332%" y="341" width="0.0241%" height="15" fill="rgb(209,212,41)" fg:x="1128" fg:w="1"/><text x="27.4832%" y="351.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::next_boundary (1 samples, 0.02%)</title><rect x="27.2332%" y="325" width="0.0241%" height="15" fill="rgb(207,154,6)" fg:x="1128" fg:w="1"/><text x="27.4832%" y="335.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::is_boundary (1 samples, 0.02%)</title><rect x="27.2332%" y="309" width="0.0241%" height="15" fill="rgb(223,64,47)" fg:x="1128" fg:w="1"/><text x="27.4832%" y="319.50"></text></g><g><title>hx`ropey::slice::RopeSlice::new_with_range (4 samples, 0.10%)</title><rect x="27.2815%" y="357" width="0.0966%" height="15" fill="rgb(211,161,38)" fg:x="1130" fg:w="4"/><text x="27.5315%" y="367.50"></text></g><g><title>hx`str_indices::chars::to_byte_idx (1 samples, 0.02%)</title><rect x="27.3539%" y="341" width="0.0241%" height="15" fill="rgb(219,138,40)" fg:x="1133" fg:w="1"/><text x="27.6039%" y="351.50"></text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::new_at_prev_checkpoint (6 samples, 0.14%)</title><rect x="27.2574%" y="373" width="0.1449%" height="15" fill="rgb(241,228,46)" fg:x="1129" fg:w="6"/><text x="27.5074%" y="383.50"></text></g><g><title>hx`ropey::str_utils::byte_to_utf16_surrogate_idx (1 samples, 0.02%)</title><rect x="27.3781%" y="357" width="0.0241%" height="15" fill="rgb(223,209,38)" fg:x="1134" fg:w="1"/><text x="27.6281%" y="367.50"></text></g><g><title>hx`helix_core::position::visual_offset_from_block (8 samples, 0.19%)</title><rect x="27.2332%" y="389" width="0.1931%" height="15" fill="rgb(236,164,45)" fg:x="1128" fg:w="8"/><text x="27.4832%" y="399.50"></text></g><g><title>hx`str_indices::chars::to_byte_idx (1 samples, 0.02%)</title><rect x="27.4022%" y="373" width="0.0241%" height="15" fill="rgb(231,15,5)" fg:x="1135" fg:w="1"/><text x="27.6522%" y="383.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="28.1265%" y="373" width="0.0483%" height="15" fill="rgb(252,35,15)" fg:x="1165" fg:w="2"/><text x="28.3765%" y="383.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::set_string_truncated_at_end (75 samples, 1.81%)</title><rect x="28.1748%" y="373" width="1.8107%" height="15" fill="rgb(248,181,18)" fg:x="1167" fg:w="75"/><text x="28.4248%" y="383.50">h..</text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.10%)</title><rect x="29.8889%" y="357" width="0.0966%" height="15" fill="rgb(233,39,42)" fg:x="1238" fg:w="4"/><text x="30.1389%" y="367.50"></text></g><g><title>hx`helix_term::ui::document::TextRenderer::draw_grapheme (111 samples, 2.68%)</title><rect x="27.4264%" y="389" width="2.6799%" height="15" fill="rgb(238,110,33)" fg:x="1136" fg:w="111"/><text x="27.6764%" y="399.50">hx..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.12%)</title><rect x="29.9855%" y="373" width="0.1207%" height="15" fill="rgb(233,195,10)" fg:x="1242" fg:w="5"/><text x="30.2355%" y="383.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::set_string_truncated_at_end (5 samples, 0.12%)</title><rect x="30.1062%" y="389" width="0.1207%" height="15" fill="rgb(254,105,3)" fg:x="1247" fg:w="5"/><text x="30.3562%" y="399.50"></text></g><g><title>hx`helix_view::document::Document::text_format (2 samples, 0.05%)</title><rect x="30.2269%" y="389" width="0.0483%" height="15" fill="rgb(221,225,9)" fg:x="1252" fg:w="2"/><text x="30.4769%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.05%)</title><rect x="30.2269%" y="373" width="0.0483%" height="15" fill="rgb(224,227,45)" fg:x="1252" fg:w="2"/><text x="30.4769%" y="383.50"></text></g><g><title>hx`helix_view::gutter::diagnostics_or_breakpoints::_{{closure}} (2 samples, 0.05%)</title><rect x="30.2752%" y="389" width="0.0483%" height="15" fill="rgb(229,198,43)" fg:x="1254" fg:w="2"/><text x="30.5252%" y="399.50"></text></g><g><title>hx`helix_view::gutter::diff::_{{closure}} (2 samples, 0.05%)</title><rect x="30.3235%" y="389" width="0.0483%" height="15" fill="rgb(206,209,35)" fg:x="1256" fg:w="2"/><text x="30.5735%" y="399.50"></text></g><g><title>hx`helix_term::ui::document::render_document (1,165 samples, 28.13%)</title><rect x="2.2694%" y="405" width="28.1265%" height="15" fill="rgb(245,195,53)" fg:x="94" fg:w="1165"/><text x="2.5194%" y="415.50">hx`helix_term::ui::document::render_document</text></g><g><title>hx`helix_view::gutter::line_numbers::_{{closure}} (1 samples, 0.02%)</title><rect x="30.3718%" y="389" width="0.0241%" height="15" fill="rgb(240,92,26)" fg:x="1258" fg:w="1"/><text x="30.6218%" y="399.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::doc_diagnostics_highlights (3 samples, 0.07%)</title><rect x="30.3959%" y="405" width="0.0724%" height="15" fill="rgb(207,40,23)" fg:x="1259" fg:w="3"/><text x="30.6459%" y="415.50"></text></g><g><title>hx`hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="30.4925%" y="389" width="0.0241%" height="15" fill="rgb(223,111,35)" fg:x="1263" fg:w="1"/><text x="30.7425%" y="399.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::doc_selection_highlights (3 samples, 0.07%)</title><rect x="30.4684%" y="405" width="0.0724%" height="15" fill="rgb(229,147,28)" fg:x="1262" fg:w="3"/><text x="30.7184%" y="415.50"></text></g><g><title>hx`helix_core::graphemes::nth_prev_grapheme_boundary (1 samples, 0.02%)</title><rect x="30.5167%" y="389" width="0.0241%" height="15" fill="rgb(211,29,28)" fg:x="1264" fg:w="1"/><text x="30.7667%" y="399.50"></text></g><g><title>hx`str_indices::chars::to_byte_idx (1 samples, 0.02%)</title><rect x="30.5167%" y="373" width="0.0241%" height="15" fill="rgb(228,72,33)" fg:x="1264" fg:w="1"/><text x="30.7667%" y="383.50"></text></g><g><title>hx`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="30.6374%" y="357" width="0.0483%" height="15" fill="rgb(205,214,31)" fg:x="1269" fg:w="2"/><text x="30.8874%" y="367.50"></text></g><g><title>hx`alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="30.6374%" y="341" width="0.0483%" height="15" fill="rgb(224,111,15)" fg:x="1269" fg:w="2"/><text x="30.8874%" y="351.50"></text></g><g><title>hx`_mi_heap_realloc_zero (1 samples, 0.02%)</title><rect x="30.6615%" y="325" width="0.0241%" height="15" fill="rgb(253,21,26)" fg:x="1270" fg:w="1"/><text x="30.9115%" y="335.50"></text></g><g><title>hx`regex::re_bytes::Regex::is_match_at (1 samples, 0.02%)</title><rect x="30.7581%" y="325" width="0.0241%" height="15" fill="rgb(245,139,43)" fg:x="1274" fg:w="1"/><text x="31.0081%" y="335.50"></text></g><g><title>hx`ropey::slice::RopeSlice::byte_slice (15 samples, 0.36%)</title><rect x="30.8064%" y="293" width="0.3621%" height="15" fill="rgb(252,170,7)" fg:x="1276" fg:w="15"/><text x="31.0564%" y="303.50"></text></g><g><title>hx`ropey::slice::RopeSlice::new_with_byte_range (14 samples, 0.34%)</title><rect x="30.8305%" y="277" width="0.3380%" height="15" fill="rgb(231,118,14)" fg:x="1277" fg:w="14"/><text x="31.0805%" y="287.50"></text></g><g><title>hx`&lt;helix_core::syntax::RopeProvider as tree_sitter::TextProvider&gt;::text (16 samples, 0.39%)</title><rect x="30.8064%" y="309" width="0.3863%" height="15" fill="rgb(238,83,0)" fg:x="1276" fg:w="16"/><text x="31.0564%" y="319.50"></text></g><g><title>hx`ropey::slice::RopeSlice::new_with_byte_range (1 samples, 0.02%)</title><rect x="31.1685%" y="293" width="0.0241%" height="15" fill="rgb(221,39,39)" fg:x="1291" fg:w="1"/><text x="31.4185%" y="303.50"></text></g><g><title>hx`regex::re_bytes::Regex::is_match_at (5 samples, 0.12%)</title><rect x="31.1927%" y="309" width="0.1207%" height="15" fill="rgb(222,119,46)" fg:x="1292" fg:w="5"/><text x="31.4427%" y="319.50"></text></g><g><title>hx`tree_sitter::QueryMatch::satisfies_text_predicates::get_text (3 samples, 0.07%)</title><rect x="31.3134%" y="309" width="0.0724%" height="15" fill="rgb(222,165,49)" fg:x="1297" fg:w="3"/><text x="31.5634%" y="319.50"></text></g><g><title>hx`ropey::iter::Chunks::next_impl (3 samples, 0.07%)</title><rect x="31.3134%" y="293" width="0.0724%" height="15" fill="rgb(219,113,52)" fg:x="1297" fg:w="3"/><text x="31.5634%" y="303.50"></text></g><g><title>hx`ts_node_end_byte (2 samples, 0.05%)</title><rect x="31.3858%" y="309" width="0.0483%" height="15" fill="rgb(214,7,15)" fg:x="1300" fg:w="2"/><text x="31.6358%" y="319.50"></text></g><g><title>hx`tree_sitter::QueryMatch::satisfies_text_predicates (28 samples, 0.68%)</title><rect x="30.7822%" y="325" width="0.6760%" height="15" fill="rgb(235,32,4)" fg:x="1275" fg:w="28"/><text x="31.0322%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="31.4341%" y="309" width="0.0241%" height="15" fill="rgb(238,90,54)" fg:x="1302" fg:w="1"/><text x="31.6841%" y="319.50"></text></g><g><title>hx`ts_query_cursor__first_in_progress_capture (2 samples, 0.05%)</title><rect x="31.4582%" y="325" width="0.0483%" height="15" fill="rgb(213,208,19)" fg:x="1303" fg:w="2"/><text x="31.7082%" y="335.50"></text></g><g><title>hx`DYLD-STUB$$memmove (1 samples, 0.02%)</title><rect x="31.6514%" y="309" width="0.0241%" height="15" fill="rgb(233,156,4)" fg:x="1311" fg:w="1"/><text x="31.9014%" y="319.50"></text></g><g><title>hx`ts_node_child_by_field_id (1 samples, 0.02%)</title><rect x="32.4964%" y="293" width="0.0241%" height="15" fill="rgb(207,194,5)" fg:x="1346" fg:w="1"/><text x="32.7464%" y="303.50"></text></g><g><title>hx`ts_node_child_iterator_next (1 samples, 0.02%)</title><rect x="32.5205%" y="293" width="0.0241%" height="15" fill="rgb(206,111,30)" fg:x="1347" fg:w="1"/><text x="32.7705%" y="303.50"></text></g><g><title>hx`ts_query_cursor__add_state (4 samples, 0.10%)</title><rect x="32.5447%" y="293" width="0.0966%" height="15" fill="rgb(243,70,54)" fg:x="1348" fg:w="4"/><text x="32.7947%" y="303.50"></text></g><g><title>hx`ts_query_cursor__capture (2 samples, 0.05%)</title><rect x="32.6412%" y="293" width="0.0483%" height="15" fill="rgb(242,28,8)" fg:x="1352" fg:w="2"/><text x="32.8912%" y="303.50"></text></g><g><title>hx`ts_query_cursor__prepare_to_capture (2 samples, 0.05%)</title><rect x="32.6412%" y="277" width="0.0483%" height="15" fill="rgb(219,106,18)" fg:x="1352" fg:w="2"/><text x="32.8912%" y="287.50"></text></g><g><title>hx`ts_query_cursor__prepare_to_capture (1 samples, 0.02%)</title><rect x="32.6895%" y="293" width="0.0241%" height="15" fill="rgb(244,222,10)" fg:x="1354" fg:w="1"/><text x="32.9395%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (15 samples, 0.36%)</title><rect x="32.7137%" y="293" width="0.3621%" height="15" fill="rgb(236,179,52)" fg:x="1355" fg:w="15"/><text x="32.9637%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_goto_first_child (2 samples, 0.05%)</title><rect x="33.0758%" y="293" width="0.0483%" height="15" fill="rgb(213,23,39)" fg:x="1370" fg:w="2"/><text x="33.3258%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (4 samples, 0.10%)</title><rect x="33.2207%" y="277" width="0.0966%" height="15" fill="rgb(238,48,10)" fg:x="1376" fg:w="4"/><text x="33.4707%" y="287.50"></text></g><g><title>hx`ts_query_cursor__advance (70 samples, 1.69%)</title><rect x="31.6755%" y="309" width="1.6900%" height="15" fill="rgb(251,196,23)" fg:x="1312" fg:w="70"/><text x="31.9255%" y="319.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (10 samples, 0.24%)</title><rect x="33.1241%" y="293" width="0.2414%" height="15" fill="rgb(250,152,24)" fg:x="1372" fg:w="10"/><text x="33.3741%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_goto_first_child (2 samples, 0.05%)</title><rect x="33.3172%" y="277" width="0.0483%" height="15" fill="rgb(209,150,17)" fg:x="1380" fg:w="2"/><text x="33.5672%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_current_status (22 samples, 0.53%)</title><rect x="33.3655%" y="309" width="0.5311%" height="15" fill="rgb(234,202,34)" fg:x="1382" fg:w="22"/><text x="33.6155%" y="319.50"></text></g><g><title>hx`ts_query_cursor_next_capture (100 samples, 2.41%)</title><rect x="31.5065%" y="325" width="2.4143%" height="15" fill="rgb(253,148,53)" fg:x="1305" fg:w="100"/><text x="31.7565%" y="335.50">hx..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="33.8967%" y="309" width="0.0241%" height="15" fill="rgb(218,129,16)" fg:x="1404" fg:w="1"/><text x="34.1467%" y="319.50"></text></g><g><title>hx`&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (134 samples, 3.24%)</title><rect x="30.7339%" y="341" width="3.2352%" height="15" fill="rgb(216,85,19)" fg:x="1273" fg:w="134"/><text x="30.9839%" y="351.50">hx`..</text></g><g><title>hx`ts_query_cursor_remove_match (2 samples, 0.05%)</title><rect x="33.9208%" y="325" width="0.0483%" height="15" fill="rgb(235,228,7)" fg:x="1405" fg:w="2"/><text x="34.1708%" y="335.50"></text></g><g><title>hx`helix_core::syntax::PARSER::__getit (1 samples, 0.02%)</title><rect x="33.9691%" y="341" width="0.0241%" height="15" fill="rgb(245,175,0)" fg:x="1407" fg:w="1"/><text x="34.2191%" y="351.50"></text></g><g><title>hx`ts_malloc_default (1 samples, 0.02%)</title><rect x="33.9932%" y="325" width="0.0241%" height="15" fill="rgb(208,168,36)" fg:x="1408" fg:w="1"/><text x="34.2432%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.07%)</title><rect x="34.0174%" y="309" width="0.0724%" height="15" fill="rgb(246,171,24)" fg:x="1409" fg:w="3"/><text x="34.2674%" y="319.50"></text></g><g><title>hx`std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.19%)</title><rect x="33.9932%" y="341" width="0.1931%" height="15" fill="rgb(215,142,24)" fg:x="1408" fg:w="8"/><text x="34.2432%" y="351.50"></text></g><g><title>hx`ts_query_cursor_new (7 samples, 0.17%)</title><rect x="34.0174%" y="325" width="0.1690%" height="15" fill="rgb(250,187,7)" fg:x="1409" fg:w="7"/><text x="34.2674%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.10%)</title><rect x="34.0898%" y="309" width="0.0966%" height="15" fill="rgb(228,66,33)" fg:x="1412" fg:w="4"/><text x="34.3398%" y="319.50"></text></g><g><title>hx`tree_sitter::QueryMatch::satisfies_text_predicates (2 samples, 0.05%)</title><rect x="34.1864%" y="341" width="0.0483%" height="15" fill="rgb(234,215,21)" fg:x="1416" fg:w="2"/><text x="34.4364%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.02%)</title><rect x="34.2347%" y="325" width="0.0241%" height="15" fill="rgb(222,191,20)" fg:x="1418" fg:w="1"/><text x="34.4847%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.10%)</title><rect x="34.2588%" y="325" width="0.0966%" height="15" fill="rgb(245,79,54)" fg:x="1419" fg:w="4"/><text x="34.5088%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (1 samples, 0.02%)</title><rect x="34.3795%" y="309" width="0.0241%" height="15" fill="rgb(240,10,37)" fg:x="1424" fg:w="1"/><text x="34.6295%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.14%)</title><rect x="34.3554%" y="325" width="0.1449%" height="15" fill="rgb(214,192,32)" fg:x="1423" fg:w="6"/><text x="34.6054%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.10%)</title><rect x="34.4037%" y="309" width="0.0966%" height="15" fill="rgb(209,36,54)" fg:x="1425" fg:w="4"/><text x="34.6537%" y="319.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.02%)</title><rect x="34.5002%" y="325" width="0.0241%" height="15" fill="rgb(220,10,11)" fg:x="1429" fg:w="1"/><text x="34.7502%" y="335.50"></text></g><g><title>hx`ts_query_cursor_delete (13 samples, 0.31%)</title><rect x="34.2347%" y="341" width="0.3139%" height="15" fill="rgb(221,106,17)" fg:x="1418" fg:w="13"/><text x="34.4847%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="34.5244%" y="325" width="0.0241%" height="15" fill="rgb(251,142,44)" fg:x="1430" fg:w="1"/><text x="34.7744%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.17%)</title><rect x="34.5727%" y="325" width="0.1690%" height="15" fill="rgb(238,13,15)" fg:x="1432" fg:w="7"/><text x="34.8227%" y="335.50"></text></g><g><title>hx`ts_query_cursor_exec (11 samples, 0.27%)</title><rect x="34.5485%" y="341" width="0.2656%" height="15" fill="rgb(208,107,27)" fg:x="1431" fg:w="11"/><text x="34.7985%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.07%)</title><rect x="34.7417%" y="325" width="0.0724%" height="15" fill="rgb(205,136,37)" fg:x="1439" fg:w="3"/><text x="34.9917%" y="335.50"></text></g><g><title>hx`ts_query_cursor_next_capture (1 samples, 0.02%)</title><rect x="34.8141%" y="341" width="0.0241%" height="15" fill="rgb(250,205,27)" fg:x="1442" fg:w="1"/><text x="35.0641%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.02%)</title><rect x="34.8382%" y="341" width="0.0241%" height="15" fill="rgb(210,80,43)" fg:x="1443" fg:w="1"/><text x="35.0882%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.05%)</title><rect x="34.8624%" y="341" width="0.0483%" height="15" fill="rgb(247,160,36)" fg:x="1444" fg:w="2"/><text x="35.1124%" y="351.50"></text></g><g><title>hx`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (176 samples, 4.25%)</title><rect x="30.6857%" y="357" width="4.2492%" height="15" fill="rgb(234,13,49)" fg:x="1271" fg:w="176"/><text x="30.9357%" y="367.50">hx`co..</text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.02%)</title><rect x="34.9107%" y="341" width="0.0241%" height="15" fill="rgb(234,122,0)" fg:x="1446" fg:w="1"/><text x="35.1607%" y="351.50"></text></g><g><title>hx`std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.05%)</title><rect x="34.9348%" y="357" width="0.0483%" height="15" fill="rgb(207,146,38)" fg:x="1447" fg:w="2"/><text x="35.1848%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="34.9831%" y="357" width="0.0241%" height="15" fill="rgb(207,177,25)" fg:x="1449" fg:w="1"/><text x="35.2331%" y="367.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (186 samples, 4.49%)</title><rect x="30.5408%" y="373" width="4.4906%" height="15" fill="rgb(211,178,42)" fg:x="1265" fg:w="186"/><text x="30.7908%" y="383.50">hx`&lt;a..</text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="35.0072%" y="357" width="0.0241%" height="15" fill="rgb(230,69,54)" fg:x="1450" fg:w="1"/><text x="35.2572%" y="367.50"></text></g><g><title>hx`core::slice::sort::shift_tail (1 samples, 0.02%)</title><rect x="35.0314%" y="373" width="0.0241%" height="15" fill="rgb(214,135,41)" fg:x="1451" fg:w="1"/><text x="35.2814%" y="383.50"></text></g><g><title>hx`helix_core::syntax::HighlightIter::sort_layers (1 samples, 0.02%)</title><rect x="35.0555%" y="373" width="0.0241%" height="15" fill="rgb(237,67,25)" fg:x="1452" fg:w="1"/><text x="35.3055%" y="383.50"></text></g><g><title>hx`helix_core::syntax::Syntax::highlight_iter (190 samples, 4.59%)</title><rect x="30.5408%" y="389" width="4.5872%" height="15" fill="rgb(222,189,50)" fg:x="1265" fg:w="190"/><text x="30.7908%" y="399.50">hx`he..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.05%)</title><rect x="35.0797%" y="373" width="0.0483%" height="15" fill="rgb(245,148,34)" fg:x="1453" fg:w="2"/><text x="35.3297%" y="383.50"></text></g><g><title>hx`ropey::slice::RopeSlice::get_chunk_at_char (1 samples, 0.02%)</title><rect x="35.1280%" y="389" width="0.0241%" height="15" fill="rgb(222,29,6)" fg:x="1455" fg:w="1"/><text x="35.3780%" y="399.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_char (1 samples, 0.02%)</title><rect x="35.1280%" y="373" width="0.0241%" height="15" fill="rgb(221,189,43)" fg:x="1455" fg:w="1"/><text x="35.3780%" y="383.50"></text></g><g><title>hx`ropey::slice::RopeSlice::line_to_byte (1 samples, 0.02%)</title><rect x="35.1521%" y="389" width="0.0241%" height="15" fill="rgb(207,36,27)" fg:x="1456" fg:w="1"/><text x="35.4021%" y="399.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::doc_syntax_highlights (193 samples, 4.66%)</title><rect x="30.5408%" y="405" width="4.6596%" height="15" fill="rgb(217,90,24)" fg:x="1265" fg:w="193"/><text x="30.7908%" y="415.50">hx`he..</text></g><g><title>hx`ropey::str_utils::char_to_line_idx (1 samples, 0.02%)</title><rect x="35.1762%" y="389" width="0.0241%" height="15" fill="rgb(224,66,35)" fg:x="1457" fg:w="1"/><text x="35.4262%" y="399.50"></text></g><g><title>hx`helix_core::match_brackets::find_pair (1 samples, 0.02%)</title><rect x="35.2004%" y="373" width="0.0241%" height="15" fill="rgb(221,13,50)" fg:x="1458" fg:w="1"/><text x="35.4504%" y="383.50"></text></g><g><title>hx`ropey::rope::Rope::byte_to_char (1 samples, 0.02%)</title><rect x="35.2004%" y="357" width="0.0241%" height="15" fill="rgb(236,68,49)" fg:x="1458" fg:w="1"/><text x="35.4504%" y="367.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::highlight_focused_view_elements (2 samples, 0.05%)</title><rect x="35.2004%" y="405" width="0.0483%" height="15" fill="rgb(229,146,28)" fg:x="1458" fg:w="2"/><text x="35.4504%" y="415.50"></text></g><g><title>hx`helix_core::match_brackets::find_matching_bracket (2 samples, 0.05%)</title><rect x="35.2004%" y="389" width="0.0483%" height="15" fill="rgb(225,31,38)" fg:x="1458" fg:w="2"/><text x="35.4504%" y="399.50"></text></g><g><title>hx`ropey::rope::Rope::char (1 samples, 0.02%)</title><rect x="35.2245%" y="373" width="0.0241%" height="15" fill="rgb(250,208,3)" fg:x="1459" fg:w="1"/><text x="35.4745%" y="383.50"></text></g><g><title>hx`str_indices::chars::to_byte_idx (1 samples, 0.02%)</title><rect x="35.2245%" y="357" width="0.0241%" height="15" fill="rgb(246,54,23)" fg:x="1459" fg:w="1"/><text x="35.4745%" y="367.50"></text></g><g><title>hx`&lt;helix_tui::widgets::reflow::WordWrapper as helix_tui::widgets::reflow::LineComposer&gt;::next_line (2 samples, 0.05%)</title><rect x="35.2728%" y="373" width="0.0483%" height="15" fill="rgb(243,76,11)" fg:x="1461" fg:w="2"/><text x="35.5228%" y="383.50"></text></g><g><title>hx`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="35.2728%" y="357" width="0.0483%" height="15" fill="rgb(245,21,50)" fg:x="1461" fg:w="2"/><text x="35.5228%" y="367.50"></text></g><g><title>hx`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="35.2728%" y="341" width="0.0483%" height="15" fill="rgb(228,9,43)" fg:x="1461" fg:w="2"/><text x="35.5228%" y="351.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="35.2970%" y="325" width="0.0241%" height="15" fill="rgb(208,100,47)" fg:x="1462" fg:w="1"/><text x="35.5470%" y="335.50"></text></g><g><title>hx`&lt;helix_tui::widgets::paragraph::Paragraph as helix_tui::widgets::Widget&gt;::render (14 samples, 0.34%)</title><rect x="35.2728%" y="389" width="0.3380%" height="15" fill="rgb(232,26,8)" fg:x="1461" fg:w="14"/><text x="35.5228%" y="399.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::set_style (12 samples, 0.29%)</title><rect x="35.3211%" y="373" width="0.2897%" height="15" fill="rgb(216,166,38)" fg:x="1463" fg:w="12"/><text x="35.5711%" y="383.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;helix_tui::widgets::reflow::WordWrapper&gt; (1 samples, 0.02%)</title><rect x="35.6108%" y="389" width="0.0241%" height="15" fill="rgb(251,202,51)" fg:x="1475" fg:w="1"/><text x="35.8608%" y="399.50"></text></g><g><title>hx`helix_view::theme::Theme::try_get (2 samples, 0.05%)</title><rect x="35.6350%" y="389" width="0.0483%" height="15" fill="rgb(254,216,34)" fg:x="1476" fg:w="2"/><text x="35.8850%" y="399.50"></text></g><g><title>hx`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="35.6350%" y="373" width="0.0483%" height="15" fill="rgb(251,32,27)" fg:x="1476" fg:w="2"/><text x="35.8850%" y="383.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::render_diagnostics (20 samples, 0.48%)</title><rect x="35.2487%" y="405" width="0.4829%" height="15" fill="rgb(208,127,28)" fg:x="1460" fg:w="20"/><text x="35.4987%" y="415.50"></text></g><g><title>hx`ropey::rope::Rope::slice (2 samples, 0.05%)</title><rect x="35.6832%" y="389" width="0.0483%" height="15" fill="rgb(224,137,22)" fg:x="1478" fg:w="2"/><text x="35.9332%" y="399.50"></text></g><g><title>hx`ropey::slice::RopeSlice::new_with_range (2 samples, 0.05%)</title><rect x="35.6832%" y="373" width="0.0483%" height="15" fill="rgb(254,70,32)" fg:x="1478" fg:w="2"/><text x="35.9332%" y="383.50"></text></g><g><title>hx`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="35.7798%" y="389" width="0.0241%" height="15" fill="rgb(229,75,37)" fg:x="1482" fg:w="1"/><text x="36.0298%" y="399.50"></text></g><g><title>hx`ropey::slice::RopeSlice::get_chunk_at_char (1 samples, 0.02%)</title><rect x="35.8040%" y="341" width="0.0241%" height="15" fill="rgb(252,64,23)" fg:x="1483" fg:w="1"/><text x="36.0540%" y="351.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_char (1 samples, 0.02%)</title><rect x="35.8040%" y="325" width="0.0241%" height="15" fill="rgb(232,162,48)" fg:x="1483" fg:w="1"/><text x="36.0540%" y="335.50"></text></g><g><title>hx`helix_core::graphemes::nth_prev_grapheme_boundary (2 samples, 0.05%)</title><rect x="35.8040%" y="357" width="0.0483%" height="15" fill="rgb(246,160,12)" fg:x="1483" fg:w="2"/><text x="36.0540%" y="367.50"></text></g><g><title>hx`str_indices::chars::to_byte_idx (1 samples, 0.02%)</title><rect x="35.8281%" y="341" width="0.0241%" height="15" fill="rgb(247,166,0)" fg:x="1484" fg:w="1"/><text x="36.0781%" y="351.50"></text></g><g><title>hx`alloc::rc::Rc&lt;[T]&gt;::from_iter_exact (3 samples, 0.07%)</title><rect x="35.8040%" y="389" width="0.0724%" height="15" fill="rgb(249,219,21)" fg:x="1483" fg:w="3"/><text x="36.0540%" y="399.50"></text></g><g><title>hx`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.07%)</title><rect x="35.8040%" y="373" width="0.0724%" height="15" fill="rgb(205,209,3)" fg:x="1483" fg:w="3"/><text x="36.0540%" y="383.50"></text></g><g><title>hx`ropey::str_utils::char_to_line_idx (1 samples, 0.02%)</title><rect x="35.8522%" y="357" width="0.0241%" height="15" fill="rgb(243,44,1)" fg:x="1485" fg:w="1"/><text x="36.1022%" y="367.50"></text></g><g><title>hx`hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="35.8764%" y="389" width="0.0241%" height="15" fill="rgb(206,159,16)" fg:x="1486" fg:w="1"/><text x="36.1264%" y="399.50"></text></g><g><title>hx`helix_view::gutter::diagnostic (1 samples, 0.02%)</title><rect x="35.9005%" y="373" width="0.0241%" height="15" fill="rgb(244,77,30)" fg:x="1487" fg:w="1"/><text x="36.1505%" y="383.50"></text></g><g><title>hx`helix_view::theme::Theme::try_get (1 samples, 0.02%)</title><rect x="35.9005%" y="357" width="0.0241%" height="15" fill="rgb(218,69,12)" fg:x="1487" fg:w="1"/><text x="36.1505%" y="367.50"></text></g><g><title>hx`helix_view::gutter::diagnostics_or_breakpoints (2 samples, 0.05%)</title><rect x="35.9005%" y="389" width="0.0483%" height="15" fill="rgb(212,87,7)" fg:x="1487" fg:w="2"/><text x="36.1505%" y="399.50"></text></g><g><title>hx`helix_view::theme::Theme::try_get (1 samples, 0.02%)</title><rect x="35.9247%" y="373" width="0.0241%" height="15" fill="rgb(245,114,25)" fg:x="1488" fg:w="1"/><text x="36.1747%" y="383.50"></text></g><g><title>hx`helix_view::gutter::diff (4 samples, 0.10%)</title><rect x="35.9488%" y="389" width="0.0966%" height="15" fill="rgb(210,61,42)" fg:x="1489" fg:w="4"/><text x="36.1988%" y="399.50"></text></g><g><title>hx`helix_view::theme::Theme::try_get (3 samples, 0.07%)</title><rect x="35.9730%" y="373" width="0.0724%" height="15" fill="rgb(211,52,33)" fg:x="1490" fg:w="3"/><text x="36.2230%" y="383.50"></text></g><g><title>hx`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="36.0212%" y="357" width="0.0241%" height="15" fill="rgb(234,58,33)" fg:x="1492" fg:w="1"/><text x="36.2712%" y="367.50"></text></g><g><title>hx`&lt;slotmap::KeyData as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="36.0454%" y="373" width="0.0241%" height="15" fill="rgb(220,115,36)" fg:x="1493" fg:w="1"/><text x="36.2954%" y="383.50"></text></g><g><title>hx`ropey::str_utils::char_to_line_idx (2 samples, 0.05%)</title><rect x="36.0695%" y="373" width="0.0483%" height="15" fill="rgb(243,153,54)" fg:x="1494" fg:w="2"/><text x="36.3195%" y="383.50"></text></g><g><title>hx`helix_view::gutter::line_numbers (4 samples, 0.10%)</title><rect x="36.0454%" y="389" width="0.0966%" height="15" fill="rgb(251,47,18)" fg:x="1493" fg:w="4"/><text x="36.2954%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.02%)</title><rect x="36.1178%" y="373" width="0.0241%" height="15" fill="rgb(242,102,42)" fg:x="1496" fg:w="1"/><text x="36.3678%" y="383.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::render_gutter (19 samples, 0.46%)</title><rect x="35.7315%" y="405" width="0.4587%" height="15" fill="rgb(234,31,38)" fg:x="1480" fg:w="19"/><text x="35.9815%" y="415.50"></text></g><g><title>hx`helix_view::theme::Theme::try_get (2 samples, 0.05%)</title><rect x="36.1420%" y="389" width="0.0483%" height="15" fill="rgb(221,117,51)" fg:x="1497" fg:w="2"/><text x="36.3920%" y="399.50"></text></g><g><title>hx`&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load (1 samples, 0.02%)</title><rect x="36.1902%" y="389" width="0.0241%" height="15" fill="rgb(212,20,18)" fg:x="1499" fg:w="1"/><text x="36.4402%" y="399.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::render_rulers (2 samples, 0.05%)</title><rect x="36.1902%" y="405" width="0.0483%" height="15" fill="rgb(245,133,36)" fg:x="1499" fg:w="2"/><text x="36.4402%" y="415.50"></text></g><g><title>hx`helix_view::theme::Theme::try_get (1 samples, 0.02%)</title><rect x="36.2144%" y="389" width="0.0241%" height="15" fill="rgb(212,6,19)" fg:x="1500" fg:w="1"/><text x="36.4644%" y="399.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::render_view::_{{closure}} (1 samples, 0.02%)</title><rect x="36.2385%" y="405" width="0.0241%" height="15" fill="rgb(218,1,36)" fg:x="1501" fg:w="1"/><text x="36.4885%" y="415.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="36.2627%" y="389" width="0.0241%" height="15" fill="rgb(246,84,54)" fg:x="1502" fg:w="1"/><text x="36.5127%" y="399.50"></text></g><g><title>hx`ropey::rope::Rope::new (2 samples, 0.05%)</title><rect x="36.2868%" y="341" width="0.0483%" height="15" fill="rgb(242,110,6)" fg:x="1503" fg:w="2"/><text x="36.5368%" y="351.50"></text></g><g><title>hx`_mi_malloc_generic (2 samples, 0.05%)</title><rect x="36.2868%" y="325" width="0.0483%" height="15" fill="rgb(214,47,5)" fg:x="1503" fg:w="2"/><text x="36.5368%" y="335.50"></text></g><g><title>hx`mi_find_page (1 samples, 0.02%)</title><rect x="36.3110%" y="309" width="0.0241%" height="15" fill="rgb(218,159,25)" fg:x="1504" fg:w="1"/><text x="36.5610%" y="319.50"></text></g><g><title>hx`&lt;helix_core::history::History as core::default::Default&gt;::default (3 samples, 0.07%)</title><rect x="36.2868%" y="357" width="0.0724%" height="15" fill="rgb(215,211,28)" fg:x="1503" fg:w="3"/><text x="36.5368%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="36.3351%" y="341" width="0.0241%" height="15" fill="rgb(238,59,32)" fg:x="1505" fg:w="1"/><text x="36.5851%" y="351.50"></text></g><g><title>hx`helix_term::ui::statusline::render_file_modification_indicator (4 samples, 0.10%)</title><rect x="36.2868%" y="389" width="0.0966%" height="15" fill="rgb(226,82,3)" fg:x="1503" fg:w="4"/><text x="36.5368%" y="399.50"></text></g><g><title>hx`helix_view::document::Document::is_modified (4 samples, 0.10%)</title><rect x="36.2868%" y="373" width="0.0966%" height="15" fill="rgb(240,164,32)" fg:x="1503" fg:w="4"/><text x="36.5368%" y="383.50"></text></g><g><title>hx`ropey::rope::Rope::new (1 samples, 0.02%)</title><rect x="36.3592%" y="357" width="0.0241%" height="15" fill="rgb(232,46,7)" fg:x="1506" fg:w="1"/><text x="36.6092%" y="367.50"></text></g><g><title>hx`alloc::fmt::format::format_inner (2 samples, 0.05%)</title><rect x="36.3834%" y="373" width="0.0483%" height="15" fill="rgb(229,129,53)" fg:x="1507" fg:w="2"/><text x="36.6334%" y="383.50"></text></g><g><title>hx`&lt;alloc::borrow::Cow&lt;B&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="36.4075%" y="357" width="0.0241%" height="15" fill="rgb(234,188,29)" fg:x="1508" fg:w="1"/><text x="36.6575%" y="367.50"></text></g><g><title>hx`dirs_sys_next::target_unix_not_redox::home_dir (1 samples, 0.02%)</title><rect x="36.4558%" y="357" width="0.0241%" height="15" fill="rgb(246,141,4)" fg:x="1510" fg:w="1"/><text x="36.7058%" y="367.50"></text></g><g><title>hx`std::env::_var_os (1 samples, 0.02%)</title><rect x="36.4558%" y="341" width="0.0241%" height="15" fill="rgb(229,23,39)" fg:x="1510" fg:w="1"/><text x="36.7058%" y="351.50"></text></g><g><title>hx`&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.02%)</title><rect x="36.4558%" y="325" width="0.0241%" height="15" fill="rgb(206,12,3)" fg:x="1510" fg:w="1"/><text x="36.7058%" y="335.50"></text></g><g><title>hx`helix_core::path::fold_home_dir (3 samples, 0.07%)</title><rect x="36.4317%" y="373" width="0.0724%" height="15" fill="rgb(252,226,20)" fg:x="1509" fg:w="3"/><text x="36.6817%" y="383.50"></text></g><g><title>hx`std::path::Path::_strip_prefix (1 samples, 0.02%)</title><rect x="36.4800%" y="357" width="0.0241%" height="15" fill="rgb(216,123,35)" fg:x="1511" fg:w="1"/><text x="36.7300%" y="367.50"></text></g><g><title>hx`&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="36.4800%" y="341" width="0.0241%" height="15" fill="rgb(212,68,40)" fg:x="1511" fg:w="1"/><text x="36.7300%" y="351.50"></text></g><g><title>hx`&lt;std::path::Component as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="36.5041%" y="357" width="0.0241%" height="15" fill="rgb(254,125,32)" fg:x="1512" fg:w="1"/><text x="36.7541%" y="367.50"></text></g><g><title>hx`&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="36.5282%" y="357" width="0.0241%" height="15" fill="rgb(253,97,22)" fg:x="1513" fg:w="1"/><text x="36.7782%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl_nocancel (10 samples, 0.24%)</title><rect x="36.5765%" y="309" width="0.2414%" height="15" fill="rgb(241,101,14)" fg:x="1515" fg:w="10"/><text x="36.8265%" y="319.50"></text></g><g><title>libsystem_c.dylib`__getcwd (76 samples, 1.83%)</title><rect x="36.5765%" y="325" width="1.8349%" height="15" fill="rgb(238,103,29)" fg:x="1515" fg:w="76"/><text x="36.8265%" y="335.50">l..</text></g><g><title>libsystem_kernel.dylib`__open_nocancel (66 samples, 1.59%)</title><rect x="36.8180%" y="309" width="1.5934%" height="15" fill="rgb(233,195,47)" fg:x="1525" fg:w="66"/><text x="37.0680%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (6 samples, 0.14%)</title><rect x="38.4114%" y="325" width="0.1449%" height="15" fill="rgb(246,218,30)" fg:x="1591" fg:w="6"/><text x="38.6614%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`fstat (3 samples, 0.07%)</title><rect x="38.5563%" y="325" width="0.0724%" height="15" fill="rgb(219,145,47)" fg:x="1597" fg:w="3"/><text x="38.8063%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`stat (19 samples, 0.46%)</title><rect x="38.6287%" y="325" width="0.4587%" height="15" fill="rgb(243,12,26)" fg:x="1600" fg:w="19"/><text x="38.8787%" y="335.50"></text></g><g><title>hx`std::env::current_dir (106 samples, 2.56%)</title><rect x="36.5524%" y="357" width="2.5592%" height="15" fill="rgb(214,87,16)" fg:x="1514" fg:w="106"/><text x="36.8024%" y="367.50">hx..</text></g><g><title>libsystem_c.dylib`__private_getcwd (106 samples, 2.56%)</title><rect x="36.5524%" y="341" width="2.5592%" height="15" fill="rgb(208,99,42)" fg:x="1514" fg:w="106"/><text x="36.8024%" y="351.50">li..</text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.02%)</title><rect x="39.0874%" y="325" width="0.0241%" height="15" fill="rgb(253,99,2)" fg:x="1619" fg:w="1"/><text x="39.3374%" y="335.50"></text></g><g><title>hx`std::path::Components::as_path (1 samples, 0.02%)</title><rect x="39.1115%" y="357" width="0.0241%" height="15" fill="rgb(220,168,23)" fg:x="1620" fg:w="1"/><text x="39.3615%" y="367.50"></text></g><g><title>hx`&lt;std::path::Component as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="39.1598%" y="341" width="0.0241%" height="15" fill="rgb(242,38,24)" fg:x="1622" fg:w="1"/><text x="39.4098%" y="351.50"></text></g><g><title>hx`helix_term::ui::statusline::render_file_name (118 samples, 2.85%)</title><rect x="36.3834%" y="389" width="2.8489%" height="15" fill="rgb(225,182,9)" fg:x="1507" fg:w="118"/><text x="36.6334%" y="399.50">hx..</text></g><g><title>hx`helix_core::path::get_relative_path (113 samples, 2.73%)</title><rect x="36.5041%" y="373" width="2.7282%" height="15" fill="rgb(243,178,37)" fg:x="1512" fg:w="113"/><text x="36.7541%" y="383.50">hx..</text></g><g><title>hx`std::path::Path::_strip_prefix (4 samples, 0.10%)</title><rect x="39.1357%" y="357" width="0.0966%" height="15" fill="rgb(232,139,19)" fg:x="1621" fg:w="4"/><text x="39.3857%" y="367.50"></text></g><g><title>hx`&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="39.1840%" y="341" width="0.0483%" height="15" fill="rgb(225,201,24)" fg:x="1623" fg:w="2"/><text x="39.4340%" y="351.50"></text></g><g><title>hx`helix_term::ui::statusline::render_lsp_spinner (2 samples, 0.05%)</title><rect x="39.2323%" y="389" width="0.0483%" height="15" fill="rgb(221,47,46)" fg:x="1625" fg:w="2"/><text x="39.4823%" y="399.50"></text></g><g><title>hx`helix_term::ui::spinner::Spinner::frame (1 samples, 0.02%)</title><rect x="39.2564%" y="373" width="0.0241%" height="15" fill="rgb(249,23,13)" fg:x="1626" fg:w="1"/><text x="39.5064%" y="383.50"></text></g><g><title>hx`alloc::fmt::format::format_inner (3 samples, 0.07%)</title><rect x="39.2805%" y="373" width="0.0724%" height="15" fill="rgb(219,9,5)" fg:x="1627" fg:w="3"/><text x="39.5305%" y="383.50"></text></g><g><title>hx`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="39.3047%" y="357" width="0.0483%" height="15" fill="rgb(254,171,16)" fg:x="1628" fg:w="2"/><text x="39.5547%" y="367.50"></text></g><g><title>hx`helix_term::ui::statusline::render_mode (4 samples, 0.10%)</title><rect x="39.2805%" y="389" width="0.0966%" height="15" fill="rgb(230,171,20)" fg:x="1627" fg:w="4"/><text x="39.5305%" y="399.50"></text></g><g><title>hx`mi_malloc (1 samples, 0.02%)</title><rect x="39.3530%" y="373" width="0.0241%" height="15" fill="rgb(210,71,41)" fg:x="1630" fg:w="1"/><text x="39.6030%" y="383.50"></text></g><g><title>hx`core::fmt::write (1 samples, 0.02%)</title><rect x="39.3771%" y="357" width="0.0241%" height="15" fill="rgb(206,173,20)" fg:x="1631" fg:w="1"/><text x="39.6271%" y="367.50"></text></g><g><title>hx`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="39.3771%" y="341" width="0.0241%" height="15" fill="rgb(233,88,34)" fg:x="1631" fg:w="1"/><text x="39.6271%" y="351.50"></text></g><g><title>hx`alloc::fmt::format::format_inner (2 samples, 0.05%)</title><rect x="39.3771%" y="373" width="0.0483%" height="15" fill="rgb(223,209,46)" fg:x="1631" fg:w="2"/><text x="39.6271%" y="383.50"></text></g><g><title>hx`mi_malloc (1 samples, 0.02%)</title><rect x="39.4013%" y="357" width="0.0241%" height="15" fill="rgb(250,43,18)" fg:x="1632" fg:w="1"/><text x="39.6513%" y="367.50"></text></g><g><title>hx`helix_core::graphemes::nth_prev_grapheme_boundary (2 samples, 0.05%)</title><rect x="39.4254%" y="357" width="0.0483%" height="15" fill="rgb(208,13,10)" fg:x="1633" fg:w="2"/><text x="39.6754%" y="367.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_byte (1 samples, 0.02%)</title><rect x="39.4495%" y="341" width="0.0241%" height="15" fill="rgb(212,200,36)" fg:x="1634" fg:w="1"/><text x="39.6995%" y="351.50"></text></g><g><title>hx`helix_core::graphemes::nth_prev_grapheme_boundary (1 samples, 0.02%)</title><rect x="39.4978%" y="341" width="0.0241%" height="15" fill="rgb(225,90,30)" fg:x="1636" fg:w="1"/><text x="39.7478%" y="351.50"></text></g><g><title>hx`ropey::slice::RopeSlice::get_chunk_at_char (1 samples, 0.02%)</title><rect x="39.4978%" y="325" width="0.0241%" height="15" fill="rgb(236,182,39)" fg:x="1636" fg:w="1"/><text x="39.7478%" y="335.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_char (1 samples, 0.02%)</title><rect x="39.4978%" y="309" width="0.0241%" height="15" fill="rgb(212,144,35)" fg:x="1636" fg:w="1"/><text x="39.7478%" y="319.50"></text></g><g><title>hx`ropey::slice::RopeSlice::char_to_line (2 samples, 0.05%)</title><rect x="39.5220%" y="341" width="0.0483%" height="15" fill="rgb(228,63,44)" fg:x="1637" fg:w="2"/><text x="39.7720%" y="351.50"></text></g><g><title>hx`ropey::slice::RopeSlice::get_chunk_at_line_break (1 samples, 0.02%)</title><rect x="39.5703%" y="341" width="0.0241%" height="15" fill="rgb(228,109,6)" fg:x="1639" fg:w="1"/><text x="39.8203%" y="351.50"></text></g><g><title>hx`ropey::slice::RopeSlice::new_with_range (1 samples, 0.02%)</title><rect x="39.5944%" y="341" width="0.0241%" height="15" fill="rgb(238,117,24)" fg:x="1640" fg:w="1"/><text x="39.8444%" y="351.50"></text></g><g><title>hx`str_indices::chars::to_byte_idx (1 samples, 0.02%)</title><rect x="39.5944%" y="325" width="0.0241%" height="15" fill="rgb(242,26,26)" fg:x="1640" fg:w="1"/><text x="39.8444%" y="335.50"></text></g><g><title>hx`helix_core::position::coords_at_pos (9 samples, 0.22%)</title><rect x="39.4737%" y="357" width="0.2173%" height="15" fill="rgb(221,92,48)" fg:x="1635" fg:w="9"/><text x="39.7237%" y="367.50"></text></g><g><title>hx`ropey::str_utils::line_to_char_idx (3 samples, 0.07%)</title><rect x="39.6185%" y="341" width="0.0724%" height="15" fill="rgb(209,209,32)" fg:x="1641" fg:w="3"/><text x="39.8685%" y="351.50"></text></g><g><title>hx`str_indices::lines_lf::to_byte_idx (3 samples, 0.07%)</title><rect x="39.6185%" y="325" width="0.0724%" height="15" fill="rgb(221,70,22)" fg:x="1641" fg:w="3"/><text x="39.8685%" y="335.50"></text></g><g><title>hx`ropey::rope::Rope::slice (1 samples, 0.02%)</title><rect x="39.6910%" y="357" width="0.0241%" height="15" fill="rgb(248,145,5)" fg:x="1644" fg:w="1"/><text x="39.9410%" y="367.50"></text></g><g><title>hx`ropey::slice::RopeSlice::char_to_line (2 samples, 0.05%)</title><rect x="39.7151%" y="357" width="0.0483%" height="15" fill="rgb(226,116,26)" fg:x="1645" fg:w="2"/><text x="39.9651%" y="367.50"></text></g><g><title>hx`helix_term::ui::statusline::render_position (17 samples, 0.41%)</title><rect x="39.3771%" y="389" width="0.4104%" height="15" fill="rgb(244,5,17)" fg:x="1631" fg:w="17"/><text x="39.6271%" y="399.50"></text></g><g><title>hx`helix_term::ui::statusline::get_position (15 samples, 0.36%)</title><rect x="39.4254%" y="373" width="0.3621%" height="15" fill="rgb(252,159,33)" fg:x="1633" fg:w="15"/><text x="39.6754%" y="383.50"></text></g><g><title>hx`ropey::str_utils::line_to_char_idx (1 samples, 0.02%)</title><rect x="39.7634%" y="357" width="0.0241%" height="15" fill="rgb(206,71,0)" fg:x="1647" fg:w="1"/><text x="40.0134%" y="367.50"></text></g><g><title>hx`helix_term::ui::statusline::render_selections (1 samples, 0.02%)</title><rect x="39.7875%" y="389" width="0.0241%" height="15" fill="rgb(233,118,54)" fg:x="1648" fg:w="1"/><text x="40.0375%" y="399.50"></text></g><g><title>hx`alloc::fmt::format::format_inner (1 samples, 0.02%)</title><rect x="39.7875%" y="373" width="0.0241%" height="15" fill="rgb(234,83,48)" fg:x="1648" fg:w="1"/><text x="40.0375%" y="383.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::set_string_truncated_at_end (4 samples, 0.10%)</title><rect x="39.8117%" y="389" width="0.0966%" height="15" fill="rgb(228,3,54)" fg:x="1649" fg:w="4"/><text x="40.0617%" y="399.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="39.8841%" y="373" width="0.0241%" height="15" fill="rgb(226,155,13)" fg:x="1652" fg:w="1"/><text x="40.1341%" y="383.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::set_style (1 samples, 0.02%)</title><rect x="39.9083%" y="389" width="0.0241%" height="15" fill="rgb(241,28,37)" fg:x="1653" fg:w="1"/><text x="40.1583%" y="399.50"></text></g><g><title>hx`helix_term::ui::statusline::render (153 samples, 3.69%)</title><rect x="36.2627%" y="405" width="3.6939%" height="15" fill="rgb(233,93,10)" fg:x="1502" fg:w="153"/><text x="36.5127%" y="415.50">hx`h..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="39.9324%" y="389" width="0.0241%" height="15" fill="rgb(225,113,19)" fg:x="1654" fg:w="1"/><text x="40.1824%" y="399.50"></text></g><g><title>hx`helix_term::ui::statusline::render_diagnostics (1 samples, 0.02%)</title><rect x="39.9565%" y="405" width="0.0241%" height="15" fill="rgb(241,2,18)" fg:x="1655" fg:w="1"/><text x="40.2065%" y="415.50"></text></g><g><title>hx`helix_view::gutter::line_numbers (1 samples, 0.02%)</title><rect x="39.9807%" y="405" width="0.0241%" height="15" fill="rgb(228,207,21)" fg:x="1656" fg:w="1"/><text x="40.2307%" y="415.50"></text></g><g><title>hx`helix_view::gutter::line_numbers_width (1 samples, 0.02%)</title><rect x="40.0048%" y="405" width="0.0241%" height="15" fill="rgb(213,211,35)" fg:x="1657" fg:w="1"/><text x="40.2548%" y="415.50"></text></g><g><title>hx`mi_malloc (1 samples, 0.02%)</title><rect x="40.0290%" y="405" width="0.0241%" height="15" fill="rgb(209,83,10)" fg:x="1658" fg:w="1"/><text x="40.2790%" y="415.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::render_view (1,613 samples, 38.94%)</title><rect x="1.1830%" y="421" width="38.9425%" height="15" fill="rgb(209,164,1)" fg:x="49" fg:w="1613"/><text x="1.4330%" y="431.50">hx`helix_term::ui::editor::EditorView::render_view</text></g><g><title>hx`ropey::str_utils::char_to_line_idx (3 samples, 0.07%)</title><rect x="40.0531%" y="405" width="0.0724%" height="15" fill="rgb(213,184,43)" fg:x="1659" fg:w="3"/><text x="40.3031%" y="415.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="40.1255%" y="405" width="0.0241%" height="15" fill="rgb(231,61,34)" fg:x="1662" fg:w="1"/><text x="40.3755%" y="415.50"></text></g><g><title>hx`&lt;helix_tui::widgets::block::Block as helix_tui::widgets::Widget&gt;::render (16 samples, 0.39%)</title><rect x="40.1497%" y="405" width="0.3863%" height="15" fill="rgb(235,75,3)" fg:x="1663" fg:w="16"/><text x="40.3997%" y="415.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::set_style (12 samples, 0.29%)</title><rect x="40.2463%" y="389" width="0.2897%" height="15" fill="rgb(220,106,47)" fg:x="1667" fg:w="12"/><text x="40.4963%" y="399.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::set_string_truncated_at_end (2 samples, 0.05%)</title><rect x="40.5360%" y="389" width="0.0483%" height="15" fill="rgb(210,196,33)" fg:x="1679" fg:w="2"/><text x="40.7860%" y="399.50"></text></g><g><title>hx`helix_term::ui::explorer::Explorer::render_tree (3 samples, 0.07%)</title><rect x="40.5360%" y="405" width="0.0724%" height="15" fill="rgb(229,154,42)" fg:x="1679" fg:w="3"/><text x="40.7860%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="40.5843%" y="389" width="0.0241%" height="15" fill="rgb(228,114,26)" fg:x="1681" fg:w="1"/><text x="40.8343%" y="399.50"></text></g><g><title>hx`&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="40.7533%" y="373" width="0.0241%" height="15" fill="rgb(208,144,1)" fg:x="1688" fg:w="1"/><text x="41.0033%" y="383.50"></text></g><g><title>hx`&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="40.7774%" y="357" width="0.0724%" height="15" fill="rgb(239,112,37)" fg:x="1689" fg:w="3"/><text x="41.0274%" y="367.50"></text></g><g><title>hx`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="40.8015%" y="341" width="0.0483%" height="15" fill="rgb(210,96,50)" fg:x="1690" fg:w="2"/><text x="41.0515%" y="351.50"></text></g><g><title>hx`alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="40.8015%" y="325" width="0.0483%" height="15" fill="rgb(222,178,2)" fg:x="1690" fg:w="2"/><text x="41.0515%" y="335.50"></text></g><g><title>hx`mi_malloc (1 samples, 0.02%)</title><rect x="40.8257%" y="309" width="0.0241%" height="15" fill="rgb(226,74,18)" fg:x="1691" fg:w="1"/><text x="41.0757%" y="319.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.12%)</title><rect x="40.7533%" y="389" width="0.1207%" height="15" fill="rgb(225,67,54)" fg:x="1688" fg:w="5"/><text x="41.0033%" y="399.50"></text></g><g><title>hx`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.10%)</title><rect x="40.7774%" y="373" width="0.0966%" height="15" fill="rgb(251,92,32)" fg:x="1689" fg:w="4"/><text x="41.0274%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="40.8498%" y="357" width="0.0241%" height="15" fill="rgb(228,149,22)" fg:x="1692" fg:w="1"/><text x="41.0998%" y="367.50"></text></g><g><title>hx`&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="40.8740%" y="373" width="0.0241%" height="15" fill="rgb(243,54,13)" fg:x="1693" fg:w="1"/><text x="41.1240%" y="383.50"></text></g><g><title>hx`alloc::fmt::format::format_inner (2 samples, 0.05%)</title><rect x="40.8740%" y="389" width="0.0483%" height="15" fill="rgb(243,180,28)" fg:x="1693" fg:w="2"/><text x="41.1240%" y="399.50"></text></g><g><title>hx`core::fmt::write (1 samples, 0.02%)</title><rect x="40.8981%" y="373" width="0.0241%" height="15" fill="rgb(208,167,24)" fg:x="1694" fg:w="1"/><text x="41.1481%" y="383.50"></text></g><g><title>hx`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.12%)</title><rect x="40.9947%" y="309" width="0.1207%" height="15" fill="rgb(245,73,45)" fg:x="1698" fg:w="5"/><text x="41.2447%" y="319.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;core::iter::adapters::chain::Chain&lt;alloc::vec::into_iter::IntoIter&lt;helix_term::ui::tree::RenderedLine&gt;,core::iter::adapters::flatten::FlatMap&lt;core::slice::iter::Iter&lt;helix_term::ui::tree::Tree&lt;helix_term::ui::explorer::FileInfo&gt;&gt;,alloc::vec::Vec&lt;helix_term::ui::tree::RenderedLine&gt;,helix_term::ui::tree::render_tree&lt;helix_term::ui::explorer::FileInfo&gt;::{{closure}}&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="41.1154%" y="309" width="0.0241%" height="15" fill="rgb(237,203,48)" fg:x="1703" fg:w="1"/><text x="41.3654%" y="319.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.29%)</title><rect x="40.9947%" y="325" width="0.2897%" height="15" fill="rgb(211,197,16)" fg:x="1698" fg:w="12"/><text x="41.2447%" y="335.50"></text></g><g><title>hx`mi_free (6 samples, 0.14%)</title><rect x="41.1395%" y="309" width="0.1449%" height="15" fill="rgb(243,99,51)" fg:x="1704" fg:w="6"/><text x="41.3895%" y="319.50"></text></g><g><title>hx`std::path::Components::include_cur_dir (1 samples, 0.02%)</title><rect x="41.3568%" y="293" width="0.0241%" height="15" fill="rgb(215,123,29)" fg:x="1713" fg:w="1"/><text x="41.6068%" y="303.50"></text></g><g><title>hx`&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (5 samples, 0.12%)</title><rect x="41.3085%" y="309" width="0.1207%" height="15" fill="rgb(239,186,37)" fg:x="1711" fg:w="5"/><text x="41.5585%" y="319.50"></text></g><g><title>hx`std::path::Components::parse_next_component_back (2 samples, 0.05%)</title><rect x="41.3810%" y="293" width="0.0483%" height="15" fill="rgb(252,136,39)" fg:x="1714" fg:w="2"/><text x="41.6310%" y="303.50"></text></g><g><title>hx`&lt;helix_term::ui::explorer::FileInfo as helix_term::ui::tree::TreeViewItem&gt;::name (8 samples, 0.19%)</title><rect x="41.2844%" y="325" width="0.1931%" height="15" fill="rgb(223,213,32)" fg:x="1710" fg:w="8"/><text x="41.5344%" y="335.50"></text></g><g><title>hx`mi_malloc (2 samples, 0.05%)</title><rect x="41.4293%" y="309" width="0.0483%" height="15" fill="rgb(233,115,5)" fg:x="1716" fg:w="2"/><text x="41.6793%" y="319.50"></text></g><g><title>hx`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.14%)</title><rect x="41.5258%" y="293" width="0.1449%" height="15" fill="rgb(207,226,44)" fg:x="1720" fg:w="6"/><text x="41.7758%" y="303.50"></text></g><g><title>hx`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.12%)</title><rect x="41.5500%" y="277" width="0.1207%" height="15" fill="rgb(208,126,0)" fg:x="1721" fg:w="5"/><text x="41.8000%" y="287.50"></text></g><g><title>hx`alloc::raw_vec::finish_grow (4 samples, 0.10%)</title><rect x="41.5741%" y="261" width="0.0966%" height="15" fill="rgb(244,66,21)" fg:x="1722" fg:w="4"/><text x="41.8241%" y="271.50"></text></g><g><title>hx`mi_malloc (3 samples, 0.07%)</title><rect x="41.5983%" y="245" width="0.0724%" height="15" fill="rgb(222,97,12)" fg:x="1723" fg:w="3"/><text x="41.8483%" y="255.50"></text></g><g><title>hx`DYLD-STUB$$memcpy (1 samples, 0.02%)</title><rect x="41.6707%" y="293" width="0.0241%" height="15" fill="rgb(219,213,19)" fg:x="1726" fg:w="1"/><text x="41.9207%" y="303.50"></text></g><g><title>hx`alloc::fmt::format::format_inner (13 samples, 0.31%)</title><rect x="41.4775%" y="325" width="0.3139%" height="15" fill="rgb(252,169,30)" fg:x="1718" fg:w="13"/><text x="41.7275%" y="335.50"></text></g><g><title>hx`core::fmt::write (11 samples, 0.27%)</title><rect x="41.5258%" y="309" width="0.2656%" height="15" fill="rgb(206,32,51)" fg:x="1720" fg:w="11"/><text x="41.7758%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.10%)</title><rect x="41.6948%" y="293" width="0.0966%" height="15" fill="rgb(250,172,42)" fg:x="1727" fg:w="4"/><text x="41.9448%" y="303.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;core::iter::adapters::chain::Chain&lt;alloc::vec::into_iter::IntoIter&lt;helix_term::ui::tree::RenderedLine&gt;,core::iter::adapters::flatten::FlatMap&lt;core::slice::iter::Iter&lt;helix_term::ui::tree::Tree&lt;helix_term::ui::explorer::FileInfo&gt;&gt;,alloc::vec::Vec&lt;helix_term::ui::tree::RenderedLine&gt;,helix_term::ui::tree::render_tree&lt;helix_term::ui::explorer::FileInfo&gt;::{{closure}}&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="41.7914%" y="325" width="0.0241%" height="15" fill="rgb(209,34,43)" fg:x="1731" fg:w="1"/><text x="42.0414%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="41.8155%" y="325" width="0.0241%" height="15" fill="rgb(223,11,35)" fg:x="1732" fg:w="1"/><text x="42.0655%" y="335.50"></text></g><g><title>hx`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.97%)</title><rect x="40.9223%" y="357" width="0.9657%" height="15" fill="rgb(251,219,26)" fg:x="1695" fg:w="40"/><text x="41.1723%" y="367.50"></text></g><g><title>hx`helix_term::ui::tree::render_tree (40 samples, 0.97%)</title><rect x="40.9223%" y="341" width="0.9657%" height="15" fill="rgb(231,119,3)" fg:x="1695" fg:w="40"/><text x="41.1723%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.05%)</title><rect x="41.8397%" y="325" width="0.0483%" height="15" fill="rgb(216,97,11)" fg:x="1733" fg:w="2"/><text x="42.0897%" y="335.50"></text></g><g><title>hx`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.07%)</title><rect x="41.8880%" y="357" width="0.0724%" height="15" fill="rgb(223,59,9)" fg:x="1735" fg:w="3"/><text x="42.1380%" y="367.50"></text></g><g><title>hx`alloc::raw_vec::finish_grow (3 samples, 0.07%)</title><rect x="41.8880%" y="341" width="0.0724%" height="15" fill="rgb(233,93,31)" fg:x="1735" fg:w="3"/><text x="42.1380%" y="351.50"></text></g><g><title>hx`_mi_heap_realloc_zero (1 samples, 0.02%)</title><rect x="41.9363%" y="325" width="0.0241%" height="15" fill="rgb(239,81,33)" fg:x="1737" fg:w="1"/><text x="42.1863%" y="335.50"></text></g><g><title>hx`_mi_malloc_generic (1 samples, 0.02%)</title><rect x="41.9363%" y="309" width="0.0241%" height="15" fill="rgb(213,120,34)" fg:x="1737" fg:w="1"/><text x="42.1863%" y="319.50"></text></g><g><title>hx`mi_find_page (1 samples, 0.02%)</title><rect x="41.9363%" y="293" width="0.0241%" height="15" fill="rgb(243,49,53)" fg:x="1737" fg:w="1"/><text x="42.1863%" y="303.50"></text></g><g><title>hx`mi_free (2 samples, 0.05%)</title><rect x="41.9604%" y="357" width="0.0483%" height="15" fill="rgb(247,216,33)" fg:x="1738" fg:w="2"/><text x="42.2104%" y="367.50"></text></g><g><title>hx`helix_term::ui::tree::render_tree (47 samples, 1.13%)</title><rect x="40.9223%" y="389" width="1.1347%" height="15" fill="rgb(226,26,14)" fg:x="1695" fg:w="47"/><text x="41.1723%" y="399.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (47 samples, 1.13%)</title><rect x="40.9223%" y="373" width="1.1347%" height="15" fill="rgb(215,49,53)" fg:x="1695" fg:w="47"/><text x="41.1723%" y="383.50"></text></g><g><title>hx`mi_malloc (2 samples, 0.05%)</title><rect x="42.0087%" y="357" width="0.0483%" height="15" fill="rgb(245,162,40)" fg:x="1740" fg:w="2"/><text x="42.2587%" y="367.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::set_string_truncated_at_end (24 samples, 0.58%)</title><rect x="42.0570%" y="389" width="0.5794%" height="15" fill="rgb(229,68,17)" fg:x="1742" fg:w="24"/><text x="42.3070%" y="399.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="42.5640%" y="373" width="0.0724%" height="15" fill="rgb(213,182,10)" fg:x="1763" fg:w="3"/><text x="42.8140%" y="383.50"></text></g><g><title>hx`helix_view::theme::Theme::try_get (1 samples, 0.02%)</title><rect x="42.6364%" y="389" width="0.0241%" height="15" fill="rgb(245,125,30)" fg:x="1766" fg:w="1"/><text x="42.8864%" y="399.50"></text></g><g><title>hx`mi_malloc (1 samples, 0.02%)</title><rect x="42.6606%" y="389" width="0.0241%" height="15" fill="rgb(232,202,2)" fg:x="1767" fg:w="1"/><text x="42.9106%" y="399.50"></text></g><g><title>hx`helix_term::ui::tree::TreeView&lt;T&gt;::render (87 samples, 2.10%)</title><rect x="40.6084%" y="405" width="2.1004%" height="15" fill="rgb(237,140,51)" fg:x="1682" fg:w="87"/><text x="40.8584%" y="415.50">h..</text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="42.6847%" y="389" width="0.0241%" height="15" fill="rgb(236,157,25)" fg:x="1768" fg:w="1"/><text x="42.9347%" y="399.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::clear_with (39 samples, 0.94%)</title><rect x="42.7088%" y="405" width="0.9416%" height="15" fill="rgb(219,209,0)" fg:x="1769" fg:w="39"/><text x="42.9588%" y="415.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::set_string_truncated_at_end (1 samples, 0.02%)</title><rect x="43.6504%" y="405" width="0.0241%" height="15" fill="rgb(240,116,54)" fg:x="1808" fg:w="1"/><text x="43.9004%" y="415.50"></text></g><g><title>hx`helix_view::theme::Theme::try_get (1 samples, 0.02%)</title><rect x="43.6746%" y="405" width="0.0241%" height="15" fill="rgb(216,10,36)" fg:x="1809" fg:w="1"/><text x="43.9246%" y="415.50"></text></g><g><title>hx`helix_term::ui::explorer::Explorer::render_embed (149 samples, 3.60%)</title><rect x="40.1255%" y="421" width="3.5973%" height="15" fill="rgb(222,72,44)" fg:x="1662" fg:w="149"/><text x="40.3755%" y="431.50">hx`h..</text></g><g><title>hx`mi_free (1 samples, 0.02%)</title><rect x="43.6987%" y="405" width="0.0241%" height="15" fill="rgb(232,159,9)" fg:x="1810" fg:w="1"/><text x="43.9487%" y="415.50"></text></g><g><title>hx`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="43.7470%" y="373" width="0.0241%" height="15" fill="rgb(210,39,32)" fg:x="1812" fg:w="1"/><text x="43.9970%" y="383.50"></text></g><g><title>hx`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="43.7470%" y="357" width="0.0241%" height="15" fill="rgb(216,194,45)" fg:x="1812" fg:w="1"/><text x="43.9970%" y="367.50"></text></g><g><title>hx`&lt;helix_tui::widgets::paragraph::Paragraph as helix_tui::widgets::Widget&gt;::render (2 samples, 0.05%)</title><rect x="43.7470%" y="405" width="0.0483%" height="15" fill="rgb(218,18,35)" fg:x="1812" fg:w="2"/><text x="43.9970%" y="415.50"></text></g><g><title>hx`&lt;helix_tui::widgets::reflow::LineTruncator as helix_tui::widgets::reflow::LineComposer&gt;::next_line (2 samples, 0.05%)</title><rect x="43.7470%" y="389" width="0.0483%" height="15" fill="rgb(207,83,51)" fg:x="1812" fg:w="2"/><text x="43.9970%" y="399.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="43.7711%" y="373" width="0.0241%" height="15" fill="rgb(225,63,43)" fg:x="1813" fg:w="1"/><text x="44.0211%" y="383.50"></text></g><g><title>hx`helix_term::ui::info::_&lt;impl helix_term::compositor::Component for helix_view::info::Info&gt;::render (4 samples, 0.10%)</title><rect x="43.7228%" y="421" width="0.0966%" height="15" fill="rgb(207,57,36)" fg:x="1811" fg:w="4"/><text x="43.9728%" y="431.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::clear_with (1 samples, 0.02%)</title><rect x="43.7953%" y="405" width="0.0241%" height="15" fill="rgb(216,99,33)" fg:x="1814" fg:w="1"/><text x="44.0453%" y="415.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::set_style (82 samples, 1.98%)</title><rect x="43.8194%" y="421" width="1.9797%" height="15" fill="rgb(225,42,16)" fg:x="1815" fg:w="82"/><text x="44.0694%" y="431.50">h..</text></g><g><title>hx`helix_view::theme::Theme::try_get (2 samples, 0.05%)</title><rect x="45.7991%" y="421" width="0.0483%" height="15" fill="rgb(220,201,45)" fg:x="1897" fg:w="2"/><text x="46.0491%" y="431.50"></text></g><g><title>hx`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="45.8233%" y="405" width="0.0241%" height="15" fill="rgb(225,33,4)" fg:x="1898" fg:w="1"/><text x="46.0733%" y="415.50"></text></g><g><title>hx`mi_malloc (1 samples, 0.02%)</title><rect x="45.8474%" y="421" width="0.0241%" height="15" fill="rgb(224,33,50)" fg:x="1899" fg:w="1"/><text x="46.0974%" y="431.50"></text></g><g><title>hx`ropey::slice::RopeSlice::line_to_byte (1 samples, 0.02%)</title><rect x="45.8716%" y="421" width="0.0241%" height="15" fill="rgb(246,198,51)" fg:x="1900" fg:w="1"/><text x="46.1216%" y="431.50"></text></g><g><title>hx`&lt;helix_term::ui::editor::EditorView as helix_term::compositor::Component&gt;::render (1,871 samples, 45.17%)</title><rect x="0.7484%" y="437" width="45.1714%" height="15" fill="rgb(205,22,4)" fg:x="31" fg:w="1871"/><text x="0.9984%" y="447.50">hx`&lt;helix_term::ui::editor::EditorView as helix_term::compositor::Componen..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.02%)</title><rect x="45.8957%" y="421" width="0.0241%" height="15" fill="rgb(206,3,8)" fg:x="1901" fg:w="1"/><text x="46.1457%" y="431.50"></text></g><g><title>hx`&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="45.9198%" y="405" width="0.0241%" height="15" fill="rgb(251,23,15)" fg:x="1902" fg:w="1"/><text x="46.1698%" y="415.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="45.9440%" y="389" width="0.0241%" height="15" fill="rgb(252,88,28)" fg:x="1903" fg:w="1"/><text x="46.1940%" y="399.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="45.9681%" y="389" width="0.0241%" height="15" fill="rgb(212,127,14)" fg:x="1904" fg:w="1"/><text x="46.2181%" y="399.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.10%)</title><rect x="45.9198%" y="421" width="0.0966%" height="15" fill="rgb(247,145,37)" fg:x="1902" fg:w="4"/><text x="46.1698%" y="431.50"></text></g><g><title>hx`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.07%)</title><rect x="45.9440%" y="405" width="0.0724%" height="15" fill="rgb(209,117,53)" fg:x="1903" fg:w="3"/><text x="46.1940%" y="415.50"></text></g><g><title>hx`helix_term::ui::fuzzy_match::FuzzyQuery::fuzzy_indicies (1 samples, 0.02%)</title><rect x="45.9923%" y="389" width="0.0241%" height="15" fill="rgb(212,90,42)" fg:x="1905" fg:w="1"/><text x="46.2423%" y="399.50"></text></g><g><title>hx`fuzzy_matcher::skim::SkimMatcherV2::fuzzy (1 samples, 0.02%)</title><rect x="45.9923%" y="373" width="0.0241%" height="15" fill="rgb(218,164,37)" fg:x="1905" fg:w="1"/><text x="46.2423%" y="383.50"></text></g><g><title>hx`&lt;helix_tui::widgets::block::Block as helix_tui::widgets::Widget&gt;::render (4 samples, 0.10%)</title><rect x="46.0164%" y="421" width="0.0966%" height="15" fill="rgb(246,65,34)" fg:x="1906" fg:w="4"/><text x="46.2664%" y="431.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::set_style (4 samples, 0.10%)</title><rect x="46.0164%" y="405" width="0.0966%" height="15" fill="rgb(231,100,33)" fg:x="1906" fg:w="4"/><text x="46.2664%" y="415.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="46.1130%" y="389" width="0.0241%" height="15" fill="rgb(228,126,14)" fg:x="1910" fg:w="1"/><text x="46.3630%" y="399.50"></text></g><g><title>hx`&lt;helix_core::graphemes::GraphemeStr as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (1 samples, 0.02%)</title><rect x="46.1371%" y="373" width="0.0241%" height="15" fill="rgb(215,173,21)" fg:x="1911" fg:w="1"/><text x="46.3871%" y="383.50"></text></g><g><title>hx`&lt;helix_core::graphemes::RopeGraphemes as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="46.1613%" y="373" width="0.0241%" height="15" fill="rgb(210,6,40)" fg:x="1912" fg:w="1"/><text x="46.4113%" y="383.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::next_boundary (1 samples, 0.02%)</title><rect x="46.1613%" y="357" width="0.0241%" height="15" fill="rgb(212,48,18)" fg:x="1912" fg:w="1"/><text x="46.4113%" y="367.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::grapheme_category (1 samples, 0.02%)</title><rect x="46.1613%" y="341" width="0.0241%" height="15" fill="rgb(230,214,11)" fg:x="1912" fg:w="1"/><text x="46.4113%" y="351.50"></text></g><g><title>hx`&lt;helix_core::doc_formatter::DocumentFormatter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.10%)</title><rect x="46.1130%" y="405" width="0.0966%" height="15" fill="rgb(254,105,39)" fg:x="1910" fg:w="4"/><text x="46.3630%" y="415.50"></text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::advance_grapheme (3 samples, 0.07%)</title><rect x="46.1371%" y="389" width="0.0724%" height="15" fill="rgb(245,158,5)" fg:x="1911" fg:w="3"/><text x="46.3871%" y="399.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::next_boundary (1 samples, 0.02%)</title><rect x="46.1854%" y="373" width="0.0241%" height="15" fill="rgb(249,208,11)" fg:x="1913" fg:w="1"/><text x="46.4354%" y="383.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="46.2096%" y="389" width="0.0241%" height="15" fill="rgb(210,39,28)" fg:x="1914" fg:w="1"/><text x="46.4596%" y="399.50"></text></g><g><title>hx`&lt;helix_core::syntax::HighlightIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="46.2096%" y="373" width="0.0241%" height="15" fill="rgb(211,56,53)" fg:x="1914" fg:w="1"/><text x="46.4596%" y="383.50"></text></g><g><title>hx`&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="46.2096%" y="357" width="0.0241%" height="15" fill="rgb(226,201,30)" fg:x="1914" fg:w="1"/><text x="46.4596%" y="367.50"></text></g><g><title>hx`ts_query_cursor_next_capture (1 samples, 0.02%)</title><rect x="46.2096%" y="341" width="0.0241%" height="15" fill="rgb(239,101,34)" fg:x="1914" fg:w="1"/><text x="46.4596%" y="351.50"></text></g><g><title>hx`ts_query_cursor__advance (1 samples, 0.02%)</title><rect x="46.2096%" y="325" width="0.0241%" height="15" fill="rgb(226,209,5)" fg:x="1914" fg:w="1"/><text x="46.4596%" y="335.50"></text></g><g><title>hx`ts_tree_cursor_goto_first_child (1 samples, 0.02%)</title><rect x="46.2096%" y="309" width="0.0241%" height="15" fill="rgb(250,105,47)" fg:x="1914" fg:w="1"/><text x="46.4596%" y="319.50"></text></g><g><title>hx`ts_query_cursor__capture (1 samples, 0.02%)</title><rect x="46.2578%" y="293" width="0.0241%" height="15" fill="rgb(230,72,3)" fg:x="1916" fg:w="1"/><text x="46.5078%" y="303.50"></text></g><g><title>hx`ts_query_cursor__prepare_to_capture (1 samples, 0.02%)</title><rect x="46.2578%" y="277" width="0.0241%" height="15" fill="rgb(232,218,39)" fg:x="1916" fg:w="1"/><text x="46.5078%" y="287.50"></text></g><g><title>hx`&lt;helix_core::syntax::HighlightIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="46.2337%" y="357" width="0.0724%" height="15" fill="rgb(248,166,6)" fg:x="1915" fg:w="3"/><text x="46.4837%" y="367.50"></text></g><g><title>hx`&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="46.2337%" y="341" width="0.0724%" height="15" fill="rgb(247,89,20)" fg:x="1915" fg:w="3"/><text x="46.4837%" y="351.50"></text></g><g><title>hx`ts_query_cursor_next_capture (3 samples, 0.07%)</title><rect x="46.2337%" y="325" width="0.0724%" height="15" fill="rgb(248,130,54)" fg:x="1915" fg:w="3"/><text x="46.4837%" y="335.50"></text></g><g><title>hx`ts_query_cursor__advance (2 samples, 0.05%)</title><rect x="46.2578%" y="309" width="0.0483%" height="15" fill="rgb(234,196,4)" fg:x="1916" fg:w="2"/><text x="46.5078%" y="319.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (1 samples, 0.02%)</title><rect x="46.2820%" y="293" width="0.0241%" height="15" fill="rgb(250,143,31)" fg:x="1917" fg:w="1"/><text x="46.5320%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (1 samples, 0.02%)</title><rect x="46.2820%" y="277" width="0.0241%" height="15" fill="rgb(211,110,34)" fg:x="1917" fg:w="1"/><text x="46.5320%" y="287.50"></text></g><g><title>hx`&lt;helix_term::ui::document::StyleIter&lt;H&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.12%)</title><rect x="46.2096%" y="405" width="0.1207%" height="15" fill="rgb(215,124,48)" fg:x="1914" fg:w="5"/><text x="46.4596%" y="415.50"></text></g><g><title>hx`&lt;helix_core::syntax::Merge&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.10%)</title><rect x="46.2337%" y="389" width="0.0966%" height="15" fill="rgb(216,46,13)" fg:x="1915" fg:w="4"/><text x="46.4837%" y="399.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.10%)</title><rect x="46.2337%" y="373" width="0.0966%" height="15" fill="rgb(205,184,25)" fg:x="1915" fg:w="4"/><text x="46.4837%" y="383.50"></text></g><g><title>hx`helix_core::graphemes::is_grapheme_boundary_byte (1 samples, 0.02%)</title><rect x="46.3061%" y="357" width="0.0241%" height="15" fill="rgb(228,1,10)" fg:x="1918" fg:w="1"/><text x="46.5561%" y="367.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::is_boundary (1 samples, 0.02%)</title><rect x="46.3061%" y="341" width="0.0241%" height="15" fill="rgb(213,116,27)" fg:x="1918" fg:w="1"/><text x="46.5561%" y="351.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::set_string_truncated_at_end (2 samples, 0.05%)</title><rect x="46.4268%" y="389" width="0.0483%" height="15" fill="rgb(241,95,50)" fg:x="1923" fg:w="2"/><text x="46.6768%" y="399.50"></text></g><g><title>hx`helix_term::ui::document::render_document (16 samples, 0.39%)</title><rect x="46.1130%" y="421" width="0.3863%" height="15" fill="rgb(238,48,32)" fg:x="1910" fg:w="16"/><text x="46.3630%" y="431.50"></text></g><g><title>hx`helix_term::ui::document::TextRenderer::draw_grapheme (7 samples, 0.17%)</title><rect x="46.3303%" y="405" width="0.1690%" height="15" fill="rgb(235,113,49)" fg:x="1919" fg:w="7"/><text x="46.5803%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="46.4751%" y="389" width="0.0241%" height="15" fill="rgb(205,127,43)" fg:x="1925" fg:w="1"/><text x="46.7251%" y="399.50"></text></g><g><title>hx`&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="46.4993%" y="357" width="0.0241%" height="15" fill="rgb(250,162,2)" fg:x="1926" fg:w="1"/><text x="46.7493%" y="367.50"></text></g><g><title>hx`ts_query_cursor_next_capture (1 samples, 0.02%)</title><rect x="46.4993%" y="341" width="0.0241%" height="15" fill="rgb(220,13,41)" fg:x="1926" fg:w="1"/><text x="46.7493%" y="351.50"></text></g><g><title>hx`ts_query_cursor__advance (1 samples, 0.02%)</title><rect x="46.4993%" y="325" width="0.0241%" height="15" fill="rgb(249,221,25)" fg:x="1926" fg:w="1"/><text x="46.7493%" y="335.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (1 samples, 0.02%)</title><rect x="46.4993%" y="309" width="0.0241%" height="15" fill="rgb(215,208,19)" fg:x="1926" fg:w="1"/><text x="46.7493%" y="319.50"></text></g><g><title>hx`ts_tree_cursor_goto_first_child (1 samples, 0.02%)</title><rect x="46.4993%" y="293" width="0.0241%" height="15" fill="rgb(236,175,2)" fg:x="1926" fg:w="1"/><text x="46.7493%" y="303.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::doc_syntax_highlights (2 samples, 0.05%)</title><rect x="46.4993%" y="421" width="0.0483%" height="15" fill="rgb(241,52,2)" fg:x="1926" fg:w="2"/><text x="46.7493%" y="431.50"></text></g><g><title>hx`helix_core::syntax::Syntax::highlight_iter (2 samples, 0.05%)</title><rect x="46.4993%" y="405" width="0.0483%" height="15" fill="rgb(248,140,14)" fg:x="1926" fg:w="2"/><text x="46.7493%" y="415.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="46.4993%" y="389" width="0.0483%" height="15" fill="rgb(253,22,42)" fg:x="1926" fg:w="2"/><text x="46.7493%" y="399.50"></text></g><g><title>hx`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.05%)</title><rect x="46.4993%" y="373" width="0.0483%" height="15" fill="rgb(234,61,47)" fg:x="1926" fg:w="2"/><text x="46.7493%" y="383.50"></text></g><g><title>hx`ts_query_cursor_delete (1 samples, 0.02%)</title><rect x="46.5234%" y="357" width="0.0241%" height="15" fill="rgb(208,226,15)" fg:x="1927" fg:w="1"/><text x="46.7734%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="46.5234%" y="341" width="0.0241%" height="15" fill="rgb(217,221,4)" fg:x="1927" fg:w="1"/><text x="46.7734%" y="351.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::clear_with (7 samples, 0.17%)</title><rect x="46.5476%" y="421" width="0.1690%" height="15" fill="rgb(212,174,34)" fg:x="1928" fg:w="7"/><text x="46.7976%" y="431.50"></text></g><g><title>hx`helix_tui::widgets::table::Table::render_table (2 samples, 0.05%)</title><rect x="46.7166%" y="421" width="0.0483%" height="15" fill="rgb(253,83,4)" fg:x="1935" fg:w="2"/><text x="46.9666%" y="431.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::set_style (2 samples, 0.05%)</title><rect x="46.7166%" y="405" width="0.0483%" height="15" fill="rgb(250,195,49)" fg:x="1935" fg:w="2"/><text x="46.9666%" y="415.50"></text></g><g><title>hx`helix_core::indent::auto_detect_indent_style (1 samples, 0.02%)</title><rect x="46.7648%" y="405" width="0.0241%" height="15" fill="rgb(241,192,25)" fg:x="1937" fg:w="1"/><text x="47.0148%" y="415.50"></text></g><g><title>hx`ropey::iter::Lines::next_impl (1 samples, 0.02%)</title><rect x="46.7648%" y="389" width="0.0241%" height="15" fill="rgb(208,124,10)" fg:x="1937" fg:w="1"/><text x="47.0148%" y="399.50"></text></g><g><title>hx`helix_view::document::Document::open (2 samples, 0.05%)</title><rect x="46.7648%" y="421" width="0.0483%" height="15" fill="rgb(222,33,0)" fg:x="1937" fg:w="2"/><text x="47.0148%" y="431.50"></text></g><g><title>hx`helix_view::document::from_reader (1 samples, 0.02%)</title><rect x="46.7890%" y="405" width="0.0241%" height="15" fill="rgb(234,209,28)" fg:x="1938" fg:w="1"/><text x="47.0390%" y="415.50"></text></g><g><title>hx`encoding_rs::Decoder::decode_to_utf8_without_replacement (1 samples, 0.02%)</title><rect x="46.7890%" y="389" width="0.0241%" height="15" fill="rgb(224,11,23)" fg:x="1938" fg:w="1"/><text x="47.0390%" y="399.50"></text></g><g><title>hx`encoding_rs::utf_8::Utf8Decoder::decode_to_utf8_raw (1 samples, 0.02%)</title><rect x="46.7890%" y="373" width="0.0241%" height="15" fill="rgb(232,99,1)" fg:x="1938" fg:w="1"/><text x="47.0390%" y="383.50"></text></g><g><title>hx`encoding_rs::utf_8::utf8_valid_up_to (1 samples, 0.02%)</title><rect x="46.7890%" y="357" width="0.0241%" height="15" fill="rgb(237,95,45)" fg:x="1938" fg:w="1"/><text x="47.0390%" y="367.50"></text></g><g><title>hx`&lt;helix_term::ui::picker::FilePicker&lt;T&gt; as helix_term::compositor::Component&gt;::render (38 samples, 0.92%)</title><rect x="45.9198%" y="437" width="0.9174%" height="15" fill="rgb(208,109,11)" fg:x="1902" fg:w="38"/><text x="46.1698%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="46.8131%" y="421" width="0.0241%" height="15" fill="rgb(216,190,48)" fg:x="1939" fg:w="1"/><text x="47.0631%" y="431.50"></text></g><g><title>hx`helix_core::syntax::Syntax::highlight_iter (1 samples, 0.02%)</title><rect x="46.8373%" y="389" width="0.0241%" height="15" fill="rgb(251,171,36)" fg:x="1940" fg:w="1"/><text x="47.0873%" y="399.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="46.8373%" y="373" width="0.0241%" height="15" fill="rgb(230,62,22)" fg:x="1940" fg:w="1"/><text x="47.0873%" y="383.50"></text></g><g><title>hx`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="46.8373%" y="357" width="0.0241%" height="15" fill="rgb(225,114,35)" fg:x="1940" fg:w="1"/><text x="47.0873%" y="367.50"></text></g><g><title>hx`&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="46.8373%" y="341" width="0.0241%" height="15" fill="rgb(215,118,42)" fg:x="1940" fg:w="1"/><text x="47.0873%" y="351.50"></text></g><g><title>hx`ts_query_cursor_next_capture (1 samples, 0.02%)</title><rect x="46.8373%" y="325" width="0.0241%" height="15" fill="rgb(243,119,21)" fg:x="1940" fg:w="1"/><text x="47.0873%" y="335.50"></text></g><g><title>hx`ts_query_cursor__advance (1 samples, 0.02%)</title><rect x="46.8373%" y="309" width="0.0241%" height="15" fill="rgb(252,177,53)" fg:x="1940" fg:w="1"/><text x="47.0873%" y="319.50"></text></g><g><title>hx`ts_query_cursor__capture (1 samples, 0.02%)</title><rect x="46.8373%" y="293" width="0.0241%" height="15" fill="rgb(237,209,29)" fg:x="1940" fg:w="1"/><text x="47.0873%" y="303.50"></text></g><g><title>hx`array__grow (1 samples, 0.02%)</title><rect x="46.8373%" y="277" width="0.0241%" height="15" fill="rgb(212,65,23)" fg:x="1940" fg:w="1"/><text x="47.0873%" y="287.50"></text></g><g><title>hx`helix_term::ui::markdown::Markdown::parse (2 samples, 0.05%)</title><rect x="46.8373%" y="421" width="0.0483%" height="15" fill="rgb(230,222,46)" fg:x="1940" fg:w="2"/><text x="47.0873%" y="431.50"></text></g><g><title>hx`helix_term::ui::markdown::highlighted_code_block (2 samples, 0.05%)</title><rect x="46.8373%" y="405" width="0.0483%" height="15" fill="rgb(215,135,32)" fg:x="1940" fg:w="2"/><text x="47.0873%" y="415.50"></text></g><g><title>hx`helix_core::syntax::Syntax::new (1 samples, 0.02%)</title><rect x="46.8614%" y="389" width="0.0241%" height="15" fill="rgb(246,101,22)" fg:x="1941" fg:w="1"/><text x="47.1114%" y="399.50"></text></g><g><title>hx`helix_core::syntax::Syntax::update (1 samples, 0.02%)</title><rect x="46.8614%" y="373" width="0.0241%" height="15" fill="rgb(206,107,13)" fg:x="1941" fg:w="1"/><text x="47.1114%" y="383.50"></text></g><g><title>hx`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="46.8614%" y="357" width="0.0241%" height="15" fill="rgb(250,100,44)" fg:x="1941" fg:w="1"/><text x="47.1114%" y="367.50"></text></g><g><title>hx`helix_core::syntax::LanguageLayer::parse (1 samples, 0.02%)</title><rect x="46.8614%" y="341" width="0.0241%" height="15" fill="rgb(231,147,38)" fg:x="1941" fg:w="1"/><text x="47.1114%" y="351.50"></text></g><g><title>hx`ts_parser_parse (1 samples, 0.02%)</title><rect x="46.8614%" y="325" width="0.0241%" height="15" fill="rgb(229,8,40)" fg:x="1941" fg:w="1"/><text x="47.1114%" y="335.50"></text></g><g><title>hx`&lt;helix_term::ui::popup::Popup&lt;T&gt; as helix_term::compositor::Component&gt;::render (3 samples, 0.07%)</title><rect x="46.8373%" y="437" width="0.0724%" height="15" fill="rgb(221,135,30)" fg:x="1940" fg:w="3"/><text x="47.0873%" y="447.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::clear_with (1 samples, 0.02%)</title><rect x="46.8856%" y="421" width="0.0241%" height="15" fill="rgb(249,193,18)" fg:x="1942" fg:w="1"/><text x="47.1356%" y="431.50"></text></g><g><title>hx`std::fs::OpenOptions::_open (68 samples, 1.64%)</title><rect x="46.9097%" y="405" width="1.6417%" height="15" fill="rgb(209,133,39)" fg:x="1943" fg:w="68"/><text x="47.1597%" y="415.50"></text></g><g><title>hx`std::sys::unix::fs::File::open_c (68 samples, 1.64%)</title><rect x="46.9097%" y="389" width="1.6417%" height="15" fill="rgb(232,100,14)" fg:x="1943" fg:w="68"/><text x="47.1597%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__open (68 samples, 1.64%)</title><rect x="46.9097%" y="373" width="1.6417%" height="15" fill="rgb(224,185,1)" fg:x="1943" fg:w="68"/><text x="47.1597%" y="383.50"></text></g><g><title>hx`crossterm::terminal::sys::unix::size (71 samples, 1.71%)</title><rect x="46.9097%" y="421" width="1.7141%" height="15" fill="rgb(223,139,8)" fg:x="1943" fg:w="71"/><text x="47.1597%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__ioctl (3 samples, 0.07%)</title><rect x="48.5514%" y="405" width="0.0724%" height="15" fill="rgb(232,213,38)" fg:x="2011" fg:w="3"/><text x="48.8014%" y="415.50"></text></g><g><title>hx`&lt;helix_tui::backend::crossterm::CrosstermBackend&lt;W&gt; as helix_tui::backend::Backend&gt;::size (75 samples, 1.81%)</title><rect x="46.9097%" y="437" width="1.8107%" height="15" fill="rgb(207,94,22)" fg:x="1943" fg:w="75"/><text x="47.1597%" y="447.50">h..</text></g><g><title>libsystem_kernel.dylib`close (4 samples, 0.10%)</title><rect x="48.6239%" y="421" width="0.0966%" height="15" fill="rgb(219,183,54)" fg:x="2014" fg:w="4"/><text x="48.8739%" y="431.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;arc_swap::access::DynGuard&lt;helix_view::editor::Config&gt;&gt; (1 samples, 0.02%)</title><rect x="48.7204%" y="437" width="0.0241%" height="15" fill="rgb(216,185,54)" fg:x="2018" fg:w="1"/><text x="48.9704%" y="447.50"></text></g><g><title>hx`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::flush (11 samples, 0.27%)</title><rect x="50.5311%" y="421" width="0.2656%" height="15" fill="rgb(254,217,39)" fg:x="2093" fg:w="11"/><text x="50.7811%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`write (11 samples, 0.27%)</title><rect x="50.5311%" y="405" width="0.2656%" height="15" fill="rgb(240,178,23)" fg:x="2093" fg:w="11"/><text x="50.7811%" y="415.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.12%)</title><rect x="50.7967%" y="421" width="0.1207%" height="15" fill="rgb(218,11,47)" fg:x="2104" fg:w="5"/><text x="51.0467%" y="431.50"></text></g><g><title>hx`&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="51.4244%" y="389" width="0.0241%" height="15" fill="rgb(218,51,51)" fg:x="2130" fg:w="1"/><text x="51.6744%" y="399.50"></text></g><g><title>hx`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.07%)</title><rect x="51.4486%" y="389" width="0.0724%" height="15" fill="rgb(238,126,27)" fg:x="2131" fg:w="3"/><text x="51.6986%" y="399.50"></text></g><g><title>hx`&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="51.5210%" y="389" width="0.0241%" height="15" fill="rgb(249,202,22)" fg:x="2134" fg:w="1"/><text x="51.7710%" y="399.50"></text></g><g><title>hx`core::fmt::Formatter::pad (2 samples, 0.05%)</title><rect x="51.5451%" y="389" width="0.0483%" height="15" fill="rgb(254,195,49)" fg:x="2135" fg:w="2"/><text x="51.7951%" y="399.50"></text></g><g><title>hx`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (19 samples, 0.46%)</title><rect x="52.0521%" y="341" width="0.4587%" height="15" fill="rgb(208,123,14)" fg:x="2156" fg:w="19"/><text x="52.3021%" y="351.50"></text></g><g><title>hx`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (15 samples, 0.36%)</title><rect x="52.1487%" y="325" width="0.3621%" height="15" fill="rgb(224,200,8)" fg:x="2160" fg:w="15"/><text x="52.3987%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`write (14 samples, 0.34%)</title><rect x="52.1729%" y="309" width="0.3380%" height="15" fill="rgb(217,61,36)" fg:x="2161" fg:w="14"/><text x="52.4229%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.07%)</title><rect x="52.5109%" y="341" width="0.0724%" height="15" fill="rgb(206,35,45)" fg:x="2175" fg:w="3"/><text x="52.7609%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 0.10%)</title><rect x="52.5833%" y="341" width="0.0966%" height="15" fill="rgb(217,65,33)" fg:x="2178" fg:w="4"/><text x="52.8333%" y="351.50"></text></g><g><title>hx`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (38 samples, 0.92%)</title><rect x="51.8590%" y="357" width="0.9174%" height="15" fill="rgb(222,158,48)" fg:x="2148" fg:w="38"/><text x="52.1090%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (4 samples, 0.10%)</title><rect x="52.6799%" y="341" width="0.0966%" height="15" fill="rgb(254,2,54)" fg:x="2182" fg:w="4"/><text x="52.9299%" y="351.50"></text></g><g><title>hx`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2 samples, 0.05%)</title><rect x="52.7764%" y="357" width="0.0483%" height="15" fill="rgb(250,143,38)" fg:x="2186" fg:w="2"/><text x="53.0264%" y="367.50"></text></g><g><title>hx`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="52.8247%" y="357" width="0.0241%" height="15" fill="rgb(248,25,0)" fg:x="2188" fg:w="1"/><text x="53.0747%" y="367.50"></text></g><g><title>hx`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (49 samples, 1.18%)</title><rect x="51.7866%" y="373" width="1.1830%" height="15" fill="rgb(206,152,27)" fg:x="2145" fg:w="49"/><text x="52.0366%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.12%)</title><rect x="52.8489%" y="357" width="0.1207%" height="15" fill="rgb(240,77,30)" fg:x="2189" fg:w="5"/><text x="53.0989%" y="367.50"></text></g><g><title>hx`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (9 samples, 0.22%)</title><rect x="53.0662%" y="357" width="0.2173%" height="15" fill="rgb(231,5,3)" fg:x="2198" fg:w="9"/><text x="53.3162%" y="367.50"></text></g><g><title>hx`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (7 samples, 0.17%)</title><rect x="53.1144%" y="341" width="0.1690%" height="15" fill="rgb(207,226,32)" fg:x="2200" fg:w="7"/><text x="53.3644%" y="351.50"></text></g><g><title>hx`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (6 samples, 0.14%)</title><rect x="53.1386%" y="325" width="0.1449%" height="15" fill="rgb(222,207,47)" fg:x="2201" fg:w="6"/><text x="53.3886%" y="335.50"></text></g><g><title>hx`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (4 samples, 0.10%)</title><rect x="53.1869%" y="309" width="0.0966%" height="15" fill="rgb(229,115,45)" fg:x="2203" fg:w="4"/><text x="53.4369%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`write (4 samples, 0.10%)</title><rect x="53.1869%" y="293" width="0.0966%" height="15" fill="rgb(224,191,6)" fg:x="2203" fg:w="4"/><text x="53.4369%" y="303.50"></text></g><g><title>hx`core::fmt::num::imp::_&lt;impl core::fmt::Display for u8&gt;::fmt (1 samples, 0.02%)</title><rect x="53.2834%" y="357" width="0.0241%" height="15" fill="rgb(230,227,24)" fg:x="2207" fg:w="1"/><text x="53.5334%" y="367.50"></text></g><g><title>hx`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (7 samples, 0.17%)</title><rect x="53.3800%" y="309" width="0.1690%" height="15" fill="rgb(228,80,19)" fg:x="2211" fg:w="7"/><text x="53.6300%" y="319.50"></text></g><g><title>hx`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (5 samples, 0.12%)</title><rect x="53.4283%" y="293" width="0.1207%" height="15" fill="rgb(247,229,0)" fg:x="2213" fg:w="5"/><text x="53.6783%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`write (5 samples, 0.12%)</title><rect x="53.4283%" y="277" width="0.1207%" height="15" fill="rgb(237,194,15)" fg:x="2213" fg:w="5"/><text x="53.6783%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.05%)</title><rect x="53.5490%" y="309" width="0.0483%" height="15" fill="rgb(219,203,20)" fg:x="2218" fg:w="2"/><text x="53.7990%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="53.5973%" y="309" width="0.0241%" height="15" fill="rgb(234,128,8)" fg:x="2220" fg:w="1"/><text x="53.8473%" y="319.50"></text></g><g><title>hx`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (13 samples, 0.31%)</title><rect x="53.3317%" y="325" width="0.3139%" height="15" fill="rgb(248,202,8)" fg:x="2209" fg:w="13"/><text x="53.5817%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="53.6214%" y="309" width="0.0241%" height="15" fill="rgb(206,104,37)" fg:x="2221" fg:w="1"/><text x="53.8714%" y="319.50"></text></g><g><title>hx`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (14 samples, 0.34%)</title><rect x="53.3317%" y="341" width="0.3380%" height="15" fill="rgb(223,8,27)" fg:x="2209" fg:w="14"/><text x="53.5817%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="53.6456%" y="325" width="0.0241%" height="15" fill="rgb(216,217,28)" fg:x="2222" fg:w="1"/><text x="53.8956%" y="335.50"></text></g><g><title>hx`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="53.6697%" y="341" width="0.0241%" height="15" fill="rgb(249,199,1)" fg:x="2223" fg:w="1"/><text x="53.9197%" y="351.50"></text></g><g><title>hx`core::fmt::Formatter::pad_integral (1 samples, 0.02%)</title><rect x="53.6939%" y="341" width="0.0241%" height="15" fill="rgb(240,85,17)" fg:x="2224" fg:w="1"/><text x="53.9439%" y="351.50"></text></g><g><title>hx`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (3 samples, 0.07%)</title><rect x="53.8387%" y="293" width="0.0724%" height="15" fill="rgb(206,108,45)" fg:x="2230" fg:w="3"/><text x="54.0887%" y="303.50"></text></g><g><title>hx`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (3 samples, 0.07%)</title><rect x="53.8387%" y="277" width="0.0724%" height="15" fill="rgb(245,210,41)" fg:x="2230" fg:w="3"/><text x="54.0887%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`write (3 samples, 0.07%)</title><rect x="53.8387%" y="261" width="0.0724%" height="15" fill="rgb(206,13,37)" fg:x="2230" fg:w="3"/><text x="54.0887%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="53.9112%" y="293" width="0.0241%" height="15" fill="rgb(250,61,18)" fg:x="2233" fg:w="1"/><text x="54.1612%" y="303.50"></text></g><g><title>hx`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (9 samples, 0.22%)</title><rect x="53.7422%" y="309" width="0.2173%" height="15" fill="rgb(235,172,48)" fg:x="2226" fg:w="9"/><text x="53.9922%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="53.9353%" y="293" width="0.0241%" height="15" fill="rgb(249,201,17)" fg:x="2234" fg:w="1"/><text x="54.1853%" y="303.50"></text></g><g><title>hx`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="53.9594%" y="309" width="0.0241%" height="15" fill="rgb(219,208,6)" fg:x="2235" fg:w="1"/><text x="54.2094%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.10%)</title><rect x="53.9836%" y="309" width="0.0966%" height="15" fill="rgb(248,31,23)" fg:x="2236" fg:w="4"/><text x="54.2336%" y="319.50"></text></g><g><title>hx`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (15 samples, 0.36%)</title><rect x="53.7422%" y="325" width="0.3621%" height="15" fill="rgb(245,15,42)" fg:x="2226" fg:w="15"/><text x="53.9922%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="54.0802%" y="309" width="0.0241%" height="15" fill="rgb(222,217,39)" fg:x="2240" fg:w="1"/><text x="54.3302%" y="319.50"></text></g><g><title>hx`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="54.1043%" y="325" width="0.0241%" height="15" fill="rgb(210,219,27)" fg:x="2241" fg:w="1"/><text x="54.3543%" y="335.50"></text></g><g><title>hx`&lt;crossterm::style::types::colored::Colored as core::fmt::Display&gt;::fmt (49 samples, 1.18%)</title><rect x="52.9696%" y="373" width="1.1830%" height="15" fill="rgb(252,166,36)" fg:x="2194" fg:w="49"/><text x="53.2196%" y="383.50"></text></g><g><title>hx`core::fmt::write (35 samples, 0.85%)</title><rect x="53.3076%" y="357" width="0.8450%" height="15" fill="rgb(245,132,34)" fg:x="2208" fg:w="35"/><text x="53.5576%" y="367.50"></text></g><g><title>hx`core::fmt::num::imp::_&lt;impl core::fmt::Display for u8&gt;::fmt (18 samples, 0.43%)</title><rect x="53.7180%" y="341" width="0.4346%" height="15" fill="rgb(236,54,3)" fg:x="2225" fg:w="18"/><text x="53.9680%" y="351.50"></text></g><g><title>hx`core::fmt::Formatter::pad_integral (1 samples, 0.02%)</title><rect x="54.1284%" y="325" width="0.0241%" height="15" fill="rgb(241,173,43)" fg:x="2242" fg:w="1"/><text x="54.3784%" y="335.50"></text></g><g><title>hx`core::fmt::write (111 samples, 2.68%)</title><rect x="51.5934%" y="389" width="2.6799%" height="15" fill="rgb(215,190,9)" fg:x="2137" fg:w="111"/><text x="51.8434%" y="399.50">hx..</text></g><g><title>hx`core::fmt::num::imp::_&lt;impl core::fmt::Display for u16&gt;::fmt (5 samples, 0.12%)</title><rect x="54.1526%" y="373" width="0.1207%" height="15" fill="rgb(242,101,16)" fg:x="2243" fg:w="5"/><text x="54.4026%" y="383.50"></text></g><g><title>hx`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.10%)</title><rect x="54.1767%" y="357" width="0.0966%" height="15" fill="rgb(223,190,21)" fg:x="2244" fg:w="4"/><text x="54.4267%" y="367.50"></text></g><g><title>hx`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (4 samples, 0.10%)</title><rect x="54.1767%" y="341" width="0.0966%" height="15" fill="rgb(215,228,25)" fg:x="2244" fg:w="4"/><text x="54.4267%" y="351.50"></text></g><g><title>hx`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (4 samples, 0.10%)</title><rect x="54.1767%" y="325" width="0.0966%" height="15" fill="rgb(225,36,22)" fg:x="2244" fg:w="4"/><text x="54.4267%" y="335.50"></text></g><g><title>hx`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (3 samples, 0.07%)</title><rect x="54.2009%" y="309" width="0.0724%" height="15" fill="rgb(251,106,46)" fg:x="2245" fg:w="3"/><text x="54.4509%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`write (3 samples, 0.07%)</title><rect x="54.2009%" y="293" width="0.0724%" height="15" fill="rgb(208,90,1)" fg:x="2245" fg:w="3"/><text x="54.4509%" y="303.50"></text></g><g><title>hx`&lt;helix_tui::backend::crossterm::CrosstermBackend&lt;W&gt; as helix_tui::backend::Backend&gt;::draw (140 samples, 3.38%)</title><rect x="50.9174%" y="421" width="3.3800%" height="15" fill="rgb(243,10,4)" fg:x="2109" fg:w="140"/><text x="51.1674%" y="431.50">hx`..</text></g><g><title>hx`crossterm::command::write_command_ansi (121 samples, 2.92%)</title><rect x="51.3761%" y="405" width="2.9213%" height="15" fill="rgb(212,137,27)" fg:x="2128" fg:w="121"/><text x="51.6261%" y="415.50">hx..</text></g><g><title>hx`crossterm::style::types::attribute::Attribute::sgr (1 samples, 0.02%)</title><rect x="54.2733%" y="389" width="0.0241%" height="15" fill="rgb(231,220,49)" fg:x="2248" fg:w="1"/><text x="54.5233%" y="399.50"></text></g><g><title>hx`DYLD-STUB$$memcmp (8 samples, 0.19%)</title><rect x="54.2974%" y="421" width="0.1931%" height="15" fill="rgb(237,96,20)" fg:x="2249" fg:w="8"/><text x="54.5474%" y="431.50"></text></g><g><title>hx`crossterm::command::write_command_ansi (2 samples, 0.05%)</title><rect x="54.4906%" y="421" width="0.0483%" height="15" fill="rgb(239,229,30)" fg:x="2257" fg:w="2"/><text x="54.7406%" y="431.50"></text></g><g><title>hx`helix_tui::buffer::Buffer::diff (324 samples, 7.82%)</title><rect x="54.5389%" y="421" width="7.8223%" height="15" fill="rgb(219,65,33)" fg:x="2259" fg:w="324"/><text x="54.7889%" y="431.50">hx`helix_tu..</text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (67 samples, 1.62%)</title><rect x="60.7436%" y="405" width="1.6176%" height="15" fill="rgb(243,134,7)" fg:x="2516" fg:w="67"/><text x="60.9936%" y="415.50"></text></g><g><title>hx`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.02%)</title><rect x="62.3612%" y="421" width="0.0241%" height="15" fill="rgb(216,177,54)" fg:x="2583" fg:w="1"/><text x="62.6112%" y="431.50"></text></g><g><title>hx`helix_tui::terminal::Terminal&lt;B&gt;::draw (605 samples, 14.61%)</title><rect x="48.7446%" y="437" width="14.6065%" height="15" fill="rgb(211,160,20)" fg:x="2019" fg:w="605"/><text x="48.9946%" y="447.50">hx`helix_tui::terminal..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (40 samples, 0.97%)</title><rect x="62.3853%" y="421" width="0.9657%" height="15" fill="rgb(239,85,39)" fg:x="2584" fg:w="40"/><text x="62.6353%" y="431.50"></text></g><g><title>hx`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,603 samples, 62.84%)</title><rect x="0.5311%" y="453" width="62.8440%" height="15" fill="rgb(232,125,22)" fg:x="22" fg:w="2603"/><text x="0.7811%" y="463.50">hx`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>hx`helix_view::editor::Editor::cursor (1 samples, 0.02%)</title><rect x="63.3510%" y="437" width="0.0241%" height="15" fill="rgb(244,57,34)" fg:x="2624" fg:w="1"/><text x="63.6010%" y="447.50"></text></g><g><title>hx`&lt;helix_view::keyboard::KeyCode as core::convert::From&lt;crossterm::event::KeyCode&gt;&gt;::from (1 samples, 0.02%)</title><rect x="63.3752%" y="453" width="0.0241%" height="15" fill="rgb(214,203,32)" fg:x="2625" fg:w="1"/><text x="63.6252%" y="463.50"></text></g><g><title>hx`&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="63.4235%" y="405" width="0.0241%" height="15" fill="rgb(207,58,43)" fg:x="2627" fg:w="1"/><text x="63.6735%" y="415.50"></text></g><g><title>hx`tokio::runtime::park::drop_waker (1 samples, 0.02%)</title><rect x="63.4235%" y="389" width="0.0241%" height="15" fill="rgb(215,193,15)" fg:x="2627" fg:w="1"/><text x="63.6735%" y="399.50"></text></g><g><title>hx`futures_util::stream::stream::StreamExt::poll_next_unpin (3 samples, 0.07%)</title><rect x="63.4476%" y="405" width="0.0724%" height="15" fill="rgb(232,15,44)" fg:x="2628" fg:w="3"/><text x="63.6976%" y="415.50"></text></g><g><title>hx`futures_util::stream::stream::StreamExt::poll_next_unpin (1 samples, 0.02%)</title><rect x="63.4959%" y="389" width="0.0241%" height="15" fill="rgb(212,3,48)" fg:x="2630" fg:w="1"/><text x="63.7459%" y="399.50"></text></g><g><title>hx`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (1 samples, 0.02%)</title><rect x="63.4959%" y="373" width="0.0241%" height="15" fill="rgb(218,128,7)" fg:x="2630" fg:w="1"/><text x="63.7459%" y="383.50"></text></g><g><title>hx`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.02%)</title><rect x="63.4959%" y="357" width="0.0241%" height="15" fill="rgb(226,216,39)" fg:x="2630" fg:w="1"/><text x="63.7459%" y="367.50"></text></g><g><title>hx`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (2 samples, 0.05%)</title><rect x="63.5200%" y="373" width="0.0483%" height="15" fill="rgb(243,47,51)" fg:x="2631" fg:w="2"/><text x="63.7700%" y="383.50"></text></g><g><title>hx`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.07%)</title><rect x="63.5200%" y="389" width="0.0724%" height="15" fill="rgb(241,183,40)" fg:x="2631" fg:w="3"/><text x="63.7700%" y="399.50"></text></g><g><title>hx`tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (1 samples, 0.02%)</title><rect x="63.5683%" y="373" width="0.0241%" height="15" fill="rgb(231,217,32)" fg:x="2633" fg:w="1"/><text x="63.8183%" y="383.50"></text></g><g><title>hx`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (4 samples, 0.10%)</title><rect x="63.5200%" y="405" width="0.0966%" height="15" fill="rgb(229,61,38)" fg:x="2631" fg:w="4"/><text x="63.7700%" y="415.50"></text></g><g><title>hx`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1 samples, 0.02%)</title><rect x="63.5925%" y="389" width="0.0241%" height="15" fill="rgb(225,210,5)" fg:x="2634" fg:w="1"/><text x="63.8425%" y="399.50"></text></g><g><title>hx`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.24%)</title><rect x="63.3993%" y="437" width="0.2414%" height="15" fill="rgb(231,79,45)" fg:x="2626" fg:w="10"/><text x="63.6493%" y="447.50"></text></g><g><title>hx`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (10 samples, 0.24%)</title><rect x="63.3993%" y="421" width="0.2414%" height="15" fill="rgb(224,100,7)" fg:x="2626" fg:w="10"/><text x="63.6493%" y="431.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="63.6166%" y="405" width="0.0241%" height="15" fill="rgb(241,198,18)" fg:x="2635" fg:w="1"/><text x="63.8666%" y="415.50"></text></g><g><title>hx`&lt;crossterm::event::source::unix::mio::UnixInternalEventSource as crossterm::event::source::EventSource&gt;::try_read (1 samples, 0.02%)</title><rect x="63.6890%" y="405" width="0.0241%" height="15" fill="rgb(252,97,53)" fg:x="2638" fg:w="1"/><text x="63.9390%" y="415.50"></text></g><g><title>hx`&lt;crossterm::event::source::unix::mio::UnixInternalEventSource as crossterm::event::source::EventSource&gt;::try_read (1 samples, 0.02%)</title><rect x="63.7132%" y="389" width="0.0241%" height="15" fill="rgb(220,88,7)" fg:x="2639" fg:w="1"/><text x="63.9632%" y="399.50"></text></g><g><title>hx`crossterm::event::read::InternalEventReader::poll (3 samples, 0.07%)</title><rect x="63.7132%" y="405" width="0.0724%" height="15" fill="rgb(213,176,14)" fg:x="2639" fg:w="3"/><text x="63.9632%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`kevent (2 samples, 0.05%)</title><rect x="63.7373%" y="389" width="0.0483%" height="15" fill="rgb(246,73,7)" fg:x="2640" fg:w="2"/><text x="63.9873%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (21 samples, 0.51%)</title><rect x="63.8098%" y="373" width="0.5070%" height="15" fill="rgb(245,64,36)" fg:x="2643" fg:w="21"/><text x="64.0598%" y="383.50"></text></g><g><title>hx`crossterm::event::poll_internal (27 samples, 0.65%)</title><rect x="63.6890%" y="421" width="0.6519%" height="15" fill="rgb(245,80,10)" fg:x="2638" fg:w="27"/><text x="63.9390%" y="431.50"></text></g><g><title>hx`crossterm::event::try_lock_internal_event_reader_for (23 samples, 0.56%)</title><rect x="63.7856%" y="405" width="0.5553%" height="15" fill="rgb(232,107,50)" fg:x="2642" fg:w="23"/><text x="64.0356%" y="415.50"></text></g><g><title>hx`parking_lot::raw_mutex::RawMutex::lock_slow (23 samples, 0.56%)</title><rect x="63.7856%" y="389" width="0.5553%" height="15" fill="rgb(253,3,0)" fg:x="2642" fg:w="23"/><text x="64.0356%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`cthread_yield (1 samples, 0.02%)</title><rect x="64.3168%" y="373" width="0.0241%" height="15" fill="rgb(212,99,53)" fg:x="2664" fg:w="1"/><text x="64.5668%" y="383.50"></text></g><g><title>hx`&lt;crossterm::event::stream::EventStream as futures_core::stream::Stream&gt;::poll_next (33 samples, 0.80%)</title><rect x="63.6408%" y="437" width="0.7967%" height="15" fill="rgb(249,111,54)" fg:x="2636" fg:w="33"/><text x="63.8908%" y="447.50"></text></g><g><title>hx`std::sync::mpsc::sync::Packet&lt;T&gt;::send (4 samples, 0.10%)</title><rect x="64.3409%" y="421" width="0.0966%" height="15" fill="rgb(249,55,30)" fg:x="2665" fg:w="4"/><text x="64.5909%" y="431.50"></text></g><g><title>hx`std::sync::mpsc::sync::wakeup (4 samples, 0.10%)</title><rect x="64.3409%" y="405" width="0.0966%" height="15" fill="rgb(237,47,42)" fg:x="2665" fg:w="4"/><text x="64.5909%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (4 samples, 0.10%)</title><rect x="64.3409%" y="389" width="0.0966%" height="15" fill="rgb(211,20,18)" fg:x="2665" fg:w="4"/><text x="64.5909%" y="399.50"></text></g><g><title>hx`crossterm::event::poll_internal (1 samples, 0.02%)</title><rect x="64.4375%" y="437" width="0.0241%" height="15" fill="rgb(231,203,46)" fg:x="2669" fg:w="1"/><text x="64.6875%" y="447.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.02%)</title><rect x="64.4616%" y="309" width="0.0241%" height="15" fill="rgb(237,142,3)" fg:x="2670" fg:w="1"/><text x="64.7116%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="64.4616%" y="293" width="0.0241%" height="15" fill="rgb(241,107,1)" fg:x="2670" fg:w="1"/><text x="64.7116%" y="303.50"></text></g><g><title>hx`lsp_types::_::_&lt;impl serde::de::Deserialize for lsp_types::Documentation&gt;::deserialize (1 samples, 0.02%)</title><rect x="64.4858%" y="309" width="0.0241%" height="15" fill="rgb(229,83,13)" fg:x="2671" fg:w="1"/><text x="64.7358%" y="319.50"></text></g><g><title>hx`&lt;serde::__private::de::content::Content as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="64.4858%" y="293" width="0.0241%" height="15" fill="rgb(241,91,40)" fg:x="2671" fg:w="1"/><text x="64.7358%" y="303.50"></text></g><g><title>hx`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="64.4858%" y="277" width="0.0241%" height="15" fill="rgb(225,3,45)" fg:x="2671" fg:w="1"/><text x="64.7358%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="64.4858%" y="261" width="0.0241%" height="15" fill="rgb(244,223,14)" fg:x="2671" fg:w="1"/><text x="64.7358%" y="271.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (3 samples, 0.07%)</title><rect x="64.4616%" y="373" width="0.0724%" height="15" fill="rgb(224,124,37)" fg:x="2670" fg:w="3"/><text x="64.7116%" y="383.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_seq (3 samples, 0.07%)</title><rect x="64.4616%" y="357" width="0.0724%" height="15" fill="rgb(251,171,30)" fg:x="2670" fg:w="3"/><text x="64.7116%" y="367.50"></text></g><g><title>hx`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.07%)</title><rect x="64.4616%" y="341" width="0.0724%" height="15" fill="rgb(236,46,54)" fg:x="2670" fg:w="3"/><text x="64.7116%" y="351.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (3 samples, 0.07%)</title><rect x="64.4616%" y="325" width="0.0724%" height="15" fill="rgb(245,213,5)" fg:x="2670" fg:w="3"/><text x="64.7116%" y="335.50"></text></g><g><title>hx`lsp_types::completion::_::_&lt;impl serde::de::Deserialize for lsp_types::completion::CompletionTextEdit&gt;::deserialize (1 samples, 0.02%)</title><rect x="64.5099%" y="309" width="0.0241%" height="15" fill="rgb(230,144,27)" fg:x="2672" fg:w="1"/><text x="64.7599%" y="319.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="64.5099%" y="293" width="0.0241%" height="15" fill="rgb(220,86,6)" fg:x="2672" fg:w="1"/><text x="64.7599%" y="303.50"></text></g><g><title>hx`serde::de::Error::missing_field (1 samples, 0.02%)</title><rect x="64.5099%" y="277" width="0.0241%" height="15" fill="rgb(240,20,13)" fg:x="2672" fg:w="1"/><text x="64.7599%" y="287.50"></text></g><g><title>hx`&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.02%)</title><rect x="64.5099%" y="261" width="0.0241%" height="15" fill="rgb(217,89,34)" fg:x="2672" fg:w="1"/><text x="64.7599%" y="271.50"></text></g><g><title>hx`core::fmt::write (1 samples, 0.02%)</title><rect x="64.5099%" y="245" width="0.0241%" height="15" fill="rgb(229,13,5)" fg:x="2672" fg:w="1"/><text x="64.7599%" y="255.50"></text></g><g><title>hx`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="64.5099%" y="229" width="0.0241%" height="15" fill="rgb(244,67,35)" fg:x="2672" fg:w="1"/><text x="64.7599%" y="239.50"></text></g><g><title>hx`lsp_types::completion::_::_&lt;impl serde::de::Deserialize for lsp_types::completion::CompletionResponse&gt;::deserialize (4 samples, 0.10%)</title><rect x="64.4616%" y="389" width="0.0966%" height="15" fill="rgb(221,40,2)" fg:x="2670" fg:w="4"/><text x="64.7116%" y="399.50"></text></g><g><title>hx`serde::de::Deserializer::__deserialize_content (1 samples, 0.02%)</title><rect x="64.5340%" y="373" width="0.0241%" height="15" fill="rgb(237,157,21)" fg:x="2673" fg:w="1"/><text x="64.7840%" y="383.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="64.5340%" y="357" width="0.0241%" height="15" fill="rgb(222,94,11)" fg:x="2673" fg:w="1"/><text x="64.7840%" y="367.50"></text></g><g><title>hx`serde::de::Deserializer::__deserialize_content (1 samples, 0.02%)</title><rect x="64.5340%" y="341" width="0.0241%" height="15" fill="rgb(249,113,6)" fg:x="2673" fg:w="1"/><text x="64.7840%" y="351.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.02%)</title><rect x="64.5340%" y="325" width="0.0241%" height="15" fill="rgb(238,137,36)" fg:x="2673" fg:w="1"/><text x="64.7840%" y="335.50"></text></g><g><title>hx`serde::de::Deserializer::__deserialize_content (1 samples, 0.02%)</title><rect x="64.5340%" y="309" width="0.0241%" height="15" fill="rgb(210,102,26)" fg:x="2673" fg:w="1"/><text x="64.7840%" y="319.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="64.5340%" y="293" width="0.0241%" height="15" fill="rgb(218,30,30)" fg:x="2673" fg:w="1"/><text x="64.7840%" y="303.50"></text></g><g><title>hx`serde::de::Deserializer::__deserialize_content (1 samples, 0.02%)</title><rect x="64.5340%" y="277" width="0.0241%" height="15" fill="rgb(214,67,26)" fg:x="2673" fg:w="1"/><text x="64.7840%" y="287.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="64.5340%" y="261" width="0.0241%" height="15" fill="rgb(251,9,53)" fg:x="2673" fg:w="1"/><text x="64.7840%" y="271.50"></text></g><g><title>hx`serde::de::Deserializer::__deserialize_content (1 samples, 0.02%)</title><rect x="64.5340%" y="245" width="0.0241%" height="15" fill="rgb(228,204,25)" fg:x="2673" fg:w="1"/><text x="64.7840%" y="255.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="64.5340%" y="229" width="0.0241%" height="15" fill="rgb(207,153,8)" fg:x="2673" fg:w="1"/><text x="64.7840%" y="239.50"></text></g><g><title>hx`serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="64.5582%" y="389" width="0.0241%" height="15" fill="rgb(242,9,16)" fg:x="2674" fg:w="1"/><text x="64.8082%" y="399.50"></text></g><g><title>hx`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.02%)</title><rect x="64.5823%" y="389" width="0.0241%" height="15" fill="rgb(217,211,10)" fg:x="2675" fg:w="1"/><text x="64.8323%" y="399.50"></text></g><g><title>hx`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.02%)</title><rect x="64.5823%" y="373" width="0.0241%" height="15" fill="rgb(219,228,52)" fg:x="2675" fg:w="1"/><text x="64.8323%" y="383.50"></text></g><g><title>hx`futures_util::stream::stream::StreamExt::poll_next_unpin (7 samples, 0.17%)</title><rect x="64.4616%" y="437" width="0.1690%" height="15" fill="rgb(231,92,29)" fg:x="2670" fg:w="7"/><text x="64.7116%" y="447.50"></text></g><g><title>hx`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (7 samples, 0.17%)</title><rect x="64.4616%" y="421" width="0.1690%" height="15" fill="rgb(232,8,23)" fg:x="2670" fg:w="7"/><text x="64.7116%" y="431.50"></text></g><g><title>hx`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.17%)</title><rect x="64.4616%" y="405" width="0.1690%" height="15" fill="rgb(216,211,34)" fg:x="2670" fg:w="7"/><text x="64.7116%" y="415.50"></text></g><g><title>hx`tokio::time::sleep::Sleep::new_timeout (1 samples, 0.02%)</title><rect x="64.6065%" y="389" width="0.0241%" height="15" fill="rgb(236,151,0)" fg:x="2676" fg:w="1"/><text x="64.8565%" y="399.50"></text></g><g><title>hx`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (54 samples, 1.30%)</title><rect x="63.3993%" y="453" width="1.3037%" height="15" fill="rgb(209,168,3)" fg:x="2626" fg:w="54"/><text x="63.6493%" y="463.50"></text></g><g><title>hx`signal_hook::iterator::backend::SignalIterator&lt;SD,E&gt;::poll_signal (3 samples, 0.07%)</title><rect x="64.6306%" y="437" width="0.0724%" height="15" fill="rgb(208,129,28)" fg:x="2677" fg:w="3"/><text x="64.8806%" y="447.50"></text></g><g><title>hx`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (2 samples, 0.05%)</title><rect x="64.6548%" y="421" width="0.0483%" height="15" fill="rgb(229,78,22)" fg:x="2678" fg:w="2"/><text x="64.9048%" y="431.50"></text></g><g><title>hx`tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.02%)</title><rect x="64.6789%" y="405" width="0.0241%" height="15" fill="rgb(228,187,13)" fg:x="2679" fg:w="1"/><text x="64.9289%" y="415.50"></text></g><g><title>hx`&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="64.7030%" y="453" width="0.0241%" height="15" fill="rgb(240,119,24)" fg:x="2680" fg:w="1"/><text x="64.9530%" y="463.50"></text></g><g><title>hx`alloc::fmt::format::format_inner (1 samples, 0.02%)</title><rect x="64.7272%" y="453" width="0.0241%" height="15" fill="rgb(209,194,42)" fg:x="2681" fg:w="1"/><text x="64.9772%" y="463.50"></text></g><g><title>hx`&lt;url::Url as serde::de::Deserialize&gt;::deserialize (1 samples, 0.02%)</title><rect x="64.7513%" y="389" width="0.0241%" height="15" fill="rgb(247,200,46)" fg:x="2682" fg:w="1"/><text x="65.0013%" y="399.50"></text></g><g><title>hx`&lt;&lt;url::Url as serde::de::Deserialize&gt;::deserialize::UrlVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.02%)</title><rect x="64.7513%" y="373" width="0.0241%" height="15" fill="rgb(218,76,16)" fg:x="2682" fg:w="1"/><text x="65.0013%" y="383.50"></text></g><g><title>hx`url::parser::Parser::parse_url (1 samples, 0.02%)</title><rect x="64.7513%" y="357" width="0.0241%" height="15" fill="rgb(225,21,48)" fg:x="2682" fg:w="1"/><text x="65.0013%" y="367.50"></text></g><g><title>hx`url::parser::Parser::parse_file (1 samples, 0.02%)</title><rect x="64.7513%" y="341" width="0.0241%" height="15" fill="rgb(239,223,50)" fg:x="2682" fg:w="1"/><text x="65.0013%" y="351.50"></text></g><g><title>hx`url::parser::Parser::parse_path (1 samples, 0.02%)</title><rect x="64.7513%" y="325" width="0.0241%" height="15" fill="rgb(244,45,21)" fg:x="2682" fg:w="1"/><text x="65.0013%" y="335.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;serde_json::error::Error&gt; (1 samples, 0.02%)</title><rect x="64.7755%" y="389" width="0.0241%" height="15" fill="rgb(232,33,43)" fg:x="2683" fg:w="1"/><text x="65.0255%" y="399.50"></text></g><g><title>hx`core::fmt::write (3 samples, 0.07%)</title><rect x="64.8238%" y="309" width="0.0724%" height="15" fill="rgb(209,8,3)" fg:x="2685" fg:w="3"/><text x="65.0738%" y="319.50"></text></g><g><title>hx`&lt;serde::de::Unexpected as core::fmt::Display&gt;::fmt (3 samples, 0.07%)</title><rect x="64.8238%" y="293" width="0.0724%" height="15" fill="rgb(214,25,53)" fg:x="2685" fg:w="3"/><text x="65.0738%" y="303.50"></text></g><g><title>hx`core::fmt::write (3 samples, 0.07%)</title><rect x="64.8238%" y="277" width="0.0724%" height="15" fill="rgb(254,186,54)" fg:x="2685" fg:w="3"/><text x="65.0738%" y="287.50"></text></g><g><title>hx`&lt;str as core::fmt::Debug&gt;::fmt (3 samples, 0.07%)</title><rect x="64.8238%" y="261" width="0.0724%" height="15" fill="rgb(208,174,49)" fg:x="2685" fg:w="3"/><text x="65.0738%" y="271.50"></text></g><g><title>hx`core::unicode::unicode_data::grapheme_extend::lookup (2 samples, 0.05%)</title><rect x="64.8479%" y="245" width="0.0483%" height="15" fill="rgb(233,191,51)" fg:x="2686" fg:w="2"/><text x="65.0979%" y="255.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_i32 (5 samples, 0.12%)</title><rect x="64.7996%" y="373" width="0.1207%" height="15" fill="rgb(222,134,10)" fg:x="2684" fg:w="5"/><text x="65.0496%" y="383.50"></text></g><g><title>hx`serde::__private::de::content::ContentRefDeserializer&lt;E&gt;::invalid_type (4 samples, 0.10%)</title><rect x="64.8238%" y="357" width="0.0966%" height="15" fill="rgb(230,226,20)" fg:x="2685" fg:w="4"/><text x="65.0738%" y="367.50"></text></g><g><title>hx`&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (4 samples, 0.10%)</title><rect x="64.8238%" y="341" width="0.0966%" height="15" fill="rgb(251,111,25)" fg:x="2685" fg:w="4"/><text x="65.0738%" y="351.50"></text></g><g><title>hx`&lt;serde_json::error::Error as serde::de::Error&gt;::custom (4 samples, 0.10%)</title><rect x="64.8238%" y="325" width="0.0966%" height="15" fill="rgb(224,40,46)" fg:x="2685" fg:w="4"/><text x="65.0738%" y="335.50"></text></g><g><title>hx`serde_json::error::make_error (1 samples, 0.02%)</title><rect x="64.8962%" y="309" width="0.0241%" height="15" fill="rgb(236,108,47)" fg:x="2688" fg:w="1"/><text x="65.1462%" y="319.50"></text></g><g><title>hx`core::str::pattern::StrSearcher::new (1 samples, 0.02%)</title><rect x="64.8962%" y="293" width="0.0241%" height="15" fill="rgb(234,93,0)" fg:x="2688" fg:w="1"/><text x="65.1462%" y="303.50"></text></g><g><title>hx`lsp_types::_::_&lt;impl serde::de::Deserialize for lsp_types::NumberOrString&gt;::deserialize (6 samples, 0.14%)</title><rect x="64.7996%" y="389" width="0.1449%" height="15" fill="rgb(224,213,32)" fg:x="2684" fg:w="6"/><text x="65.0496%" y="399.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;serde_json::error::Error&gt; (1 samples, 0.02%)</title><rect x="64.9203%" y="373" width="0.0241%" height="15" fill="rgb(251,11,48)" fg:x="2689" fg:w="1"/><text x="65.1703%" y="383.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_option (1 samples, 0.02%)</title><rect x="64.9445%" y="357" width="0.0241%" height="15" fill="rgb(236,173,5)" fg:x="2690" fg:w="1"/><text x="65.1945%" y="367.50"></text></g><g><title>hx`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="64.9686%" y="341" width="0.0241%" height="15" fill="rgb(230,95,12)" fg:x="2691" fg:w="1"/><text x="65.2186%" y="351.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.05%)</title><rect x="64.9686%" y="357" width="0.0483%" height="15" fill="rgb(232,209,1)" fg:x="2691" fg:w="2"/><text x="65.2186%" y="367.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.02%)</title><rect x="64.9928%" y="341" width="0.0241%" height="15" fill="rgb(232,6,1)" fg:x="2692" fg:w="1"/><text x="65.2428%" y="351.50"></text></g><g><title>hx`lsp_types::progress::_::_&lt;impl serde::de::Deserialize for lsp_types::progress::WorkDoneProgress&gt;::deserialize (4 samples, 0.10%)</title><rect x="64.9445%" y="373" width="0.0966%" height="15" fill="rgb(210,224,50)" fg:x="2690" fg:w="4"/><text x="65.1945%" y="383.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="65.0169%" y="357" width="0.0241%" height="15" fill="rgb(228,127,35)" fg:x="2693" fg:w="1"/><text x="65.2669%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.02%)</title><rect x="65.0169%" y="341" width="0.0241%" height="15" fill="rgb(245,102,45)" fg:x="2693" fg:w="1"/><text x="65.2669%" y="351.50"></text></g><g><title>hx`lsp_types::progress::_::_&lt;impl serde::de::Deserialize for lsp_types::progress::ProgressParamsValue&gt;::deserialize (5 samples, 0.12%)</title><rect x="64.9445%" y="389" width="0.1207%" height="15" fill="rgb(214,1,49)" fg:x="2690" fg:w="5"/><text x="65.1945%" y="399.50"></text></g><g><title>hx`serde::de::Deserializer::__deserialize_content (1 samples, 0.02%)</title><rect x="65.0410%" y="373" width="0.0241%" height="15" fill="rgb(226,163,40)" fg:x="2694" fg:w="1"/><text x="65.2910%" y="383.50"></text></g><g><title>hx`serde_json::value::de::visit_object (1 samples, 0.02%)</title><rect x="65.0410%" y="357" width="0.0241%" height="15" fill="rgb(239,212,28)" fg:x="2694" fg:w="1"/><text x="65.2910%" y="367.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="65.0410%" y="341" width="0.0241%" height="15" fill="rgb(220,20,13)" fg:x="2694" fg:w="1"/><text x="65.2910%" y="351.50"></text></g><g><title>hx`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="65.0410%" y="325" width="0.0241%" height="15" fill="rgb(210,164,35)" fg:x="2694" fg:w="1"/><text x="65.2910%" y="335.50"></text></g><g><title>hx`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="65.0893%" y="309" width="0.0241%" height="15" fill="rgb(248,109,41)" fg:x="2696" fg:w="1"/><text x="65.3393%" y="319.50"></text></g><g><title>hx`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1 samples, 0.02%)</title><rect x="65.0893%" y="293" width="0.0241%" height="15" fill="rgb(238,23,50)" fg:x="2696" fg:w="1"/><text x="65.3393%" y="303.50"></text></g><g><title>hx`helix_lsp::Notification::parse (17 samples, 0.41%)</title><rect x="64.7513%" y="453" width="0.4104%" height="15" fill="rgb(211,48,49)" fg:x="2682" fg:w="17"/><text x="65.0013%" y="463.50"></text></g><g><title>hx`helix_lsp::jsonrpc::Params::parse (17 samples, 0.41%)</title><rect x="64.7513%" y="437" width="0.4104%" height="15" fill="rgb(223,36,21)" fg:x="2682" fg:w="17"/><text x="65.0013%" y="447.50"></text></g><g><title>hx`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (17 samples, 0.41%)</title><rect x="64.7513%" y="421" width="0.4104%" height="15" fill="rgb(207,123,46)" fg:x="2682" fg:w="17"/><text x="65.0013%" y="431.50"></text></g><g><title>hx`serde_json::value::de::visit_object (17 samples, 0.41%)</title><rect x="64.7513%" y="405" width="0.4104%" height="15" fill="rgb(240,218,32)" fg:x="2682" fg:w="17"/><text x="65.0013%" y="415.50"></text></g><g><title>hx`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (4 samples, 0.10%)</title><rect x="65.0652%" y="389" width="0.0966%" height="15" fill="rgb(252,5,43)" fg:x="2695" fg:w="4"/><text x="65.3152%" y="399.50"></text></g><g><title>hx`serde_json::value::de::visit_array (4 samples, 0.10%)</title><rect x="65.0652%" y="373" width="0.0966%" height="15" fill="rgb(252,84,19)" fg:x="2695" fg:w="4"/><text x="65.3152%" y="383.50"></text></g><g><title>hx`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.10%)</title><rect x="65.0652%" y="357" width="0.0966%" height="15" fill="rgb(243,152,39)" fg:x="2695" fg:w="4"/><text x="65.3152%" y="367.50"></text></g><g><title>hx`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.10%)</title><rect x="65.0652%" y="341" width="0.0966%" height="15" fill="rgb(234,160,15)" fg:x="2695" fg:w="4"/><text x="65.3152%" y="351.50"></text></g><g><title>hx`serde_json::value::de::visit_object (4 samples, 0.10%)</title><rect x="65.0652%" y="325" width="0.0966%" height="15" fill="rgb(237,34,20)" fg:x="2695" fg:w="4"/><text x="65.3152%" y="335.50"></text></g><g><title>hx`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.05%)</title><rect x="65.1135%" y="309" width="0.0483%" height="15" fill="rgb(229,97,13)" fg:x="2697" fg:w="2"/><text x="65.3635%" y="319.50"></text></g><g><title>hx`serde_json::value::de::visit_object (2 samples, 0.05%)</title><rect x="65.1135%" y="293" width="0.0483%" height="15" fill="rgb(234,71,50)" fg:x="2697" fg:w="2"/><text x="65.3635%" y="303.50"></text></g><g><title>hx`&lt;url::Url as serde::de::Deserialize&gt;::deserialize (2 samples, 0.05%)</title><rect x="65.1135%" y="277" width="0.0483%" height="15" fill="rgb(253,155,4)" fg:x="2697" fg:w="2"/><text x="65.3635%" y="287.50"></text></g><g><title>hx`&lt;&lt;url::Url as serde::de::Deserialize&gt;::deserialize::UrlVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.05%)</title><rect x="65.1135%" y="261" width="0.0483%" height="15" fill="rgb(222,185,37)" fg:x="2697" fg:w="2"/><text x="65.3635%" y="271.50"></text></g><g><title>hx`url::parser::Parser::parse_url (2 samples, 0.05%)</title><rect x="65.1135%" y="245" width="0.0483%" height="15" fill="rgb(251,177,13)" fg:x="2697" fg:w="2"/><text x="65.3635%" y="255.50"></text></g><g><title>hx`url::parser::Parser::after_double_slash (2 samples, 0.05%)</title><rect x="65.1135%" y="229" width="0.0483%" height="15" fill="rgb(250,179,40)" fg:x="2697" fg:w="2"/><text x="65.3635%" y="239.50"></text></g><g><title>hx`url::parser::Parser::parse_host (1 samples, 0.02%)</title><rect x="65.1376%" y="213" width="0.0241%" height="15" fill="rgb(242,44,2)" fg:x="2698" fg:w="1"/><text x="65.3876%" y="223.50"></text></g><g><title>hx`url::host::Host::parse (1 samples, 0.02%)</title><rect x="65.1376%" y="197" width="0.0241%" height="15" fill="rgb(216,177,13)" fg:x="2698" fg:w="1"/><text x="65.3876%" y="207.50"></text></g><g><title>hx`idna::uts46::Config::to_ascii (1 samples, 0.02%)</title><rect x="65.1376%" y="181" width="0.0241%" height="15" fill="rgb(216,106,43)" fg:x="2698" fg:w="1"/><text x="65.3876%" y="191.50"></text></g><g><title>hx`idna::uts46::Idna::to_ascii (1 samples, 0.02%)</title><rect x="65.1376%" y="165" width="0.0241%" height="15" fill="rgb(216,183,2)" fg:x="2698" fg:w="1"/><text x="65.3876%" y="175.50"></text></g><g><title>hx`idna::uts46::Idna::to_ascii_inner (1 samples, 0.02%)</title><rect x="65.1376%" y="149" width="0.0241%" height="15" fill="rgb(249,75,3)" fg:x="2698" fg:w="1"/><text x="65.3876%" y="159.50"></text></g><g><title>hx`mi_malloc (1 samples, 0.02%)</title><rect x="65.1376%" y="133" width="0.0241%" height="15" fill="rgb(219,67,39)" fg:x="2698" fg:w="1"/><text x="65.3876%" y="143.50"></text></g><g><title>hx`helix_term::application::Application::handle_document_write (2 samples, 0.05%)</title><rect x="65.1618%" y="453" width="0.0483%" height="15" fill="rgb(253,228,2)" fg:x="2699" fg:w="2"/><text x="65.4118%" y="463.50"></text></g><g><title>hx`helix_core::path::get_relative_path (2 samples, 0.05%)</title><rect x="65.1618%" y="437" width="0.0483%" height="15" fill="rgb(235,138,27)" fg:x="2699" fg:w="2"/><text x="65.4118%" y="447.50"></text></g><g><title>hx`std::env::current_dir (2 samples, 0.05%)</title><rect x="65.1618%" y="421" width="0.0483%" height="15" fill="rgb(236,97,51)" fg:x="2699" fg:w="2"/><text x="65.4118%" y="431.50"></text></g><g><title>libsystem_c.dylib`__private_getcwd (2 samples, 0.05%)</title><rect x="65.1618%" y="405" width="0.0483%" height="15" fill="rgb(240,80,30)" fg:x="2699" fg:w="2"/><text x="65.4118%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`stat (2 samples, 0.05%)</title><rect x="65.1618%" y="389" width="0.0483%" height="15" fill="rgb(230,178,19)" fg:x="2699" fg:w="2"/><text x="65.4118%" y="399.50"></text></g><g><title>hx`helix_core::syntax::LanguageLayer::parse (1 samples, 0.02%)</title><rect x="65.2342%" y="341" width="0.0241%" height="15" fill="rgb(210,190,27)" fg:x="2702" fg:w="1"/><text x="65.4842%" y="351.50"></text></g><g><title>hx`ts_parser_parse (1 samples, 0.02%)</title><rect x="65.2342%" y="325" width="0.0241%" height="15" fill="rgb(222,107,31)" fg:x="2702" fg:w="1"/><text x="65.4842%" y="335.50"></text></g><g><title>hx`ts_subtree_balance (1 samples, 0.02%)</title><rect x="65.2342%" y="309" width="0.0241%" height="15" fill="rgb(216,127,34)" fg:x="2702" fg:w="1"/><text x="65.4842%" y="319.50"></text></g><g><title>hx`ts_subtree_summarize_children (1 samples, 0.02%)</title><rect x="65.2342%" y="293" width="0.0241%" height="15" fill="rgb(234,116,52)" fg:x="2702" fg:w="1"/><text x="65.4842%" y="303.50"></text></g><g><title>hx`regex::re_unicode::Regex::find_at (1 samples, 0.02%)</title><rect x="65.2583%" y="341" width="0.0241%" height="15" fill="rgb(222,124,15)" fg:x="2703" fg:w="1"/><text x="65.5083%" y="351.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (2 samples, 0.05%)</title><rect x="65.3308%" y="309" width="0.0483%" height="15" fill="rgb(231,179,28)" fg:x="2706" fg:w="2"/><text x="65.5808%" y="319.50"></text></g><g><title>hx`ts_query_cursor__advance (5 samples, 0.12%)</title><rect x="65.2825%" y="325" width="0.1207%" height="15" fill="rgb(226,93,45)" fg:x="2704" fg:w="5"/><text x="65.5325%" y="335.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (1 samples, 0.02%)</title><rect x="65.3790%" y="309" width="0.0241%" height="15" fill="rgb(215,8,51)" fg:x="2708" fg:w="1"/><text x="65.6290%" y="319.50"></text></g><g><title>hx`core::ops::function::FnOnce::call_once{{vtable.shim}} (8 samples, 0.19%)</title><rect x="65.2342%" y="421" width="0.1931%" height="15" fill="rgb(223,106,5)" fg:x="2702" fg:w="8"/><text x="65.4842%" y="431.50"></text></g><g><title>hx`helix_view::document::Document::apply (8 samples, 0.19%)</title><rect x="65.2342%" y="405" width="0.1931%" height="15" fill="rgb(250,191,5)" fg:x="2702" fg:w="8"/><text x="65.4842%" y="415.50"></text></g><g><title>hx`helix_view::document::Document::apply_impl (8 samples, 0.19%)</title><rect x="65.2342%" y="389" width="0.1931%" height="15" fill="rgb(242,132,44)" fg:x="2702" fg:w="8"/><text x="65.4842%" y="399.50"></text></g><g><title>hx`helix_core::syntax::Syntax::update (8 samples, 0.19%)</title><rect x="65.2342%" y="373" width="0.1931%" height="15" fill="rgb(251,152,29)" fg:x="2702" fg:w="8"/><text x="65.4842%" y="383.50"></text></g><g><title>hx`std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.19%)</title><rect x="65.2342%" y="357" width="0.1931%" height="15" fill="rgb(218,179,5)" fg:x="2702" fg:w="8"/><text x="65.4842%" y="367.50"></text></g><g><title>hx`ts_query_cursor_next_match (6 samples, 0.14%)</title><rect x="65.2825%" y="341" width="0.1449%" height="15" fill="rgb(227,67,19)" fg:x="2704" fg:w="6"/><text x="65.5325%" y="351.50"></text></g><g><title>hx`ts_tree_cursor_current_status (1 samples, 0.02%)</title><rect x="65.4032%" y="325" width="0.0241%" height="15" fill="rgb(233,119,31)" fg:x="2709" fg:w="1"/><text x="65.6532%" y="335.50"></text></g><g><title>hx`helix_term::commands::insert::insert_char (1 samples, 0.02%)</title><rect x="65.4273%" y="421" width="0.0241%" height="15" fill="rgb(241,120,22)" fg:x="2710" fg:w="1"/><text x="65.6773%" y="431.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::handle_idle_timeout (1 samples, 0.02%)</title><rect x="65.4515%" y="421" width="0.0241%" height="15" fill="rgb(224,102,30)" fg:x="2711" fg:w="1"/><text x="65.7015%" y="431.50"></text></g><g><title>hx`core::slice::sort::recurse (1 samples, 0.02%)</title><rect x="65.4756%" y="405" width="0.0241%" height="15" fill="rgb(210,164,37)" fg:x="2712" fg:w="1"/><text x="65.7256%" y="415.50"></text></g><g><title>hx`helix_term::keymap::KeyTrie::search (1 samples, 0.02%)</title><rect x="65.4998%" y="405" width="0.0241%" height="15" fill="rgb(226,191,16)" fg:x="2713" fg:w="1"/><text x="65.7498%" y="415.50"></text></g><g><title>hx`helix_term::keymap::KeyTrieNode::infobox (1 samples, 0.02%)</title><rect x="65.5239%" y="405" width="0.0241%" height="15" fill="rgb(214,40,45)" fg:x="2714" fg:w="1"/><text x="65.7739%" y="415.50"></text></g><g><title>hx`core::slice::sort::recurse (1 samples, 0.02%)</title><rect x="65.5239%" y="389" width="0.0241%" height="15" fill="rgb(244,29,26)" fg:x="2714" fg:w="1"/><text x="65.7739%" y="399.50"></text></g><g><title>hx`core::slice::sort::shift_tail (1 samples, 0.02%)</title><rect x="65.5239%" y="373" width="0.0241%" height="15" fill="rgb(216,16,5)" fg:x="2714" fg:w="1"/><text x="65.7739%" y="383.50"></text></g><g><title>hx`helix_term::keymap::KeyTrieNode::infobox::_{{closure}} (1 samples, 0.02%)</title><rect x="65.5239%" y="357" width="0.0241%" height="15" fill="rgb(249,76,35)" fg:x="2714" fg:w="1"/><text x="65.7739%" y="367.50"></text></g><g><title>hx`helix_term::commands::MappableCommand::execute (1 samples, 0.02%)</title><rect x="65.5480%" y="389" width="0.0241%" height="15" fill="rgb(207,11,44)" fg:x="2715" fg:w="1"/><text x="65.7980%" y="399.50"></text></g><g><title>hx`helix_term::commands::typed::quit (1 samples, 0.02%)</title><rect x="65.5480%" y="373" width="0.0241%" height="15" fill="rgb(228,190,49)" fg:x="2715" fg:w="1"/><text x="65.7980%" y="383.50"></text></g><g><title>hx`helix_view::editor::Editor::close (1 samples, 0.02%)</title><rect x="65.5480%" y="357" width="0.0241%" height="15" fill="rgb(214,173,12)" fg:x="2715" fg:w="1"/><text x="65.7980%" y="367.50"></text></g><g><title>hx`helix_view::editor::Editor::_refresh (1 samples, 0.02%)</title><rect x="65.5480%" y="341" width="0.0241%" height="15" fill="rgb(218,26,35)" fg:x="2715" fg:w="1"/><text x="65.7980%" y="351.50"></text></g><g><title>hx`helix_view::view::View::offset_coords_to_in_view_center (1 samples, 0.02%)</title><rect x="65.5480%" y="325" width="0.0241%" height="15" fill="rgb(220,200,19)" fg:x="2715" fg:w="1"/><text x="65.7980%" y="335.50"></text></g><g><title>hx`helix_core::position::char_idx_at_visual_offset (1 samples, 0.02%)</title><rect x="65.5480%" y="309" width="0.0241%" height="15" fill="rgb(239,95,49)" fg:x="2715" fg:w="1"/><text x="65.7980%" y="319.50"></text></g><g><title>hx`helix_core::position::visual_offset_from_block (1 samples, 0.02%)</title><rect x="65.5480%" y="293" width="0.0241%" height="15" fill="rgb(235,85,53)" fg:x="2715" fg:w="1"/><text x="65.7980%" y="303.50"></text></g><g><title>hx`&lt;helix_core::doc_formatter::DocumentFormatter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="65.5480%" y="277" width="0.0241%" height="15" fill="rgb(233,133,31)" fg:x="2715" fg:w="1"/><text x="65.7980%" y="287.50"></text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::advance_grapheme (1 samples, 0.02%)</title><rect x="65.5480%" y="261" width="0.0241%" height="15" fill="rgb(218,25,20)" fg:x="2715" fg:w="1"/><text x="65.7980%" y="271.50"></text></g><g><title>hx`&lt;helix_core::graphemes::RopeGraphemes as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="65.5480%" y="245" width="0.0241%" height="15" fill="rgb(252,210,38)" fg:x="2715" fg:w="1"/><text x="65.7980%" y="255.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::next_boundary (1 samples, 0.02%)</title><rect x="65.5480%" y="229" width="0.0241%" height="15" fill="rgb(242,134,21)" fg:x="2715" fg:w="1"/><text x="65.7980%" y="239.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::is_boundary (1 samples, 0.02%)</title><rect x="65.5480%" y="213" width="0.0241%" height="15" fill="rgb(213,28,48)" fg:x="2715" fg:w="1"/><text x="65.7980%" y="223.50"></text></g><g><title>hx`&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load (1 samples, 0.02%)</title><rect x="65.5722%" y="325" width="0.0241%" height="15" fill="rgb(250,196,2)" fg:x="2716" fg:w="1"/><text x="65.8222%" y="335.50"></text></g><g><title>hx`&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load::_{{closure}} (1 samples, 0.02%)</title><rect x="65.5722%" y="309" width="0.0241%" height="15" fill="rgb(227,5,17)" fg:x="2716" fg:w="1"/><text x="65.8222%" y="319.50"></text></g><g><title>hx`regex::re_unicode::Regex::find_at (1 samples, 0.02%)</title><rect x="65.5963%" y="325" width="0.0241%" height="15" fill="rgb(221,226,24)" fg:x="2717" fg:w="1"/><text x="65.8463%" y="335.50"></text></g><g><title>hx`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="65.6929%" y="309" width="0.0241%" height="15" fill="rgb(211,5,48)" fg:x="2721" fg:w="1"/><text x="65.9429%" y="319.50"></text></g><g><title>hx`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="65.6929%" y="293" width="0.0241%" height="15" fill="rgb(219,150,6)" fg:x="2721" fg:w="1"/><text x="65.9429%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="65.6929%" y="277" width="0.0241%" height="15" fill="rgb(251,46,16)" fg:x="2721" fg:w="1"/><text x="65.9429%" y="287.50"></text></g><g><title>hx`tree_sitter::Parser::set_included_ranges (1 samples, 0.02%)</title><rect x="65.7170%" y="293" width="0.0241%" height="15" fill="rgb(220,204,40)" fg:x="2722" fg:w="1"/><text x="65.9670%" y="303.50"></text></g><g><title>hx`ts_lexer_set_included_ranges (1 samples, 0.02%)</title><rect x="65.7170%" y="277" width="0.0241%" height="15" fill="rgb(211,85,2)" fg:x="2722" fg:w="1"/><text x="65.9670%" y="287.50"></text></g><g><title>hx`ts_parser__breakdown_top_of_stack (1 samples, 0.02%)</title><rect x="65.7653%" y="277" width="0.0241%" height="15" fill="rgb(229,17,7)" fg:x="2724" fg:w="1"/><text x="66.0153%" y="287.50"></text></g><g><title>hx`ts_parser__reduce (1 samples, 0.02%)</title><rect x="65.7895%" y="277" width="0.0241%" height="15" fill="rgb(239,72,28)" fg:x="2725" fg:w="1"/><text x="66.0395%" y="287.50"></text></g><g><title>hx`ts_stack_pop_count (1 samples, 0.02%)</title><rect x="65.7895%" y="261" width="0.0241%" height="15" fill="rgb(230,47,54)" fg:x="2725" fg:w="1"/><text x="66.0395%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="65.7895%" y="245" width="0.0241%" height="15" fill="rgb(214,50,8)" fg:x="2725" fg:w="1"/><text x="66.0395%" y="255.50"></text></g><g><title>hx`helix_core::syntax::LanguageLayer::parse (5 samples, 0.12%)</title><rect x="65.7170%" y="309" width="0.1207%" height="15" fill="rgb(216,198,43)" fg:x="2722" fg:w="5"/><text x="65.9670%" y="319.50"></text></g><g><title>hx`ts_parser_parse (4 samples, 0.10%)</title><rect x="65.7412%" y="293" width="0.0966%" height="15" fill="rgb(234,20,35)" fg:x="2723" fg:w="4"/><text x="65.9912%" y="303.50"></text></g><g><title>rust.so`ts_lex (1 samples, 0.02%)</title><rect x="65.8136%" y="277" width="0.0241%" height="15" fill="rgb(254,45,19)" fg:x="2726" fg:w="1"/><text x="66.0636%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_current_node (1 samples, 0.02%)</title><rect x="65.8378%" y="293" width="0.0241%" height="15" fill="rgb(219,14,44)" fg:x="2727" fg:w="1"/><text x="66.0878%" y="303.50"></text></g><g><title>hx`helix_core::syntax::intersect_ranges (2 samples, 0.05%)</title><rect x="65.8378%" y="309" width="0.0483%" height="15" fill="rgb(217,220,26)" fg:x="2727" fg:w="2"/><text x="66.0878%" y="319.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (1 samples, 0.02%)</title><rect x="65.8619%" y="293" width="0.0241%" height="15" fill="rgb(213,158,28)" fg:x="2728" fg:w="1"/><text x="66.1119%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_goto_first_child (1 samples, 0.02%)</title><rect x="65.8619%" y="277" width="0.0241%" height="15" fill="rgb(252,51,52)" fg:x="2728" fg:w="1"/><text x="66.1119%" y="287.50"></text></g><g><title>hx`memchr::memmem::Finder::find (1 samples, 0.02%)</title><rect x="65.8860%" y="309" width="0.0241%" height="15" fill="rgb(246,89,16)" fg:x="2729" fg:w="1"/><text x="66.1360%" y="319.50"></text></g><g><title>hx`memchr::memmem::Finder::find (2 samples, 0.05%)</title><rect x="65.9585%" y="293" width="0.0483%" height="15" fill="rgb(216,158,49)" fg:x="2732" fg:w="2"/><text x="66.2085%" y="303.50"></text></g><g><title>hx`regex::re_unicode::Regex::find_at (5 samples, 0.12%)</title><rect x="65.9102%" y="309" width="0.1207%" height="15" fill="rgb(236,107,19)" fg:x="2730" fg:w="5"/><text x="66.1602%" y="319.50"></text></g><g><title>hx`memchr::memmem::rabinkarp::is_prefix (1 samples, 0.02%)</title><rect x="66.0068%" y="293" width="0.0241%" height="15" fill="rgb(228,185,30)" fg:x="2734" fg:w="1"/><text x="66.2568%" y="303.50"></text></g><g><title>hx`DYLD-STUB$$memmove (1 samples, 0.02%)</title><rect x="66.0309%" y="293" width="0.0241%" height="15" fill="rgb(246,134,8)" fg:x="2735" fg:w="1"/><text x="66.2809%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (12 samples, 0.29%)</title><rect x="66.3206%" y="277" width="0.2897%" height="15" fill="rgb(214,143,50)" fg:x="2747" fg:w="12"/><text x="66.5706%" y="287.50"></text></g><g><title>hx`ts_query_cursor__advance (26 samples, 0.63%)</title><rect x="66.0550%" y="293" width="0.6277%" height="15" fill="rgb(228,75,8)" fg:x="2736" fg:w="26"/><text x="66.3050%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (3 samples, 0.07%)</title><rect x="66.6103%" y="277" width="0.0724%" height="15" fill="rgb(207,175,4)" fg:x="2759" fg:w="3"/><text x="66.8603%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (1 samples, 0.02%)</title><rect x="66.6586%" y="261" width="0.0241%" height="15" fill="rgb(205,108,24)" fg:x="2761" fg:w="1"/><text x="66.9086%" y="271.50"></text></g><g><title>hx`ts_query_cursor_next_match (40 samples, 0.97%)</title><rect x="66.0309%" y="309" width="0.9657%" height="15" fill="rgb(244,120,49)" fg:x="2735" fg:w="40"/><text x="66.2809%" y="319.50"></text></g><g><title>hx`ts_tree_cursor_current_status (13 samples, 0.31%)</title><rect x="66.6828%" y="293" width="0.3139%" height="15" fill="rgb(223,47,38)" fg:x="2762" fg:w="13"/><text x="66.9328%" y="303.50"></text></g><g><title>hx`ts_tree_edit (1 samples, 0.02%)</title><rect x="66.9966%" y="309" width="0.0241%" height="15" fill="rgb(229,179,11)" fg:x="2775" fg:w="1"/><text x="67.2466%" y="319.50"></text></g><g><title>hx`ts_subtree_edit (1 samples, 0.02%)</title><rect x="66.9966%" y="293" width="0.0241%" height="15" fill="rgb(231,122,1)" fg:x="2775" fg:w="1"/><text x="67.2466%" y="303.50"></text></g><g><title>hx`helix_core::syntax::Syntax::update (61 samples, 1.47%)</title><rect x="65.5722%" y="341" width="1.4727%" height="15" fill="rgb(245,119,9)" fg:x="2716" fg:w="61"/><text x="65.8222%" y="351.50"></text></g><g><title>hx`std::thread::local::LocalKey&lt;T&gt;::with (59 samples, 1.42%)</title><rect x="65.6205%" y="325" width="1.4244%" height="15" fill="rgb(241,163,25)" fg:x="2718" fg:w="59"/><text x="65.8705%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="67.0208%" y="309" width="0.0241%" height="15" fill="rgb(217,214,3)" fg:x="2776" fg:w="1"/><text x="67.2708%" y="319.50"></text></g><g><title>hx`helix_core::transaction::ChangeSet::apply (1 samples, 0.02%)</title><rect x="67.0449%" y="341" width="0.0241%" height="15" fill="rgb(240,86,28)" fg:x="2777" fg:w="1"/><text x="67.2949%" y="351.50"></text></g><g><title>hx`ropey::rope::Rope::remove (1 samples, 0.02%)</title><rect x="67.0449%" y="325" width="0.0241%" height="15" fill="rgb(215,47,9)" fg:x="2777" fg:w="1"/><text x="67.2949%" y="335.50"></text></g><g><title>hx`&lt;ropey::tree::node_children::inner::NodeChildrenInternal as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="67.0449%" y="309" width="0.0241%" height="15" fill="rgb(252,25,45)" fg:x="2777" fg:w="1"/><text x="67.2949%" y="319.50"></text></g><g><title>hx`helix_term::commands::delete_selection_impl (63 samples, 1.52%)</title><rect x="65.5722%" y="389" width="1.5210%" height="15" fill="rgb(251,164,9)" fg:x="2716" fg:w="63"/><text x="65.8222%" y="399.50"></text></g><g><title>hx`helix_view::document::Document::apply (63 samples, 1.52%)</title><rect x="65.5722%" y="373" width="1.5210%" height="15" fill="rgb(233,194,0)" fg:x="2716" fg:w="63"/><text x="65.8222%" y="383.50"></text></g><g><title>hx`helix_view::document::Document::apply_impl (63 samples, 1.52%)</title><rect x="65.5722%" y="357" width="1.5210%" height="15" fill="rgb(249,111,24)" fg:x="2716" fg:w="63"/><text x="65.8222%" y="367.50"></text></g><g><title>hx`tokio::task::spawn::spawn (1 samples, 0.02%)</title><rect x="67.0690%" y="341" width="0.0241%" height="15" fill="rgb(250,223,3)" fg:x="2778" fg:w="1"/><text x="67.3190%" y="351.50"></text></g><g><title>hx`tokio::runtime::scheduler::Handle::spawn (1 samples, 0.02%)</title><rect x="67.0690%" y="325" width="0.0241%" height="15" fill="rgb(236,178,37)" fg:x="2778" fg:w="1"/><text x="67.3190%" y="335.50"></text></g><g><title>hx`tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (1 samples, 0.02%)</title><rect x="67.0690%" y="309" width="0.0241%" height="15" fill="rgb(241,158,50)" fg:x="2778" fg:w="1"/><text x="67.3190%" y="319.50"></text></g><g><title>hx`tokio::runtime::task::core::Cell&lt;T,S&gt;::new (1 samples, 0.02%)</title><rect x="67.0690%" y="293" width="0.0241%" height="15" fill="rgb(213,121,41)" fg:x="2778" fg:w="1"/><text x="67.3190%" y="303.50"></text></g><g><title>hx`&lt;std::sys::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.14%)</title><rect x="67.0932%" y="309" width="0.1449%" height="15" fill="rgb(240,92,3)" fg:x="2779" fg:w="6"/><text x="67.3432%" y="319.50"></text></g><g><title>libsystem_c.dylib`readdir_r (6 samples, 0.14%)</title><rect x="67.0932%" y="293" width="0.1449%" height="15" fill="rgb(205,123,3)" fg:x="2779" fg:w="6"/><text x="67.3432%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__getdirentries64 (6 samples, 0.14%)</title><rect x="67.0932%" y="277" width="0.1449%" height="15" fill="rgb(205,97,47)" fg:x="2779" fg:w="6"/><text x="67.3432%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (19 samples, 0.46%)</title><rect x="67.2380%" y="245" width="0.4587%" height="15" fill="rgb(247,152,14)" fg:x="2785" fg:w="19"/><text x="67.4880%" y="255.50"></text></g><g><title>hx`walkdir::IntoIter::handle_entry (20 samples, 0.48%)</title><rect x="67.2380%" y="309" width="0.4829%" height="15" fill="rgb(248,195,53)" fg:x="2785" fg:w="20"/><text x="67.4880%" y="319.50"></text></g><g><title>hx`walkdir::IntoIter::push (20 samples, 0.48%)</title><rect x="67.2380%" y="293" width="0.4829%" height="15" fill="rgb(226,201,16)" fg:x="2785" fg:w="20"/><text x="67.4880%" y="303.50"></text></g><g><title>hx`std::sys::unix::fs::readdir (20 samples, 0.48%)</title><rect x="67.2380%" y="277" width="0.4829%" height="15" fill="rgb(205,98,0)" fg:x="2785" fg:w="20"/><text x="67.4880%" y="287.50"></text></g><g><title>libsystem_c.dylib`__opendir2 (20 samples, 0.48%)</title><rect x="67.2380%" y="261" width="0.4829%" height="15" fill="rgb(214,191,48)" fg:x="2785" fg:w="20"/><text x="67.4880%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`fstatfs (1 samples, 0.02%)</title><rect x="67.6968%" y="245" width="0.0241%" height="15" fill="rgb(237,112,39)" fg:x="2804" fg:w="1"/><text x="67.9468%" y="255.50"></text></g><g><title>hx`&lt;walkdir::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.65%)</title><rect x="67.0932%" y="325" width="0.6519%" height="15" fill="rgb(247,203,27)" fg:x="2779" fg:w="27"/><text x="67.3432%" y="335.50"></text></g><g><title>hx`walkdir::IntoIter::pop (1 samples, 0.02%)</title><rect x="67.7209%" y="309" width="0.0241%" height="15" fill="rgb(235,124,28)" fg:x="2805" fg:w="1"/><text x="67.9709%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (1 samples, 0.02%)</title><rect x="67.7209%" y="293" width="0.0241%" height="15" fill="rgb(208,207,46)" fg:x="2805" fg:w="1"/><text x="67.9709%" y="303.50"></text></g><g><title>hx`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="67.7451%" y="325" width="0.0241%" height="15" fill="rgb(234,176,4)" fg:x="2806" fg:w="1"/><text x="67.9951%" y="335.50"></text></g><g><title>hx`ignore::gitignore::GitignoreBuilder::add_line (1 samples, 0.02%)</title><rect x="67.7692%" y="261" width="0.0241%" height="15" fill="rgb(230,133,28)" fg:x="2807" fg:w="1"/><text x="68.0192%" y="271.50"></text></g><g><title>hx`globset::glob::GlobBuilder::build (1 samples, 0.02%)</title><rect x="67.7692%" y="245" width="0.0241%" height="15" fill="rgb(211,137,40)" fg:x="2807" fg:w="1"/><text x="68.0192%" y="255.50"></text></g><g><title>hx`ignore::gitignore::GitignoreBuilder::add (2 samples, 0.05%)</title><rect x="67.7692%" y="277" width="0.0483%" height="15" fill="rgb(254,35,13)" fg:x="2807" fg:w="2"/><text x="68.0192%" y="287.50"></text></g><g><title>hx`std::fs::OpenOptions::_open (1 samples, 0.02%)</title><rect x="67.7933%" y="261" width="0.0241%" height="15" fill="rgb(225,49,51)" fg:x="2808" fg:w="1"/><text x="68.0433%" y="271.50"></text></g><g><title>hx`std::sys::unix::fs::File::open_c (1 samples, 0.02%)</title><rect x="67.7933%" y="245" width="0.0241%" height="15" fill="rgb(251,10,15)" fg:x="2808" fg:w="1"/><text x="68.0433%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.02%)</title><rect x="67.7933%" y="229" width="0.0241%" height="15" fill="rgb(228,207,15)" fg:x="2808" fg:w="1"/><text x="68.0433%" y="239.50"></text></g><g><title>hx`std::sys::unix::fs::stat (1 samples, 0.02%)</title><rect x="67.8175%" y="277" width="0.0241%" height="15" fill="rgb(241,99,19)" fg:x="2809" fg:w="1"/><text x="68.0675%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="67.8175%" y="261" width="0.0241%" height="15" fill="rgb(207,104,49)" fg:x="2809" fg:w="1"/><text x="68.0675%" y="271.50"></text></g><g><title>hx`ignore::dir::create_gitignore (11 samples, 0.27%)</title><rect x="67.7692%" y="293" width="0.2656%" height="15" fill="rgb(234,99,18)" fg:x="2807" fg:w="11"/><text x="68.0192%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`stat (8 samples, 0.19%)</title><rect x="67.8416%" y="277" width="0.1931%" height="15" fill="rgb(213,191,49)" fg:x="2810" fg:w="8"/><text x="68.0916%" y="287.50"></text></g><g><title>hx`ignore::dir::Ignore::add_child (18 samples, 0.43%)</title><rect x="67.7692%" y="325" width="0.4346%" height="15" fill="rgb(210,226,19)" fg:x="2807" fg:w="18"/><text x="68.0192%" y="335.50"></text></g><g><title>hx`ignore::dir::Ignore::add_child_path (18 samples, 0.43%)</title><rect x="67.7692%" y="309" width="0.4346%" height="15" fill="rgb(229,97,18)" fg:x="2807" fg:w="18"/><text x="68.0192%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`stat (7 samples, 0.17%)</title><rect x="68.0348%" y="293" width="0.1690%" height="15" fill="rgb(211,167,15)" fg:x="2818" fg:w="7"/><text x="68.2848%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`stat (1 samples, 0.02%)</title><rect x="68.2038%" y="277" width="0.0241%" height="15" fill="rgb(210,169,34)" fg:x="2825" fg:w="1"/><text x="68.4538%" y="287.50"></text></g><g><title>hx`ignore::dir::Ignore::add_parents (2 samples, 0.05%)</title><rect x="68.2038%" y="325" width="0.0483%" height="15" fill="rgb(241,121,31)" fg:x="2825" fg:w="2"/><text x="68.4538%" y="335.50"></text></g><g><title>hx`ignore::dir::Ignore::add_child_path (2 samples, 0.05%)</title><rect x="68.2038%" y="309" width="0.0483%" height="15" fill="rgb(232,40,11)" fg:x="2825" fg:w="2"/><text x="68.4538%" y="319.50"></text></g><g><title>hx`ignore::dir::create_gitignore (2 samples, 0.05%)</title><rect x="68.2038%" y="293" width="0.0483%" height="15" fill="rgb(205,86,26)" fg:x="2825" fg:w="2"/><text x="68.4538%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="68.2279%" y="277" width="0.0241%" height="15" fill="rgb(231,126,28)" fg:x="2826" fg:w="1"/><text x="68.4779%" y="287.50"></text></g><g><title>hx`helix_term::filter_picker_entry (1 samples, 0.02%)</title><rect x="68.2521%" y="309" width="0.0241%" height="15" fill="rgb(219,221,18)" fg:x="2827" fg:w="1"/><text x="68.5021%" y="319.50"></text></g><g><title>hx`std::sys::unix::fs::canonicalize (1 samples, 0.02%)</title><rect x="68.2521%" y="293" width="0.0241%" height="15" fill="rgb(211,40,0)" fg:x="2827" fg:w="1"/><text x="68.5021%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__getattrlist (1 samples, 0.02%)</title><rect x="68.2521%" y="277" width="0.0241%" height="15" fill="rgb(239,85,43)" fg:x="2827" fg:w="1"/><text x="68.5021%" y="287.50"></text></g><g><title>hx`alloc::slice::merge_sort (1 samples, 0.02%)</title><rect x="68.3003%" y="261" width="0.0241%" height="15" fill="rgb(231,55,21)" fg:x="2829" fg:w="1"/><text x="68.5503%" y="271.50"></text></g><g><title>hx`ignore::gitignore::Gitignore::matched_stripped (3 samples, 0.07%)</title><rect x="68.3003%" y="277" width="0.0724%" height="15" fill="rgb(225,184,43)" fg:x="2829" fg:w="3"/><text x="68.5503%" y="287.50"></text></g><g><title>hx`globset::GlobSet::matches_candidate_into (2 samples, 0.05%)</title><rect x="68.3245%" y="261" width="0.0483%" height="15" fill="rgb(251,158,41)" fg:x="2830" fg:w="2"/><text x="68.5745%" y="271.50"></text></g><g><title>hx`globset::BasenameLiteralStrategy::matches_into (1 samples, 0.02%)</title><rect x="68.3486%" y="245" width="0.0241%" height="15" fill="rgb(234,159,37)" fg:x="2831" fg:w="1"/><text x="68.5986%" y="255.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (54 samples, 1.30%)</title><rect x="67.0932%" y="357" width="1.3037%" height="15" fill="rgb(216,204,22)" fg:x="2779" fg:w="54"/><text x="67.3432%" y="367.50"></text></g><g><title>hx`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 1.30%)</title><rect x="67.0932%" y="341" width="1.3037%" height="15" fill="rgb(214,17,3)" fg:x="2779" fg:w="54"/><text x="67.3432%" y="351.50"></text></g><g><title>hx`ignore::walk::Walk::skip_entry (6 samples, 0.14%)</title><rect x="68.2521%" y="325" width="0.1449%" height="15" fill="rgb(212,111,17)" fg:x="2827" fg:w="6"/><text x="68.5021%" y="335.50"></text></g><g><title>hx`ignore::walk::should_skip_entry (5 samples, 0.12%)</title><rect x="68.2762%" y="309" width="0.1207%" height="15" fill="rgb(221,157,24)" fg:x="2828" fg:w="5"/><text x="68.5262%" y="319.50"></text></g><g><title>hx`ignore::dir::Ignore::matched_dir_entry (5 samples, 0.12%)</title><rect x="68.2762%" y="293" width="0.1207%" height="15" fill="rgb(252,16,13)" fg:x="2828" fg:w="5"/><text x="68.5262%" y="303.50"></text></g><g><title>hx`ignore::gitignore::Gitignore::strip (1 samples, 0.02%)</title><rect x="68.3728%" y="277" width="0.0241%" height="15" fill="rgb(221,62,2)" fg:x="2832" fg:w="1"/><text x="68.6228%" y="287.50"></text></g><g><title>hx`core::iter::traits::iterator::Iterator::eq (1 samples, 0.02%)</title><rect x="68.3728%" y="261" width="0.0241%" height="15" fill="rgb(247,87,22)" fg:x="2832" fg:w="1"/><text x="68.6228%" y="271.50"></text></g><g><title>hx`&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.02%)</title><rect x="68.3728%" y="245" width="0.0241%" height="15" fill="rgb(215,73,9)" fg:x="2832" fg:w="1"/><text x="68.6228%" y="255.50"></text></g><g><title>hx`alloc::slice::merge_sort (2 samples, 0.05%)</title><rect x="68.3969%" y="357" width="0.0483%" height="15" fill="rgb(207,175,33)" fg:x="2833" fg:w="2"/><text x="68.6469%" y="367.50"></text></g><g><title>hx`std::path::compare_components (2 samples, 0.05%)</title><rect x="68.3969%" y="341" width="0.0483%" height="15" fill="rgb(243,129,54)" fg:x="2833" fg:w="2"/><text x="68.6469%" y="351.50"></text></g><g><title>hx`&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="68.4211%" y="325" width="0.0241%" height="15" fill="rgb(227,119,45)" fg:x="2834" fg:w="1"/><text x="68.6711%" y="335.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="68.4452%" y="341" width="0.0241%" height="15" fill="rgb(205,109,36)" fg:x="2835" fg:w="1"/><text x="68.6952%" y="351.50"></text></g><g><title>hx`helix_term::ui::menu::Item::sort_text (1 samples, 0.02%)</title><rect x="68.4452%" y="325" width="0.0241%" height="15" fill="rgb(205,6,39)" fg:x="2835" fg:w="1"/><text x="68.6952%" y="335.50"></text></g><g><title>hx`&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="68.4452%" y="309" width="0.0241%" height="15" fill="rgb(221,32,16)" fg:x="2835" fg:w="1"/><text x="68.6952%" y="319.50"></text></g><g><title>hx`helix_tui::text::_&lt;impl core::convert::From&lt;&amp;helix_tui::text::Text&gt; for alloc::string::String&gt;::from (1 samples, 0.02%)</title><rect x="68.4452%" y="293" width="0.0241%" height="15" fill="rgb(228,144,50)" fg:x="2835" fg:w="1"/><text x="68.6952%" y="303.50"></text></g><g><title>hx`&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="68.4693%" y="341" width="0.0241%" height="15" fill="rgb(229,201,53)" fg:x="2836" fg:w="1"/><text x="68.7193%" y="351.50"></text></g><g><title>hx`&lt;helix_tui::widgets::table::Row as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.02%)</title><rect x="68.4935%" y="341" width="0.0241%" height="15" fill="rgb(249,153,27)" fg:x="2837" fg:w="1"/><text x="68.7435%" y="351.50"></text></g><g><title>hx`&lt;helix_tui::text::Text as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (1 samples, 0.02%)</title><rect x="68.4935%" y="325" width="0.0241%" height="15" fill="rgb(227,106,25)" fg:x="2837" fg:w="1"/><text x="68.7435%" y="335.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="68.4935%" y="309" width="0.0241%" height="15" fill="rgb(230,65,29)" fg:x="2837" fg:w="1"/><text x="68.7435%" y="319.50"></text></g><g><title>hx`helix_term::ui::picker::FilePicker&lt;T&gt;::new (4 samples, 0.10%)</title><rect x="68.4452%" y="357" width="0.0966%" height="15" fill="rgb(221,57,46)" fg:x="2835" fg:w="4"/><text x="68.6952%" y="367.50"></text></g><g><title>hx`std::path::Path::_strip_prefix (1 samples, 0.02%)</title><rect x="68.5176%" y="341" width="0.0241%" height="15" fill="rgb(229,161,17)" fg:x="2838" fg:w="1"/><text x="68.7676%" y="351.50"></text></g><g><title>hx`regex::re_unicode::Regex::is_match_at (1 samples, 0.02%)</title><rect x="68.5418%" y="341" width="0.0241%" height="15" fill="rgb(222,213,11)" fg:x="2839" fg:w="1"/><text x="68.7918%" y="351.50"></text></g><g><title>hx`regex::dfa::Fsm::follow_epsilons (1 samples, 0.02%)</title><rect x="68.5418%" y="325" width="0.0241%" height="15" fill="rgb(235,35,13)" fg:x="2839" fg:w="1"/><text x="68.7918%" y="335.50"></text></g><g><title>hx`ignore::types::TypesBuilder::add (2 samples, 0.05%)</title><rect x="68.5418%" y="357" width="0.0483%" height="15" fill="rgb(233,158,34)" fg:x="2839" fg:w="2"/><text x="68.7918%" y="367.50"></text></g><g><title>hx`std::sync::once::Once::call_inner (1 samples, 0.02%)</title><rect x="68.5659%" y="341" width="0.0241%" height="15" fill="rgb(215,151,48)" fg:x="2840" fg:w="1"/><text x="68.8159%" y="351.50"></text></g><g><title>hx`std::sync::once::Once::call_once::_{{closure}} (1 samples, 0.02%)</title><rect x="68.5659%" y="325" width="0.0241%" height="15" fill="rgb(229,84,14)" fg:x="2840" fg:w="1"/><text x="68.8159%" y="335.50"></text></g><g><title>hx`regex::re_unicode::Regex::new (1 samples, 0.02%)</title><rect x="68.5659%" y="309" width="0.0241%" height="15" fill="rgb(229,68,14)" fg:x="2840" fg:w="1"/><text x="68.8159%" y="319.50"></text></g><g><title>hx`regex::exec::ExecBuilder::build (1 samples, 0.02%)</title><rect x="68.5659%" y="293" width="0.0241%" height="15" fill="rgb(243,106,26)" fg:x="2840" fg:w="1"/><text x="68.8159%" y="303.50"></text></g><g><title>hx`regex::compile::Compiler::compile (1 samples, 0.02%)</title><rect x="68.5659%" y="277" width="0.0241%" height="15" fill="rgb(206,45,38)" fg:x="2840" fg:w="1"/><text x="68.8159%" y="287.50"></text></g><g><title>hx`regex::compile::Compiler::c (1 samples, 0.02%)</title><rect x="68.5659%" y="261" width="0.0241%" height="15" fill="rgb(226,6,15)" fg:x="2840" fg:w="1"/><text x="68.8159%" y="271.50"></text></g><g><title>hx`regex::compile::Compiler::c_repeat_one_or_more (1 samples, 0.02%)</title><rect x="68.5659%" y="245" width="0.0241%" height="15" fill="rgb(232,22,54)" fg:x="2840" fg:w="1"/><text x="68.8159%" y="255.50"></text></g><g><title>hx`regex::compile::Compiler::c_class (1 samples, 0.02%)</title><rect x="68.5659%" y="229" width="0.0241%" height="15" fill="rgb(229,222,32)" fg:x="2840" fg:w="1"/><text x="68.8159%" y="239.50"></text></g><g><title>hx`regex::compile::CompileClass::c_utf8_seq (1 samples, 0.02%)</title><rect x="68.5659%" y="213" width="0.0241%" height="15" fill="rgb(228,62,29)" fg:x="2840" fg:w="1"/><text x="68.8159%" y="223.50"></text></g><g><title>hx`regex::compile::SuffixCache::get (1 samples, 0.02%)</title><rect x="68.5659%" y="197" width="0.0241%" height="15" fill="rgb(251,103,34)" fg:x="2840" fg:w="1"/><text x="68.8159%" y="207.50"></text></g><g><title>hx`ignore::types::TypesBuilder::build (1 samples, 0.02%)</title><rect x="68.5901%" y="357" width="0.0241%" height="15" fill="rgb(233,12,30)" fg:x="2841" fg:w="1"/><text x="68.8401%" y="367.50"></text></g><g><title>hx`globset::GlobSetBuilder::build (1 samples, 0.02%)</title><rect x="68.5901%" y="341" width="0.0241%" height="15" fill="rgb(238,52,0)" fg:x="2841" fg:w="1"/><text x="68.8401%" y="351.50"></text></g><g><title>hx`regex::re_set::bytes::RegexSet::new (1 samples, 0.02%)</title><rect x="68.5901%" y="325" width="0.0241%" height="15" fill="rgb(223,98,5)" fg:x="2841" fg:w="1"/><text x="68.8401%" y="335.50"></text></g><g><title>hx`regex::exec::ExecBuilder::build (1 samples, 0.02%)</title><rect x="68.5901%" y="309" width="0.0241%" height="15" fill="rgb(228,75,37)" fg:x="2841" fg:w="1"/><text x="68.8401%" y="319.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (1 samples, 0.02%)</title><rect x="68.5901%" y="293" width="0.0241%" height="15" fill="rgb(205,115,49)" fg:x="2841" fg:w="1"/><text x="68.8401%" y="303.50"></text></g><g><title>hx`&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="68.5901%" y="277" width="0.0241%" height="15" fill="rgb(250,154,43)" fg:x="2841" fg:w="1"/><text x="68.8401%" y="287.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="68.5901%" y="261" width="0.0241%" height="15" fill="rgb(226,43,29)" fg:x="2841" fg:w="1"/><text x="68.8401%" y="271.50"></text></g><g><title>hx`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="68.5901%" y="245" width="0.0241%" height="15" fill="rgb(249,228,39)" fg:x="2841" fg:w="1"/><text x="68.8401%" y="255.50"></text></g><g><title>hx`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="68.5901%" y="229" width="0.0241%" height="15" fill="rgb(216,79,43)" fg:x="2841" fg:w="1"/><text x="68.8401%" y="239.50"></text></g><g><title>hx`_mi_heap_realloc_zero (1 samples, 0.02%)</title><rect x="68.5901%" y="213" width="0.0241%" height="15" fill="rgb(228,95,12)" fg:x="2841" fg:w="1"/><text x="68.8401%" y="223.50"></text></g><g><title>hx`_mi_malloc_generic (1 samples, 0.02%)</title><rect x="68.5901%" y="197" width="0.0241%" height="15" fill="rgb(249,221,15)" fg:x="2841" fg:w="1"/><text x="68.8401%" y="207.50"></text></g><g><title>hx`mi_find_page (1 samples, 0.02%)</title><rect x="68.5901%" y="181" width="0.0241%" height="15" fill="rgb(233,34,13)" fg:x="2841" fg:w="1"/><text x="68.8401%" y="191.50"></text></g><g><title>hx`mi_page_free_list_extend (1 samples, 0.02%)</title><rect x="68.5901%" y="165" width="0.0241%" height="15" fill="rgb(214,103,39)" fg:x="2841" fg:w="1"/><text x="68.8401%" y="175.50"></text></g><g><title>hx`helix_term::ui::file_picker (64 samples, 1.55%)</title><rect x="67.0932%" y="373" width="1.5451%" height="15" fill="rgb(251,126,39)" fg:x="2779" fg:w="64"/><text x="67.3432%" y="383.50"></text></g><g><title>hx`ignore::walk::WalkBuilder::build (1 samples, 0.02%)</title><rect x="68.6142%" y="357" width="0.0241%" height="15" fill="rgb(214,216,36)" fg:x="2842" fg:w="1"/><text x="68.8642%" y="367.50"></text></g><g><title>hx`ignore::dir::IgnoreBuilder::build (1 samples, 0.02%)</title><rect x="68.6142%" y="341" width="0.0241%" height="15" fill="rgb(220,221,8)" fg:x="2842" fg:w="1"/><text x="68.8642%" y="351.50"></text></g><g><title>hx`ignore::gitignore::GitignoreBuilder::build_global (1 samples, 0.02%)</title><rect x="68.6142%" y="325" width="0.0241%" height="15" fill="rgb(240,216,3)" fg:x="2842" fg:w="1"/><text x="68.8642%" y="335.50"></text></g><g><title>hx`ignore::gitignore::parse_excludes_file (1 samples, 0.02%)</title><rect x="68.6142%" y="309" width="0.0241%" height="15" fill="rgb(232,218,17)" fg:x="2842" fg:w="1"/><text x="68.8642%" y="319.50"></text></g><g><title>hx`std::sync::once::Once::call_inner (1 samples, 0.02%)</title><rect x="68.6142%" y="293" width="0.0241%" height="15" fill="rgb(229,163,45)" fg:x="2842" fg:w="1"/><text x="68.8642%" y="303.50"></text></g><g><title>hx`std::sync::once::Once::call_once::_{{closure}} (1 samples, 0.02%)</title><rect x="68.6142%" y="277" width="0.0241%" height="15" fill="rgb(231,110,42)" fg:x="2842" fg:w="1"/><text x="68.8642%" y="287.50"></text></g><g><title>hx`regex::re_bytes::Regex::new (1 samples, 0.02%)</title><rect x="68.6142%" y="261" width="0.0241%" height="15" fill="rgb(208,170,48)" fg:x="2842" fg:w="1"/><text x="68.8642%" y="271.50"></text></g><g><title>hx`regex::exec::ExecBuilder::build (1 samples, 0.02%)</title><rect x="68.6142%" y="245" width="0.0241%" height="15" fill="rgb(239,116,25)" fg:x="2842" fg:w="1"/><text x="68.8642%" y="255.50"></text></g><g><title>hx`regex_syntax::ast::visitor::visit (1 samples, 0.02%)</title><rect x="68.6142%" y="229" width="0.0241%" height="15" fill="rgb(219,200,50)" fg:x="2842" fg:w="1"/><text x="68.8642%" y="239.50"></text></g><g><title>hx`&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (1 samples, 0.02%)</title><rect x="68.6142%" y="213" width="0.0241%" height="15" fill="rgb(245,200,0)" fg:x="2842" fg:w="1"/><text x="68.8642%" y="223.50"></text></g><g><title>hx`helix_term::commands::file_picker (65 samples, 1.57%)</title><rect x="67.0932%" y="389" width="1.5693%" height="15" fill="rgb(245,119,33)" fg:x="2779" fg:w="65"/><text x="67.3432%" y="399.50"></text></g><g><title>hx`ignore::types::TypesBuilder::add (1 samples, 0.02%)</title><rect x="68.6383%" y="373" width="0.0241%" height="15" fill="rgb(231,125,12)" fg:x="2843" fg:w="1"/><text x="68.8883%" y="383.50"></text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::advance_grapheme (1 samples, 0.02%)</title><rect x="68.6625%" y="293" width="0.0241%" height="15" fill="rgb(216,96,41)" fg:x="2844" fg:w="1"/><text x="68.9125%" y="303.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::next_boundary (1 samples, 0.02%)</title><rect x="68.6625%" y="277" width="0.0241%" height="15" fill="rgb(248,43,45)" fg:x="2844" fg:w="1"/><text x="68.9125%" y="287.50"></text></g><g><title>hx`&lt;helix_core::doc_formatter::DocumentFormatter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="68.6625%" y="309" width="0.0483%" height="15" fill="rgb(217,222,7)" fg:x="2844" fg:w="2"/><text x="68.9125%" y="319.50"></text></g><g><title>hx`helix_core::graphemes::Grapheme::new (1 samples, 0.02%)</title><rect x="68.6866%" y="293" width="0.0241%" height="15" fill="rgb(233,28,6)" fg:x="2845" fg:w="1"/><text x="68.9366%" y="303.50"></text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::advance_grapheme (1 samples, 0.02%)</title><rect x="68.7108%" y="309" width="0.0241%" height="15" fill="rgb(231,218,15)" fg:x="2846" fg:w="1"/><text x="68.9608%" y="319.50"></text></g><g><title>hx`helix_core::graphemes::RopeGraphemes::new (1 samples, 0.02%)</title><rect x="68.7349%" y="293" width="0.0241%" height="15" fill="rgb(226,171,48)" fg:x="2847" fg:w="1"/><text x="68.9849%" y="303.50"></text></g><g><title>hx`helix_term::commands::goto_buffer (5 samples, 0.12%)</title><rect x="68.6625%" y="389" width="0.1207%" height="15" fill="rgb(235,201,9)" fg:x="2844" fg:w="5"/><text x="68.9125%" y="399.50"></text></g><g><title>hx`helix_view::editor::Editor::switch (5 samples, 0.12%)</title><rect x="68.6625%" y="373" width="0.1207%" height="15" fill="rgb(217,80,15)" fg:x="2844" fg:w="5"/><text x="68.9125%" y="383.50"></text></g><g><title>hx`helix_view::align_view (5 samples, 0.12%)</title><rect x="68.6625%" y="357" width="0.1207%" height="15" fill="rgb(219,152,8)" fg:x="2844" fg:w="5"/><text x="68.9125%" y="367.50"></text></g><g><title>hx`helix_core::position::char_idx_at_visual_offset (5 samples, 0.12%)</title><rect x="68.6625%" y="341" width="0.1207%" height="15" fill="rgb(243,107,38)" fg:x="2844" fg:w="5"/><text x="68.9125%" y="351.50"></text></g><g><title>hx`helix_core::position::visual_offset_from_block (5 samples, 0.12%)</title><rect x="68.6625%" y="325" width="0.1207%" height="15" fill="rgb(231,17,5)" fg:x="2844" fg:w="5"/><text x="68.9125%" y="335.50"></text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::new_at_prev_checkpoint (2 samples, 0.05%)</title><rect x="68.7349%" y="309" width="0.0483%" height="15" fill="rgb(209,25,54)" fg:x="2847" fg:w="2"/><text x="68.9849%" y="319.50"></text></g><g><title>hx`str_indices::chars::to_byte_idx (1 samples, 0.02%)</title><rect x="68.7591%" y="293" width="0.0241%" height="15" fill="rgb(219,0,2)" fg:x="2848" fg:w="1"/><text x="69.0091%" y="303.50"></text></g><g><title>hx`helix_term::commands::goto_next_paragraph (1 samples, 0.02%)</title><rect x="68.7832%" y="389" width="0.0241%" height="15" fill="rgb(246,9,5)" fg:x="2849" fg:w="1"/><text x="69.0332%" y="399.50"></text></g><g><title>hx`helix_term::commands::goto_para_impl::_{{closure}} (1 samples, 0.02%)</title><rect x="68.7832%" y="373" width="0.0241%" height="15" fill="rgb(226,159,4)" fg:x="2849" fg:w="1"/><text x="69.0332%" y="383.50"></text></g><g><title>hx`helix_core::movement::move_next_paragraph (1 samples, 0.02%)</title><rect x="68.7832%" y="357" width="0.0241%" height="15" fill="rgb(219,175,34)" fg:x="2849" fg:w="1"/><text x="69.0332%" y="367.50"></text></g><g><title>hx`ropey::slice::RopeSlice::line (1 samples, 0.02%)</title><rect x="68.7832%" y="341" width="0.0241%" height="15" fill="rgb(236,10,46)" fg:x="2849" fg:w="1"/><text x="69.0332%" y="351.50"></text></g><g><title>hx`helix_core::movement::move_horizontally (1 samples, 0.02%)</title><rect x="68.8073%" y="373" width="0.0241%" height="15" fill="rgb(240,211,16)" fg:x="2850" fg:w="1"/><text x="69.0573%" y="383.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::next_boundary (1 samples, 0.02%)</title><rect x="68.8073%" y="357" width="0.0241%" height="15" fill="rgb(205,3,43)" fg:x="2850" fg:w="1"/><text x="69.0573%" y="367.50"></text></g><g><title>hx`helix_core::movement::move_vertically_visual (1 samples, 0.02%)</title><rect x="68.8315%" y="373" width="0.0241%" height="15" fill="rgb(245,7,22)" fg:x="2851" fg:w="1"/><text x="69.0815%" y="383.50"></text></g><g><title>hx`helix_core::movement::move_vertically (1 samples, 0.02%)</title><rect x="68.8315%" y="357" width="0.0241%" height="15" fill="rgb(239,132,32)" fg:x="2851" fg:w="1"/><text x="69.0815%" y="367.50"></text></g><g><title>hx`helix_core::position::visual_offset_from_block (1 samples, 0.02%)</title><rect x="68.8315%" y="341" width="0.0241%" height="15" fill="rgb(228,202,34)" fg:x="2851" fg:w="1"/><text x="69.0815%" y="351.50"></text></g><g><title>hx`&lt;helix_core::doc_formatter::DocumentFormatter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="68.8315%" y="325" width="0.0241%" height="15" fill="rgb(254,200,22)" fg:x="2851" fg:w="1"/><text x="69.0815%" y="335.50"></text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::advance_grapheme (1 samples, 0.02%)</title><rect x="68.8315%" y="309" width="0.0241%" height="15" fill="rgb(219,10,39)" fg:x="2851" fg:w="1"/><text x="69.0815%" y="319.50"></text></g><g><title>hx`&lt;helix_core::graphemes::RopeGraphemes as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="68.8315%" y="293" width="0.0241%" height="15" fill="rgb(226,210,39)" fg:x="2851" fg:w="1"/><text x="69.0815%" y="303.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::next_boundary (1 samples, 0.02%)</title><rect x="68.8315%" y="277" width="0.0241%" height="15" fill="rgb(208,219,16)" fg:x="2851" fg:w="1"/><text x="69.0815%" y="287.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::is_boundary (1 samples, 0.02%)</title><rect x="68.8315%" y="261" width="0.0241%" height="15" fill="rgb(216,158,51)" fg:x="2851" fg:w="1"/><text x="69.0815%" y="271.50"></text></g><g><title>hx`helix_term::commands::move_impl (3 samples, 0.07%)</title><rect x="68.8073%" y="389" width="0.0724%" height="15" fill="rgb(233,14,44)" fg:x="2850" fg:w="3"/><text x="69.0573%" y="399.50"></text></g><g><title>hx`helix_view::document::Document::text_format (1 samples, 0.02%)</title><rect x="68.8556%" y="373" width="0.0241%" height="15" fill="rgb(237,97,39)" fg:x="2852" fg:w="1"/><text x="69.1056%" y="383.50"></text></g><g><title>hx`helix_term::commands::move_prev_word_start (1 samples, 0.02%)</title><rect x="68.8798%" y="389" width="0.0241%" height="15" fill="rgb(218,198,43)" fg:x="2853" fg:w="1"/><text x="69.1298%" y="399.50"></text></g><g><title>hx`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="68.8798%" y="373" width="0.0241%" height="15" fill="rgb(231,104,20)" fg:x="2853" fg:w="1"/><text x="69.1298%" y="383.50"></text></g><g><title>hx`helix_core::indent::treesitter_indent_for_pos (1 samples, 0.02%)</title><rect x="68.9039%" y="325" width="0.0241%" height="15" fill="rgb(254,36,13)" fg:x="2854" fg:w="1"/><text x="69.1539%" y="335.50"></text></g><g><title>hx`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="68.9039%" y="309" width="0.0241%" height="15" fill="rgb(248,14,50)" fg:x="2854" fg:w="1"/><text x="69.1539%" y="319.50"></text></g><g><title>hx`hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1 samples, 0.02%)</title><rect x="68.9039%" y="293" width="0.0241%" height="15" fill="rgb(217,107,29)" fg:x="2854" fg:w="1"/><text x="69.1539%" y="303.50"></text></g><g><title>hx`helix_core::transaction::Transaction::change_by_selection (4 samples, 0.10%)</title><rect x="68.9039%" y="373" width="0.0966%" height="15" fill="rgb(251,169,33)" fg:x="2854" fg:w="4"/><text x="69.1539%" y="383.50"></text></g><g><title>hx`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.10%)</title><rect x="68.9039%" y="357" width="0.0966%" height="15" fill="rgb(217,108,32)" fg:x="2854" fg:w="4"/><text x="69.1539%" y="367.50"></text></g><g><title>hx`helix_core::indent::indent_for_newline (4 samples, 0.10%)</title><rect x="68.9039%" y="341" width="0.0966%" height="15" fill="rgb(219,66,42)" fg:x="2854" fg:w="4"/><text x="69.1539%" y="351.50"></text></g><g><title>hx`once_cell::imp::OnceCell&lt;T&gt;::initialize (3 samples, 0.07%)</title><rect x="68.9281%" y="325" width="0.0724%" height="15" fill="rgb(206,180,7)" fg:x="2855" fg:w="3"/><text x="69.1781%" y="335.50"></text></g><g><title>hx`once_cell::imp::initialize_or_wait (3 samples, 0.07%)</title><rect x="68.9281%" y="309" width="0.0724%" height="15" fill="rgb(208,226,31)" fg:x="2855" fg:w="3"/><text x="69.1781%" y="319.50"></text></g><g><title>hx`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (3 samples, 0.07%)</title><rect x="68.9281%" y="293" width="0.0724%" height="15" fill="rgb(218,26,49)" fg:x="2855" fg:w="3"/><text x="69.1781%" y="303.50"></text></g><g><title>hx`helix_core::syntax::LanguageConfiguration::load_query (3 samples, 0.07%)</title><rect x="68.9281%" y="277" width="0.0724%" height="15" fill="rgb(233,197,48)" fg:x="2855" fg:w="3"/><text x="69.1781%" y="287.50"></text></g><g><title>hx`tree_sitter::Query::new (3 samples, 0.07%)</title><rect x="68.9281%" y="261" width="0.0724%" height="15" fill="rgb(252,181,51)" fg:x="2855" fg:w="3"/><text x="69.1781%" y="271.50"></text></g><g><title>hx`ts_query_new (3 samples, 0.07%)</title><rect x="68.9281%" y="245" width="0.0724%" height="15" fill="rgb(253,90,19)" fg:x="2855" fg:w="3"/><text x="69.1781%" y="255.50"></text></g><g><title>hx`regex::re_unicode::Regex::find_at (1 samples, 0.02%)</title><rect x="69.0246%" y="309" width="0.0241%" height="15" fill="rgb(215,171,30)" fg:x="2859" fg:w="1"/><text x="69.2746%" y="319.50"></text></g><g><title>hx`regex::dfa::Fsm::prefix_at (1 samples, 0.02%)</title><rect x="69.0246%" y="293" width="0.0241%" height="15" fill="rgb(214,222,9)" fg:x="2859" fg:w="1"/><text x="69.2746%" y="303.50"></text></g><g><title>hx`aho_corasick::ahocorasick::AhoCorasick&lt;S&gt;::find (1 samples, 0.02%)</title><rect x="69.0246%" y="277" width="0.0241%" height="15" fill="rgb(223,3,22)" fg:x="2859" fg:w="1"/><text x="69.2746%" y="287.50"></text></g><g><title>hx`aho_corasick::automaton::Automaton::leftmost_find_at_no_state (1 samples, 0.02%)</title><rect x="69.0246%" y="261" width="0.0241%" height="15" fill="rgb(225,196,46)" fg:x="2859" fg:w="1"/><text x="69.2746%" y="271.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (5 samples, 0.12%)</title><rect x="69.2178%" y="277" width="0.1207%" height="15" fill="rgb(209,110,37)" fg:x="2867" fg:w="5"/><text x="69.4678%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_goto_first_child (1 samples, 0.02%)</title><rect x="69.3385%" y="277" width="0.0241%" height="15" fill="rgb(249,89,12)" fg:x="2872" fg:w="1"/><text x="69.5885%" y="287.50"></text></g><g><title>hx`ts_query_cursor__advance (16 samples, 0.39%)</title><rect x="69.0488%" y="293" width="0.3863%" height="15" fill="rgb(226,27,33)" fg:x="2860" fg:w="16"/><text x="69.2988%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (3 samples, 0.07%)</title><rect x="69.3626%" y="277" width="0.0724%" height="15" fill="rgb(213,82,22)" fg:x="2873" fg:w="3"/><text x="69.6126%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_goto_first_child (1 samples, 0.02%)</title><rect x="69.4109%" y="261" width="0.0241%" height="15" fill="rgb(248,140,0)" fg:x="2875" fg:w="1"/><text x="69.6609%" y="271.50"></text></g><g><title>hx`ts_tree_cursor_current_status (7 samples, 0.17%)</title><rect x="69.4351%" y="293" width="0.1690%" height="15" fill="rgb(228,106,3)" fg:x="2876" fg:w="7"/><text x="69.6851%" y="303.50"></text></g><g><title>hx`helix_term::commands::open (31 samples, 0.75%)</title><rect x="68.9039%" y="389" width="0.7484%" height="15" fill="rgb(209,23,37)" fg:x="2854" fg:w="31"/><text x="69.1539%" y="399.50"></text></g><g><title>hx`helix_view::document::Document::apply (27 samples, 0.65%)</title><rect x="69.0005%" y="373" width="0.6519%" height="15" fill="rgb(241,93,50)" fg:x="2858" fg:w="27"/><text x="69.2505%" y="383.50"></text></g><g><title>hx`helix_view::document::Document::apply_impl (27 samples, 0.65%)</title><rect x="69.0005%" y="357" width="0.6519%" height="15" fill="rgb(253,46,43)" fg:x="2858" fg:w="27"/><text x="69.2505%" y="367.50"></text></g><g><title>hx`helix_core::syntax::Syntax::update (27 samples, 0.65%)</title><rect x="69.0005%" y="341" width="0.6519%" height="15" fill="rgb(226,206,43)" fg:x="2858" fg:w="27"/><text x="69.2505%" y="351.50"></text></g><g><title>hx`std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.65%)</title><rect x="69.0005%" y="325" width="0.6519%" height="15" fill="rgb(217,54,7)" fg:x="2858" fg:w="27"/><text x="69.2505%" y="335.50"></text></g><g><title>hx`ts_query_cursor_next_match (25 samples, 0.60%)</title><rect x="69.0488%" y="309" width="0.6036%" height="15" fill="rgb(223,5,52)" fg:x="2860" fg:w="25"/><text x="69.2988%" y="319.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (2 samples, 0.05%)</title><rect x="69.6041%" y="293" width="0.0483%" height="15" fill="rgb(206,52,46)" fg:x="2883" fg:w="2"/><text x="69.8541%" y="303.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="69.6523%" y="373" width="0.0241%" height="15" fill="rgb(253,136,11)" fg:x="2885" fg:w="1"/><text x="69.9023%" y="383.50"></text></g><g><title>hx`helix_term::commands::select_textobject (2 samples, 0.05%)</title><rect x="69.6523%" y="389" width="0.0483%" height="15" fill="rgb(208,106,33)" fg:x="2885" fg:w="2"/><text x="69.9023%" y="399.50"></text></g><g><title>hx`helix_view::info::Info::new (1 samples, 0.02%)</title><rect x="69.6765%" y="373" width="0.0241%" height="15" fill="rgb(206,54,4)" fg:x="2886" fg:w="1"/><text x="69.9265%" y="383.50"></text></g><g><title>hx`core::fmt::write (1 samples, 0.02%)</title><rect x="69.6765%" y="357" width="0.0241%" height="15" fill="rgb(213,3,15)" fg:x="2886" fg:w="1"/><text x="69.9265%" y="367.50"></text></g><g><title>hx`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="69.6765%" y="341" width="0.0241%" height="15" fill="rgb(252,211,39)" fg:x="2886" fg:w="1"/><text x="69.9265%" y="351.50"></text></g><g><title>hx`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="69.6765%" y="325" width="0.0241%" height="15" fill="rgb(223,6,36)" fg:x="2886" fg:w="1"/><text x="69.9265%" y="335.50"></text></g><g><title>hx`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="69.6765%" y="309" width="0.0241%" height="15" fill="rgb(252,169,45)" fg:x="2886" fg:w="1"/><text x="69.9265%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="69.6765%" y="293" width="0.0241%" height="15" fill="rgb(212,48,26)" fg:x="2886" fg:w="1"/><text x="69.9265%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (1 samples, 0.02%)</title><rect x="69.7731%" y="277" width="0.0241%" height="15" fill="rgb(251,102,48)" fg:x="2890" fg:w="1"/><text x="70.0231%" y="287.50"></text></g><g><title>hx`ts_query_cursor__advance (3 samples, 0.07%)</title><rect x="69.7489%" y="293" width="0.0724%" height="15" fill="rgb(243,208,16)" fg:x="2889" fg:w="3"/><text x="69.9989%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (1 samples, 0.02%)</title><rect x="69.7972%" y="277" width="0.0241%" height="15" fill="rgb(219,96,24)" fg:x="2891" fg:w="1"/><text x="70.0472%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (1 samples, 0.02%)</title><rect x="69.7972%" y="261" width="0.0241%" height="15" fill="rgb(219,33,29)" fg:x="2891" fg:w="1"/><text x="70.0472%" y="271.50"></text></g><g><title>hx`ts_query_cursor_next_match (5 samples, 0.12%)</title><rect x="69.7489%" y="309" width="0.1207%" height="15" fill="rgb(223,176,5)" fg:x="2889" fg:w="5"/><text x="69.9989%" y="319.50"></text></g><g><title>hx`ts_tree_cursor_current_status (2 samples, 0.05%)</title><rect x="69.8213%" y="293" width="0.0483%" height="15" fill="rgb(228,140,14)" fg:x="2892" fg:w="2"/><text x="70.0713%" y="303.50"></text></g><g><title>hx`helix_view::document::Document::apply_impl (8 samples, 0.19%)</title><rect x="69.7006%" y="357" width="0.1931%" height="15" fill="rgb(217,179,31)" fg:x="2887" fg:w="8"/><text x="69.9506%" y="367.50"></text></g><g><title>hx`helix_core::syntax::Syntax::update (8 samples, 0.19%)</title><rect x="69.7006%" y="341" width="0.1931%" height="15" fill="rgb(230,9,30)" fg:x="2887" fg:w="8"/><text x="69.9506%" y="351.50"></text></g><g><title>hx`std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.19%)</title><rect x="69.7006%" y="325" width="0.1931%" height="15" fill="rgb(230,136,20)" fg:x="2887" fg:w="8"/><text x="69.9506%" y="335.50"></text></g><g><title>hx`ts_tree_edit (1 samples, 0.02%)</title><rect x="69.8696%" y="309" width="0.0241%" height="15" fill="rgb(215,210,22)" fg:x="2894" fg:w="1"/><text x="70.1196%" y="319.50"></text></g><g><title>hx`ts_subtree_edit (1 samples, 0.02%)</title><rect x="69.8696%" y="293" width="0.0241%" height="15" fill="rgb(218,43,5)" fg:x="2894" fg:w="1"/><text x="70.1196%" y="303.50"></text></g><g><title>hx`ts_malloc_default (1 samples, 0.02%)</title><rect x="69.8696%" y="277" width="0.0241%" height="15" fill="rgb(216,11,5)" fg:x="2894" fg:w="1"/><text x="70.1196%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="69.8696%" y="261" width="0.0241%" height="15" fill="rgb(209,82,29)" fg:x="2894" fg:w="1"/><text x="70.1196%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="69.8696%" y="245" width="0.0241%" height="15" fill="rgb(244,115,12)" fg:x="2894" fg:w="1"/><text x="70.1196%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="69.8696%" y="229" width="0.0241%" height="15" fill="rgb(222,82,18)" fg:x="2894" fg:w="1"/><text x="70.1196%" y="239.50"></text></g><g><title>hx`helix_term::commands::undo (9 samples, 0.22%)</title><rect x="69.7006%" y="389" width="0.2173%" height="15" fill="rgb(249,227,8)" fg:x="2887" fg:w="9"/><text x="69.9506%" y="399.50"></text></g><g><title>hx`helix_view::document::Document::undo_redo_impl (9 samples, 0.22%)</title><rect x="69.7006%" y="373" width="0.2173%" height="15" fill="rgb(253,141,45)" fg:x="2887" fg:w="9"/><text x="69.9506%" y="383.50"></text></g><g><title>hx`helix_view::view::View::sync_changes (1 samples, 0.02%)</title><rect x="69.8938%" y="357" width="0.0241%" height="15" fill="rgb(234,184,4)" fg:x="2895" fg:w="1"/><text x="70.1438%" y="367.50"></text></g><g><title>hx`helix_core::history::History::changes_since (1 samples, 0.02%)</title><rect x="69.8938%" y="341" width="0.0241%" height="15" fill="rgb(218,194,23)" fg:x="2895" fg:w="1"/><text x="70.1438%" y="351.50"></text></g><g><title>hx`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="69.8938%" y="325" width="0.0241%" height="15" fill="rgb(235,66,41)" fg:x="2895" fg:w="1"/><text x="70.1438%" y="335.50"></text></g><g><title>hx`std::process::Child::wait_with_output (2 samples, 0.05%)</title><rect x="69.9421%" y="325" width="0.0483%" height="15" fill="rgb(245,217,1)" fg:x="2897" fg:w="2"/><text x="70.1921%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_sigtramp (2 samples, 0.05%)</title><rect x="69.9421%" y="309" width="0.0483%" height="15" fill="rgb(229,91,1)" fg:x="2897" fg:w="2"/><text x="70.1921%" y="319.50"></text></g><g><title>hx`signal_hook_registry::handler (1 samples, 0.02%)</title><rect x="69.9662%" y="293" width="0.0241%" height="15" fill="rgb(207,101,30)" fg:x="2898" fg:w="1"/><text x="70.2162%" y="303.50"></text></g><g><title>hx`signal_hook_registry::register::_{{closure}} (1 samples, 0.02%)</title><rect x="69.9662%" y="277" width="0.0241%" height="15" fill="rgb(223,82,49)" fg:x="2898" fg:w="1"/><text x="70.2162%" y="287.50"></text></g><g><title>hx`std::sys::unix::process::process_common::Stdio::to_child_stdio (5 samples, 0.12%)</title><rect x="69.9903%" y="309" width="0.1207%" height="15" fill="rgb(218,167,17)" fg:x="2899" fg:w="5"/><text x="70.2403%" y="319.50"></text></g><g><title>hx`std::sys::unix::fs::File::open_c (5 samples, 0.12%)</title><rect x="69.9903%" y="293" width="0.1207%" height="15" fill="rgb(208,103,14)" fg:x="2899" fg:w="5"/><text x="70.2403%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__open (5 samples, 0.12%)</title><rect x="69.9903%" y="277" width="0.1207%" height="15" fill="rgb(238,20,8)" fg:x="2899" fg:w="5"/><text x="70.2403%" y="287.50"></text></g><g><title>libSystem.B.dylib`libSystem_atfork_parent (2 samples, 0.05%)</title><rect x="70.1111%" y="293" width="0.0483%" height="15" fill="rgb(218,80,54)" fg:x="2904" fg:w="2"/><text x="70.3611%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_fork_parent (2 samples, 0.05%)</title><rect x="70.1111%" y="277" width="0.0483%" height="15" fill="rgb(240,144,17)" fg:x="2904" fg:w="2"/><text x="70.3611%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_force_unlock (1 samples, 0.02%)</title><rect x="70.1352%" y="261" width="0.0241%" height="15" fill="rgb(245,27,50)" fg:x="2905" fg:w="1"/><text x="70.3852%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_fork_prepare (1 samples, 0.02%)</title><rect x="70.1593%" y="277" width="0.0241%" height="15" fill="rgb(251,51,7)" fg:x="2906" fg:w="1"/><text x="70.4093%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_force_lock (1 samples, 0.02%)</title><rect x="70.1593%" y="261" width="0.0241%" height="15" fill="rgb(245,217,29)" fg:x="2906" fg:w="1"/><text x="70.4093%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_atfork_prepare_handlers (2 samples, 0.05%)</title><rect x="70.1835%" y="277" width="0.0483%" height="15" fill="rgb(221,176,29)" fg:x="2907" fg:w="2"/><text x="70.4335%" y="287.50"></text></g><g><title>CoreFoundation`__cf_atfork_prepare (2 samples, 0.05%)</title><rect x="70.1835%" y="261" width="0.0483%" height="15" fill="rgb(212,180,24)" fg:x="2907" fg:w="2"/><text x="70.4335%" y="271.50"></text></g><g><title>libSystem.B.dylib`libSystem_atfork_prepare (4 samples, 0.10%)</title><rect x="70.1593%" y="293" width="0.0966%" height="15" fill="rgb(254,24,2)" fg:x="2906" fg:w="4"/><text x="70.4093%" y="303.50"></text></g><g><title>libxpc.dylib`xpc_atfork_prepare (1 samples, 0.02%)</title><rect x="70.2318%" y="277" width="0.0241%" height="15" fill="rgb(230,100,2)" fg:x="2909" fg:w="1"/><text x="70.4818%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mach_ports_register (1 samples, 0.02%)</title><rect x="70.2318%" y="261" width="0.0241%" height="15" fill="rgb(219,142,25)" fg:x="2909" fg:w="1"/><text x="70.4818%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.02%)</title><rect x="70.2318%" y="245" width="0.0241%" height="15" fill="rgb(240,73,43)" fg:x="2909" fg:w="1"/><text x="70.4818%" y="255.50"></text></g><g><title>libobjc.A.dylib`_objc_atfork_prepare (1 samples, 0.02%)</title><rect x="70.2559%" y="293" width="0.0241%" height="15" fill="rgb(214,114,15)" fg:x="2910" fg:w="1"/><text x="70.5059%" y="303.50"></text></g><g><title>hx`std::sys::unix::process::process_inner::_&lt;impl std::sys::unix::process::process_common::Command&gt;::spawn (110 samples, 2.66%)</title><rect x="69.9903%" y="325" width="2.6557%" height="15" fill="rgb(207,130,4)" fg:x="2899" fg:w="110"/><text x="70.2403%" y="335.50">hx..</text></g><g><title>libsystem_c.dylib`fork (105 samples, 2.54%)</title><rect x="70.1111%" y="309" width="2.5350%" height="15" fill="rgb(221,25,40)" fg:x="2904" fg:w="105"/><text x="70.3611%" y="319.50">li..</text></g><g><title>libsystem_kernel.dylib`__fork (98 samples, 2.37%)</title><rect x="70.2801%" y="293" width="2.3660%" height="15" fill="rgb(241,184,7)" fg:x="2911" fg:w="98"/><text x="70.5301%" y="303.50">li..</text></g><g><title>hx`&lt;helix_view::clipboard::provider::command::Provider as helix_view::clipboard::ClipboardProvider&gt;::set_contents (113 samples, 2.73%)</title><rect x="69.9421%" y="357" width="2.7282%" height="15" fill="rgb(235,159,4)" fg:x="2897" fg:w="113"/><text x="70.1921%" y="367.50">hx..</text></g><g><title>hx`helix_view::clipboard::provider::command::Config::execute (113 samples, 2.73%)</title><rect x="69.9421%" y="341" width="2.7282%" height="15" fill="rgb(214,87,48)" fg:x="2897" fg:w="113"/><text x="70.1921%" y="351.50">hx..</text></g><g><title>libsystem_kernel.dylib`__wait4 (1 samples, 0.02%)</title><rect x="72.6461%" y="325" width="0.0241%" height="15" fill="rgb(246,198,24)" fg:x="3009" fg:w="1"/><text x="72.8961%" y="335.50"></text></g><g><title>hx`helix_term::commands::yank_main_selection_to_clipboard (115 samples, 2.78%)</title><rect x="69.9179%" y="389" width="2.7764%" height="15" fill="rgb(209,66,40)" fg:x="2896" fg:w="115"/><text x="70.1679%" y="399.50">hx..</text></g><g><title>hx`helix_term::commands::yank_main_selection_to_clipboard_impl (115 samples, 2.78%)</title><rect x="69.9179%" y="373" width="2.7764%" height="15" fill="rgb(233,147,39)" fg:x="2896" fg:w="115"/><text x="70.1679%" y="383.50">hx..</text></g><g><title>hx`ropey::rope::Rope::slice (1 samples, 0.02%)</title><rect x="72.6702%" y="357" width="0.0241%" height="15" fill="rgb(231,145,52)" fg:x="3010" fg:w="1"/><text x="72.9202%" y="367.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::handle_keymap_event (300 samples, 7.24%)</title><rect x="65.4756%" y="421" width="7.2429%" height="15" fill="rgb(206,20,26)" fg:x="2712" fg:w="300"/><text x="65.7256%" y="431.50">hx`helix_t..</text></g><g><title>hx`helix_term::ui::editor::EditorView::handle_keymap_event::_{{closure}} (297 samples, 7.17%)</title><rect x="65.5480%" y="405" width="7.1704%" height="15" fill="rgb(238,220,4)" fg:x="2715" fg:w="297"/><text x="65.7980%" y="415.50">hx`helix_t..</text></g><g><title>hx`helix_view::editor::Editor::focus (1 samples, 0.02%)</title><rect x="72.6944%" y="389" width="0.0241%" height="15" fill="rgb(252,195,42)" fg:x="3011" fg:w="1"/><text x="72.9444%" y="399.50"></text></g><g><title>hx`helix_view::editor::Editor::ensure_cursor_in_view (1 samples, 0.02%)</title><rect x="72.6944%" y="373" width="0.0241%" height="15" fill="rgb(209,10,6)" fg:x="3011" fg:w="1"/><text x="72.9444%" y="383.50"></text></g><g><title>hx`helix_view::view::View::offset_coords_to_in_view_center (1 samples, 0.02%)</title><rect x="72.6944%" y="357" width="0.0241%" height="15" fill="rgb(229,3,52)" fg:x="3011" fg:w="1"/><text x="72.9444%" y="367.50"></text></g><g><title>hx`helix_core::position::char_idx_at_visual_offset (1 samples, 0.02%)</title><rect x="72.6944%" y="341" width="0.0241%" height="15" fill="rgb(253,49,37)" fg:x="3011" fg:w="1"/><text x="72.9444%" y="351.50"></text></g><g><title>hx`helix_core::position::visual_offset_from_block (1 samples, 0.02%)</title><rect x="72.6944%" y="325" width="0.0241%" height="15" fill="rgb(240,103,49)" fg:x="3011" fg:w="1"/><text x="72.9444%" y="335.50"></text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::new_at_prev_checkpoint (1 samples, 0.02%)</title><rect x="72.6944%" y="309" width="0.0241%" height="15" fill="rgb(250,182,30)" fg:x="3011" fg:w="1"/><text x="72.9444%" y="319.50"></text></g><g><title>hx`ropey::slice::RopeSlice::get_chunk_at_line_break (1 samples, 0.02%)</title><rect x="72.6944%" y="293" width="0.0241%" height="15" fill="rgb(248,8,30)" fg:x="3011" fg:w="1"/><text x="72.9444%" y="303.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_line_break (1 samples, 0.02%)</title><rect x="72.6944%" y="277" width="0.0241%" height="15" fill="rgb(237,120,30)" fg:x="3011" fg:w="1"/><text x="72.9444%" y="287.50"></text></g><g><title>hx`&lt;arc_swap::access::DynGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="72.7426%" y="389" width="0.0241%" height="15" fill="rgb(221,146,34)" fg:x="3013" fg:w="1"/><text x="72.9926%" y="399.50"></text></g><g><title>hx`helix_core::transaction::ChangeSet::compose (1 samples, 0.02%)</title><rect x="72.7668%" y="373" width="0.0241%" height="15" fill="rgb(242,55,13)" fg:x="3014" fg:w="1"/><text x="73.0168%" y="383.50"></text></g><g><title>hx`mi_free (1 samples, 0.02%)</title><rect x="72.8151%" y="341" width="0.0241%" height="15" fill="rgb(242,112,31)" fg:x="3016" fg:w="1"/><text x="73.0651%" y="351.50"></text></g><g><title>hx`regex::re_unicode::Regex::find_at (5 samples, 0.12%)</title><rect x="72.8392%" y="341" width="0.1207%" height="15" fill="rgb(249,192,27)" fg:x="3017" fg:w="5"/><text x="73.0892%" y="351.50"></text></g><g><title>hx`_mi_heap_realloc_zero (1 samples, 0.02%)</title><rect x="73.0806%" y="293" width="0.0241%" height="15" fill="rgb(208,204,44)" fg:x="3027" fg:w="1"/><text x="73.3306%" y="303.50"></text></g><g><title>hx`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (2 samples, 0.05%)</title><rect x="73.0806%" y="325" width="0.0483%" height="15" fill="rgb(208,93,54)" fg:x="3027" fg:w="2"/><text x="73.3306%" y="335.50"></text></g><g><title>hx`alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="73.0806%" y="309" width="0.0483%" height="15" fill="rgb(242,1,31)" fg:x="3027" fg:w="2"/><text x="73.3306%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="73.1048%" y="293" width="0.0241%" height="15" fill="rgb(241,83,25)" fg:x="3028" fg:w="1"/><text x="73.3548%" y="303.50"></text></g><g><title>hx`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="73.1289%" y="325" width="0.0241%" height="15" fill="rgb(205,169,50)" fg:x="3029" fg:w="1"/><text x="73.3789%" y="335.50"></text></g><g><title>hx`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="73.1289%" y="309" width="0.0241%" height="15" fill="rgb(239,186,37)" fg:x="3029" fg:w="1"/><text x="73.3789%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="73.1289%" y="293" width="0.0241%" height="15" fill="rgb(205,221,10)" fg:x="3029" fg:w="1"/><text x="73.3789%" y="303.50"></text></g><g><title>hx`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="73.1531%" y="325" width="0.0241%" height="15" fill="rgb(218,196,15)" fg:x="3030" fg:w="1"/><text x="73.4031%" y="335.50"></text></g><g><title>hx`ts_lexer_start (1 samples, 0.02%)</title><rect x="73.2979%" y="293" width="0.0241%" height="15" fill="rgb(218,196,35)" fg:x="3036" fg:w="1"/><text x="73.5479%" y="303.50"></text></g><g><title>hx`tree_sitter::Parser::parse_with::read (1 samples, 0.02%)</title><rect x="73.2979%" y="277" width="0.0241%" height="15" fill="rgb(233,63,24)" fg:x="3036" fg:w="1"/><text x="73.5479%" y="287.50"></text></g><g><title>hx`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="73.2979%" y="261" width="0.0241%" height="15" fill="rgb(225,8,4)" fg:x="3036" fg:w="1"/><text x="73.5479%" y="271.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_byte (1 samples, 0.02%)</title><rect x="73.2979%" y="245" width="0.0241%" height="15" fill="rgb(234,105,35)" fg:x="3036" fg:w="1"/><text x="73.5479%" y="255.50"></text></g><g><title>hx`ts_parser__do_all_potential_reductions (2 samples, 0.05%)</title><rect x="73.3221%" y="293" width="0.0483%" height="15" fill="rgb(236,21,32)" fg:x="3037" fg:w="2"/><text x="73.5721%" y="303.50"></text></g><g><title>hx`ts_parser__recover (1 samples, 0.02%)</title><rect x="73.3704%" y="293" width="0.0241%" height="15" fill="rgb(228,109,6)" fg:x="3039" fg:w="1"/><text x="73.6204%" y="303.50"></text></g><g><title>hx`helix_core::syntax::LanguageLayer::parse (10 samples, 0.24%)</title><rect x="73.1772%" y="325" width="0.2414%" height="15" fill="rgb(229,215,31)" fg:x="3031" fg:w="10"/><text x="73.4272%" y="335.50"></text></g><g><title>hx`ts_parser_parse (10 samples, 0.24%)</title><rect x="73.1772%" y="309" width="0.2414%" height="15" fill="rgb(221,52,54)" fg:x="3031" fg:w="10"/><text x="73.4272%" y="319.50"></text></g><g><title>rust.so`sym_identifier_character_set_2 (1 samples, 0.02%)</title><rect x="73.3945%" y="293" width="0.0241%" height="15" fill="rgb(252,129,43)" fg:x="3040" fg:w="1"/><text x="73.6445%" y="303.50"></text></g><g><title>hx`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="73.4186%" y="309" width="0.0241%" height="15" fill="rgb(248,183,27)" fg:x="3041" fg:w="1"/><text x="73.6686%" y="319.50"></text></g><g><title>hx`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="73.4186%" y="293" width="0.0241%" height="15" fill="rgb(250,0,22)" fg:x="3041" fg:w="1"/><text x="73.6686%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="73.4186%" y="277" width="0.0241%" height="15" fill="rgb(213,166,10)" fg:x="3041" fg:w="1"/><text x="73.6686%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (2 samples, 0.05%)</title><rect x="73.4428%" y="309" width="0.0483%" height="15" fill="rgb(207,163,36)" fg:x="3042" fg:w="2"/><text x="73.6928%" y="319.50"></text></g><g><title>hx`ts_tree_cursor_delete (1 samples, 0.02%)</title><rect x="73.4911%" y="309" width="0.0241%" height="15" fill="rgb(208,122,22)" fg:x="3044" fg:w="1"/><text x="73.7411%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="73.4911%" y="293" width="0.0241%" height="15" fill="rgb(207,104,49)" fg:x="3044" fg:w="1"/><text x="73.7411%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (3 samples, 0.07%)</title><rect x="73.5152%" y="309" width="0.0724%" height="15" fill="rgb(248,211,50)" fg:x="3045" fg:w="3"/><text x="73.7652%" y="319.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (2 samples, 0.05%)</title><rect x="73.5394%" y="293" width="0.0483%" height="15" fill="rgb(217,13,45)" fg:x="3046" fg:w="2"/><text x="73.7894%" y="303.50"></text></g><g><title>hx`helix_core::syntax::intersect_ranges (8 samples, 0.19%)</title><rect x="73.4186%" y="325" width="0.1931%" height="15" fill="rgb(211,216,49)" fg:x="3041" fg:w="8"/><text x="73.6686%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="73.5876%" y="309" width="0.0241%" height="15" fill="rgb(221,58,53)" fg:x="3048" fg:w="1"/><text x="73.8376%" y="319.50"></text></g><g><title>hx`memchr::memmem::Finder::find (4 samples, 0.10%)</title><rect x="73.6118%" y="325" width="0.0966%" height="15" fill="rgb(220,112,41)" fg:x="3049" fg:w="4"/><text x="73.8618%" y="335.50"></text></g><g><title>hx`&lt;aho_corasick::prefilter::RareBytesOne as aho_corasick::prefilter::Prefilter&gt;::next_candidate (2 samples, 0.05%)</title><rect x="74.2395%" y="293" width="0.0483%" height="15" fill="rgb(236,38,28)" fg:x="3075" fg:w="2"/><text x="74.4895%" y="303.50"></text></g><g><title>hx`&lt;aho_corasick::prefilter::StartBytesOne as aho_corasick::prefilter::Prefilter&gt;::next_candidate (1 samples, 0.02%)</title><rect x="74.2878%" y="293" width="0.0241%" height="15" fill="rgb(227,195,22)" fg:x="3077" fg:w="1"/><text x="74.5378%" y="303.50"></text></g><g><title>hx`aho_corasick::ahocorasick::AhoCorasick&lt;S&gt;::find (5 samples, 0.12%)</title><rect x="74.2154%" y="309" width="0.1207%" height="15" fill="rgb(214,55,33)" fg:x="3074" fg:w="5"/><text x="74.4654%" y="319.50"></text></g><g><title>hx`aho_corasick::automaton::Automaton::leftmost_find_at_no_state (1 samples, 0.02%)</title><rect x="74.3119%" y="293" width="0.0241%" height="15" fill="rgb(248,80,13)" fg:x="3078" fg:w="1"/><text x="74.5619%" y="303.50"></text></g><g><title>hx`memchr::memmem::Finder::find (12 samples, 0.29%)</title><rect x="74.3361%" y="309" width="0.2897%" height="15" fill="rgb(238,52,6)" fg:x="3079" fg:w="12"/><text x="74.5861%" y="319.50"></text></g><g><title>hx`memchr::memmem::rabinkarp::is_prefix (1 samples, 0.02%)</title><rect x="74.6258%" y="309" width="0.0241%" height="15" fill="rgb(224,198,47)" fg:x="3091" fg:w="1"/><text x="74.8758%" y="319.50"></text></g><g><title>hx`regex::re_unicode::Regex::find_at (40 samples, 0.97%)</title><rect x="73.7084%" y="325" width="0.9657%" height="15" fill="rgb(233,171,20)" fg:x="3053" fg:w="40"/><text x="73.9584%" y="335.50"></text></g><g><title>hx`regex::dfa::Fsm::prefix_at (1 samples, 0.02%)</title><rect x="74.6499%" y="309" width="0.0241%" height="15" fill="rgb(241,30,25)" fg:x="3092" fg:w="1"/><text x="74.8999%" y="319.50"></text></g><g><title>hx`aho_corasick::ahocorasick::AhoCorasick&lt;S&gt;::find (1 samples, 0.02%)</title><rect x="74.6499%" y="293" width="0.0241%" height="15" fill="rgb(207,171,38)" fg:x="3092" fg:w="1"/><text x="74.8999%" y="303.50"></text></g><g><title>hx`aho_corasick::automaton::Automaton::leftmost_find_at_no_state (1 samples, 0.02%)</title><rect x="74.6499%" y="277" width="0.0241%" height="15" fill="rgb(234,70,1)" fg:x="3092" fg:w="1"/><text x="74.8999%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (78 samples, 1.88%)</title><rect x="76.8952%" y="293" width="1.8831%" height="15" fill="rgb(232,178,18)" fg:x="3185" fg:w="78"/><text x="77.1452%" y="303.50">h..</text></g><g><title>hx`ts_tree_cursor_goto_first_child (10 samples, 0.24%)</title><rect x="78.7784%" y="293" width="0.2414%" height="15" fill="rgb(241,78,40)" fg:x="3263" fg:w="10"/><text x="79.0284%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (16 samples, 0.39%)</title><rect x="79.4061%" y="277" width="0.3863%" height="15" fill="rgb(222,35,25)" fg:x="3289" fg:w="16"/><text x="79.6561%" y="287.50"></text></g><g><title>hx`ts_query_cursor__advance (220 samples, 5.31%)</title><rect x="74.6741%" y="309" width="5.3114%" height="15" fill="rgb(207,92,16)" fg:x="3093" fg:w="220"/><text x="74.9241%" y="319.50">hx`ts_q..</text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (40 samples, 0.97%)</title><rect x="79.0198%" y="293" width="0.9657%" height="15" fill="rgb(216,59,51)" fg:x="3273" fg:w="40"/><text x="79.2698%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_goto_first_child (8 samples, 0.19%)</title><rect x="79.7924%" y="277" width="0.1931%" height="15" fill="rgb(213,80,28)" fg:x="3305" fg:w="8"/><text x="80.0424%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_current_status (55 samples, 1.33%)</title><rect x="79.9855%" y="309" width="1.3279%" height="15" fill="rgb(220,93,7)" fg:x="3313" fg:w="55"/><text x="80.2355%" y="319.50"></text></g><g><title>hx`ts_tree_cursor_goto_first_child (5 samples, 0.12%)</title><rect x="81.3134%" y="309" width="0.1207%" height="15" fill="rgb(225,24,44)" fg:x="3368" fg:w="5"/><text x="81.5634%" y="319.50"></text></g><g><title>hx`ts_query_cursor_next_match (282 samples, 6.81%)</title><rect x="74.6741%" y="325" width="6.8083%" height="15" fill="rgb(243,74,40)" fg:x="3093" fg:w="282"/><text x="74.9241%" y="335.50">hx`ts_que..</text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (2 samples, 0.05%)</title><rect x="81.4341%" y="309" width="0.0483%" height="15" fill="rgb(228,39,7)" fg:x="3373" fg:w="2"/><text x="81.6841%" y="319.50"></text></g><g><title>hx`ts_tree_edit (2 samples, 0.05%)</title><rect x="81.4824%" y="325" width="0.0483%" height="15" fill="rgb(227,79,8)" fg:x="3375" fg:w="2"/><text x="81.7324%" y="335.50"></text></g><g><title>hx`ts_subtree_edit (2 samples, 0.05%)</title><rect x="81.4824%" y="309" width="0.0483%" height="15" fill="rgb(236,58,11)" fg:x="3375" fg:w="2"/><text x="81.7324%" y="319.50"></text></g><g><title>hx`ts_malloc_default (1 samples, 0.02%)</title><rect x="81.5065%" y="293" width="0.0241%" height="15" fill="rgb(249,63,35)" fg:x="3376" fg:w="1"/><text x="81.7565%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="81.5065%" y="277" width="0.0241%" height="15" fill="rgb(252,114,16)" fg:x="3376" fg:w="1"/><text x="81.7565%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="81.5065%" y="261" width="0.0241%" height="15" fill="rgb(254,151,24)" fg:x="3376" fg:w="1"/><text x="81.7565%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="81.5065%" y="245" width="0.0241%" height="15" fill="rgb(253,54,39)" fg:x="3376" fg:w="1"/><text x="81.7565%" y="255.50"></text></g><g><title>hx`helix_core::syntax::Syntax::update (371 samples, 8.96%)</title><rect x="72.7909%" y="357" width="8.9570%" height="15" fill="rgb(243,25,45)" fg:x="3015" fg:w="371"/><text x="73.0409%" y="367.50">hx`helix_core..</text></g><g><title>hx`std::thread::local::LocalKey&lt;T&gt;::with (364 samples, 8.79%)</title><rect x="72.9599%" y="341" width="8.7880%" height="15" fill="rgb(234,134,9)" fg:x="3022" fg:w="364"/><text x="73.2099%" y="351.50">hx`std::thre..</text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.22%)</title><rect x="81.5307%" y="325" width="0.2173%" height="15" fill="rgb(227,166,31)" fg:x="3377" fg:w="9"/><text x="81.7807%" y="335.50"></text></g><g><title>hx`helix_core::transaction::ChangeSet::apply (1 samples, 0.02%)</title><rect x="81.7479%" y="357" width="0.0241%" height="15" fill="rgb(245,143,41)" fg:x="3386" fg:w="1"/><text x="81.9979%" y="367.50"></text></g><g><title>hx`helix_term::commands::insert::insert_char (375 samples, 9.05%)</title><rect x="72.7426%" y="405" width="9.0536%" height="15" fill="rgb(238,181,32)" fg:x="3013" fg:w="375"/><text x="72.9926%" y="415.50">hx`helix_term..</text></g><g><title>hx`helix_view::document::Document::apply (374 samples, 9.03%)</title><rect x="72.7668%" y="389" width="9.0295%" height="15" fill="rgb(224,113,18)" fg:x="3014" fg:w="374"/><text x="73.0168%" y="399.50">hx`helix_view..</text></g><g><title>hx`helix_view::document::Document::apply_impl (373 samples, 9.01%)</title><rect x="72.7909%" y="373" width="9.0053%" height="15" fill="rgb(240,229,28)" fg:x="3015" fg:w="373"/><text x="73.0409%" y="383.50">hx`helix_view..</text></g><g><title>hx`helix_lsp::client::Client::text_document_did_change (1 samples, 0.02%)</title><rect x="81.7721%" y="357" width="0.0241%" height="15" fill="rgb(250,185,3)" fg:x="3387" fg:w="1"/><text x="82.0221%" y="367.50"></text></g><g><title>hx`helix_lsp::client::Client::changeset_to_changes (1 samples, 0.02%)</title><rect x="81.7721%" y="341" width="0.0241%" height="15" fill="rgb(212,59,25)" fg:x="3387" fg:w="1"/><text x="82.0221%" y="351.50"></text></g><g><title>hx`helix_lsp::util::pos_to_lsp_pos (1 samples, 0.02%)</title><rect x="81.7721%" y="325" width="0.0241%" height="15" fill="rgb(221,87,20)" fg:x="3387" fg:w="1"/><text x="82.0221%" y="335.50"></text></g><g><title>hx`ropey::rope::Rope::line_to_byte (1 samples, 0.02%)</title><rect x="81.7721%" y="309" width="0.0241%" height="15" fill="rgb(213,74,28)" fg:x="3387" fg:w="1"/><text x="82.0221%" y="319.50"></text></g><g><title>hx`str_indices::lines_lf::to_byte_idx (1 samples, 0.02%)</title><rect x="81.7721%" y="293" width="0.0241%" height="15" fill="rgb(224,132,34)" fg:x="3387" fg:w="1"/><text x="82.0221%" y="303.50"></text></g><g><title>hx`helix_term::keymap::Keymaps::get (1 samples, 0.02%)</title><rect x="81.7962%" y="389" width="0.0241%" height="15" fill="rgb(222,101,24)" fg:x="3388" fg:w="1"/><text x="82.0462%" y="399.50"></text></g><g><title>hx`&lt;A as arc_swap::access::DynAccess&lt;T&gt;&gt;::load (1 samples, 0.02%)</title><rect x="81.7962%" y="373" width="0.0241%" height="15" fill="rgb(254,142,4)" fg:x="3388" fg:w="1"/><text x="82.0462%" y="383.50"></text></g><g><title>hx`&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load (1 samples, 0.02%)</title><rect x="81.7962%" y="357" width="0.0241%" height="15" fill="rgb(230,229,49)" fg:x="3388" fg:w="1"/><text x="82.0462%" y="367.50"></text></g><g><title>hx`&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load::_{{closure}} (1 samples, 0.02%)</title><rect x="81.7962%" y="341" width="0.0241%" height="15" fill="rgb(238,70,47)" fg:x="3388" fg:w="1"/><text x="82.0462%" y="351.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (2 samples, 0.05%)</title><rect x="81.9169%" y="261" width="0.0483%" height="15" fill="rgb(231,160,17)" fg:x="3393" fg:w="2"/><text x="82.1669%" y="271.50"></text></g><g><title>hx`ts_query_cursor__advance (6 samples, 0.14%)</title><rect x="81.8445%" y="277" width="0.1449%" height="15" fill="rgb(218,68,53)" fg:x="3390" fg:w="6"/><text x="82.0945%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_goto_first_child (1 samples, 0.02%)</title><rect x="81.9652%" y="261" width="0.0241%" height="15" fill="rgb(236,111,10)" fg:x="3395" fg:w="1"/><text x="82.2152%" y="271.50"></text></g><g><title>hx`helix_term::commands::insert::delete_char_backward (10 samples, 0.24%)</title><rect x="81.8204%" y="373" width="0.2414%" height="15" fill="rgb(224,34,41)" fg:x="3389" fg:w="10"/><text x="82.0704%" y="383.50"></text></g><g><title>hx`helix_view::document::Document::apply (10 samples, 0.24%)</title><rect x="81.8204%" y="357" width="0.2414%" height="15" fill="rgb(241,118,19)" fg:x="3389" fg:w="10"/><text x="82.0704%" y="367.50"></text></g><g><title>hx`helix_view::document::Document::apply_impl (10 samples, 0.24%)</title><rect x="81.8204%" y="341" width="0.2414%" height="15" fill="rgb(238,129,25)" fg:x="3389" fg:w="10"/><text x="82.0704%" y="351.50"></text></g><g><title>hx`helix_core::syntax::Syntax::update (10 samples, 0.24%)</title><rect x="81.8204%" y="325" width="0.2414%" height="15" fill="rgb(238,22,31)" fg:x="3389" fg:w="10"/><text x="82.0704%" y="335.50"></text></g><g><title>hx`std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.24%)</title><rect x="81.8204%" y="309" width="0.2414%" height="15" fill="rgb(222,174,48)" fg:x="3389" fg:w="10"/><text x="82.0704%" y="319.50"></text></g><g><title>hx`ts_query_cursor_next_match (9 samples, 0.22%)</title><rect x="81.8445%" y="293" width="0.2173%" height="15" fill="rgb(206,152,40)" fg:x="3390" fg:w="9"/><text x="82.0945%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_current_status (3 samples, 0.07%)</title><rect x="81.9894%" y="277" width="0.0724%" height="15" fill="rgb(218,99,54)" fg:x="3396" fg:w="3"/><text x="82.2394%" y="287.50"></text></g><g><title>hx`helix_core::syntax::LanguageLayer::parse (1 samples, 0.02%)</title><rect x="82.0859%" y="293" width="0.0241%" height="15" fill="rgb(220,174,26)" fg:x="3400" fg:w="1"/><text x="82.3359%" y="303.50"></text></g><g><title>hx`ts_parser_parse (1 samples, 0.02%)</title><rect x="82.0859%" y="277" width="0.0241%" height="15" fill="rgb(245,116,9)" fg:x="3400" fg:w="1"/><text x="82.3359%" y="287.50"></text></g><g><title>hx`ts_parser__reduce (1 samples, 0.02%)</title><rect x="82.0859%" y="261" width="0.0241%" height="15" fill="rgb(209,72,35)" fg:x="3400" fg:w="1"/><text x="82.3359%" y="271.50"></text></g><g><title>hx`ts_stack_pop_count (1 samples, 0.02%)</title><rect x="82.0859%" y="245" width="0.0241%" height="15" fill="rgb(226,126,21)" fg:x="3400" fg:w="1"/><text x="82.3359%" y="255.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (1 samples, 0.02%)</title><rect x="82.1101%" y="277" width="0.0241%" height="15" fill="rgb(227,192,1)" fg:x="3401" fg:w="1"/><text x="82.3601%" y="287.50"></text></g><g><title>hx`helix_core::syntax::intersect_ranges (3 samples, 0.07%)</title><rect x="82.1101%" y="293" width="0.0724%" height="15" fill="rgb(237,180,29)" fg:x="3401" fg:w="3"/><text x="82.3601%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (2 samples, 0.05%)</title><rect x="82.1342%" y="277" width="0.0483%" height="15" fill="rgb(230,197,35)" fg:x="3402" fg:w="2"/><text x="82.3842%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (1 samples, 0.02%)</title><rect x="82.1584%" y="261" width="0.0241%" height="15" fill="rgb(246,193,31)" fg:x="3403" fg:w="1"/><text x="82.4084%" y="271.50"></text></g><g><title>hx`ts_query_cursor_exec (1 samples, 0.02%)</title><rect x="82.1825%" y="293" width="0.0241%" height="15" fill="rgb(241,36,4)" fg:x="3404" fg:w="1"/><text x="82.4325%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (4 samples, 0.10%)</title><rect x="82.3032%" y="261" width="0.0966%" height="15" fill="rgb(241,130,17)" fg:x="3409" fg:w="4"/><text x="82.5532%" y="271.50"></text></g><g><title>hx`ts_tree_cursor_goto_first_child (1 samples, 0.02%)</title><rect x="82.3998%" y="261" width="0.0241%" height="15" fill="rgb(206,137,32)" fg:x="3413" fg:w="1"/><text x="82.6498%" y="271.50"></text></g><g><title>hx`ts_query_cursor__advance (13 samples, 0.31%)</title><rect x="82.2067%" y="277" width="0.3139%" height="15" fill="rgb(237,228,51)" fg:x="3405" fg:w="13"/><text x="82.4567%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (4 samples, 0.10%)</title><rect x="82.4239%" y="261" width="0.0966%" height="15" fill="rgb(243,6,42)" fg:x="3414" fg:w="4"/><text x="82.6739%" y="271.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (1 samples, 0.02%)</title><rect x="82.4964%" y="245" width="0.0241%" height="15" fill="rgb(251,74,28)" fg:x="3417" fg:w="1"/><text x="82.7464%" y="255.50"></text></g><g><title>hx`ts_query_cursor_next_match (14 samples, 0.34%)</title><rect x="82.2067%" y="293" width="0.3380%" height="15" fill="rgb(218,20,49)" fg:x="3405" fg:w="14"/><text x="82.4567%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_current_status (1 samples, 0.02%)</title><rect x="82.5205%" y="277" width="0.0241%" height="15" fill="rgb(238,28,14)" fg:x="3418" fg:w="1"/><text x="82.7705%" y="287.50"></text></g><g><title>hx`helix_term::commands::insert::insert_newline (21 samples, 0.51%)</title><rect x="82.0618%" y="373" width="0.5070%" height="15" fill="rgb(229,40,46)" fg:x="3399" fg:w="21"/><text x="82.3118%" y="383.50"></text></g><g><title>hx`helix_view::document::Document::apply (21 samples, 0.51%)</title><rect x="82.0618%" y="357" width="0.5070%" height="15" fill="rgb(244,195,20)" fg:x="3399" fg:w="21"/><text x="82.3118%" y="367.50"></text></g><g><title>hx`helix_view::document::Document::apply_impl (21 samples, 0.51%)</title><rect x="82.0618%" y="341" width="0.5070%" height="15" fill="rgb(253,56,35)" fg:x="3399" fg:w="21"/><text x="82.3118%" y="351.50"></text></g><g><title>hx`helix_core::syntax::Syntax::update (21 samples, 0.51%)</title><rect x="82.0618%" y="325" width="0.5070%" height="15" fill="rgb(210,149,44)" fg:x="3399" fg:w="21"/><text x="82.3118%" y="335.50"></text></g><g><title>hx`std::thread::local::LocalKey&lt;T&gt;::with (21 samples, 0.51%)</title><rect x="82.0618%" y="309" width="0.5070%" height="15" fill="rgb(240,135,12)" fg:x="3399" fg:w="21"/><text x="82.3118%" y="319.50"></text></g><g><title>hx`ts_tree_edit (1 samples, 0.02%)</title><rect x="82.5447%" y="293" width="0.0241%" height="15" fill="rgb(251,24,50)" fg:x="3419" fg:w="1"/><text x="82.7947%" y="303.50"></text></g><g><title>hx`ts_subtree_edit (1 samples, 0.02%)</title><rect x="82.5447%" y="277" width="0.0241%" height="15" fill="rgb(243,200,47)" fg:x="3419" fg:w="1"/><text x="82.7947%" y="287.50"></text></g><g><title>hx`ts_malloc_default (1 samples, 0.02%)</title><rect x="82.5447%" y="261" width="0.0241%" height="15" fill="rgb(224,166,26)" fg:x="3419" fg:w="1"/><text x="82.7947%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="82.5447%" y="245" width="0.0241%" height="15" fill="rgb(233,0,47)" fg:x="3419" fg:w="1"/><text x="82.7947%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="82.5447%" y="229" width="0.0241%" height="15" fill="rgb(253,80,5)" fg:x="3419" fg:w="1"/><text x="82.7947%" y="239.50"></text></g><g><title>hx`regex::re_unicode::Regex::find_at (1 samples, 0.02%)</title><rect x="82.5930%" y="293" width="0.0241%" height="15" fill="rgb(214,133,25)" fg:x="3421" fg:w="1"/><text x="82.8430%" y="303.50"></text></g><g><title>hx`aho_corasick::automaton::Automaton::leftmost_find_at_no_state (1 samples, 0.02%)</title><rect x="82.5930%" y="277" width="0.0241%" height="15" fill="rgb(209,27,14)" fg:x="3421" fg:w="1"/><text x="82.8430%" y="287.50"></text></g><g><title>hx`ts_query_cursor_next_match (4 samples, 0.10%)</title><rect x="82.6171%" y="293" width="0.0966%" height="15" fill="rgb(219,102,51)" fg:x="3422" fg:w="4"/><text x="82.8671%" y="303.50"></text></g><g><title>hx`ts_query_cursor__advance (4 samples, 0.10%)</title><rect x="82.6171%" y="277" width="0.0966%" height="15" fill="rgb(237,18,16)" fg:x="3422" fg:w="4"/><text x="82.8671%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (3 samples, 0.07%)</title><rect x="82.6412%" y="261" width="0.0724%" height="15" fill="rgb(241,85,17)" fg:x="3423" fg:w="3"/><text x="82.8912%" y="271.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (1 samples, 0.02%)</title><rect x="82.6895%" y="245" width="0.0241%" height="15" fill="rgb(236,90,42)" fg:x="3425" fg:w="1"/><text x="82.9395%" y="255.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::handle_keymap_event (39 samples, 0.94%)</title><rect x="81.7962%" y="405" width="0.9416%" height="15" fill="rgb(249,57,21)" fg:x="3388" fg:w="39"/><text x="82.0462%" y="415.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::handle_keymap_event::_{{closure}} (38 samples, 0.92%)</title><rect x="81.8204%" y="389" width="0.9174%" height="15" fill="rgb(243,12,36)" fg:x="3389" fg:w="38"/><text x="82.0704%" y="399.50"></text></g><g><title>hx`helix_view::editor::Editor::enter_normal_mode (7 samples, 0.17%)</title><rect x="82.5688%" y="373" width="0.1690%" height="15" fill="rgb(253,128,47)" fg:x="3420" fg:w="7"/><text x="82.8188%" y="383.50"></text></g><g><title>hx`helix_view::document::Document::apply (7 samples, 0.17%)</title><rect x="82.5688%" y="357" width="0.1690%" height="15" fill="rgb(207,33,20)" fg:x="3420" fg:w="7"/><text x="82.8188%" y="367.50"></text></g><g><title>hx`helix_view::document::Document::apply_impl (7 samples, 0.17%)</title><rect x="82.5688%" y="341" width="0.1690%" height="15" fill="rgb(233,215,35)" fg:x="3420" fg:w="7"/><text x="82.8188%" y="351.50"></text></g><g><title>hx`helix_core::syntax::Syntax::update (7 samples, 0.17%)</title><rect x="82.5688%" y="325" width="0.1690%" height="15" fill="rgb(249,188,52)" fg:x="3420" fg:w="7"/><text x="82.8188%" y="335.50"></text></g><g><title>hx`std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.17%)</title><rect x="82.5688%" y="309" width="0.1690%" height="15" fill="rgb(225,12,32)" fg:x="3420" fg:w="7"/><text x="82.8188%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="82.7137%" y="293" width="0.0241%" height="15" fill="rgb(247,98,14)" fg:x="3426" fg:w="1"/><text x="82.9637%" y="303.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::insert_mode (416 samples, 10.04%)</title><rect x="72.7185%" y="421" width="10.0435%" height="15" fill="rgb(247,219,48)" fg:x="3012" fg:w="416"/><text x="72.9685%" y="431.50">hx`helix_term::..</text></g><g><title>hx`helix_view::document::Document::apply (1 samples, 0.02%)</title><rect x="82.7378%" y="405" width="0.0241%" height="15" fill="rgb(253,60,48)" fg:x="3427" fg:w="1"/><text x="82.9878%" y="415.50"></text></g><g><title>hx`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="82.7620%" y="373" width="0.0241%" height="15" fill="rgb(245,15,52)" fg:x="3428" fg:w="1"/><text x="83.0120%" y="383.50"></text></g><g><title>hx`&lt;helix_term::ui::explorer::FileInfo as helix_term::ui::tree::TreeViewItem&gt;::name (1 samples, 0.02%)</title><rect x="82.7620%" y="357" width="0.0241%" height="15" fill="rgb(220,133,28)" fg:x="3428" fg:w="1"/><text x="83.0120%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="82.7620%" y="341" width="0.0241%" height="15" fill="rgb(217,180,4)" fg:x="3428" fg:w="1"/><text x="83.0120%" y="351.50"></text></g><g><title>hx`core::iter::adapters::try_process (1 samples, 0.02%)</title><rect x="82.7861%" y="373" width="0.0241%" height="15" fill="rgb(251,24,1)" fg:x="3429" fg:w="1"/><text x="83.0361%" y="383.50"></text></g><g><title>hx`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="82.7861%" y="357" width="0.0241%" height="15" fill="rgb(212,185,49)" fg:x="3429" fg:w="1"/><text x="83.0361%" y="367.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="82.7861%" y="341" width="0.0241%" height="15" fill="rgb(215,175,22)" fg:x="3429" fg:w="1"/><text x="83.0361%" y="351.50"></text></g><g><title>hx`&lt;helix_term::ui::explorer::FileInfo as helix_term::ui::tree::TreeViewItem&gt;::name (1 samples, 0.02%)</title><rect x="82.7861%" y="325" width="0.0241%" height="15" fill="rgb(250,205,14)" fg:x="3429" fg:w="1"/><text x="83.0361%" y="335.50"></text></g><g><title>hx`&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.02%)</title><rect x="82.7861%" y="309" width="0.0241%" height="15" fill="rgb(225,211,22)" fg:x="3429" fg:w="1"/><text x="83.0361%" y="319.50"></text></g><g><title>hx`std::path::Components::parse_next_component_back (1 samples, 0.02%)</title><rect x="82.7861%" y="293" width="0.0241%" height="15" fill="rgb(251,179,42)" fg:x="3429" fg:w="1"/><text x="83.0361%" y="303.50"></text></g><g><title>hx`&lt;std::sys::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="82.8102%" y="341" width="0.0241%" height="15" fill="rgb(208,216,51)" fg:x="3430" fg:w="1"/><text x="83.0602%" y="351.50"></text></g><g><title>libsystem_c.dylib`readdir_r (1 samples, 0.02%)</title><rect x="82.8102%" y="325" width="0.0241%" height="15" fill="rgb(235,36,11)" fg:x="3430" fg:w="1"/><text x="83.0602%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__getdirentries64 (1 samples, 0.02%)</title><rect x="82.8102%" y="309" width="0.0241%" height="15" fill="rgb(213,189,28)" fg:x="3430" fg:w="1"/><text x="83.0602%" y="319.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="82.8102%" y="357" width="0.0724%" height="15" fill="rgb(227,203,42)" fg:x="3430" fg:w="3"/><text x="83.0602%" y="367.50"></text></g><g><title>hx`helix_term::ui::explorer::dir_entry_to_file_info (2 samples, 0.05%)</title><rect x="82.8344%" y="341" width="0.0483%" height="15" fill="rgb(244,72,36)" fg:x="3431" fg:w="2"/><text x="83.0844%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`lstat (2 samples, 0.05%)</title><rect x="82.8344%" y="325" width="0.0483%" height="15" fill="rgb(213,53,17)" fg:x="3431" fg:w="2"/><text x="83.0844%" y="335.50"></text></g><g><title>hx`helix_term::ui::tree::TreeView&lt;T&gt;::handle_event (6 samples, 0.14%)</title><rect x="82.7620%" y="421" width="0.1449%" height="15" fill="rgb(207,167,3)" fg:x="3428" fg:w="6"/><text x="83.0120%" y="431.50"></text></g><g><title>hx`helix_term::ui::tree::TreeView&lt;T&gt;::refresh (6 samples, 0.14%)</title><rect x="82.7620%" y="405" width="0.1449%" height="15" fill="rgb(216,98,30)" fg:x="3428" fg:w="6"/><text x="83.0120%" y="415.50"></text></g><g><title>hx`helix_term::ui::tree::Tree&lt;T&gt;::refresh (6 samples, 0.14%)</title><rect x="82.7620%" y="389" width="0.1449%" height="15" fill="rgb(236,123,15)" fg:x="3428" fg:w="6"/><text x="83.0120%" y="399.50"></text></g><g><title>hx`helix_term::ui::tree::Tree&lt;T&gt;::get_filtered_children (4 samples, 0.10%)</title><rect x="82.8102%" y="373" width="0.0966%" height="15" fill="rgb(248,81,50)" fg:x="3430" fg:w="4"/><text x="83.0602%" y="383.50"></text></g><g><title>hx`alloc::slice::merge_sort (1 samples, 0.02%)</title><rect x="82.8827%" y="357" width="0.0241%" height="15" fill="rgb(214,120,4)" fg:x="3433" fg:w="1"/><text x="83.1327%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.02%)</title><rect x="82.8827%" y="341" width="0.0241%" height="15" fill="rgb(208,179,34)" fg:x="3433" fg:w="1"/><text x="83.1327%" y="351.50"></text></g><g><title>hx`helix_view::document::Document::append_changes_to_history (1 samples, 0.02%)</title><rect x="82.9068%" y="421" width="0.0241%" height="15" fill="rgb(227,140,7)" fg:x="3434" fg:w="1"/><text x="83.1568%" y="431.50"></text></g><g><title>hx`helix_view::view::View::apply (1 samples, 0.02%)</title><rect x="82.9068%" y="405" width="0.0241%" height="15" fill="rgb(214,22,6)" fg:x="3434" fg:w="1"/><text x="83.1568%" y="415.50"></text></g><g><title>hx`helix_view::document::Document::get_current_revision (1 samples, 0.02%)</title><rect x="82.9068%" y="389" width="0.0241%" height="15" fill="rgb(207,137,27)" fg:x="3434" fg:w="1"/><text x="83.1568%" y="399.50"></text></g><g><title>hx`&lt;helix_core::history::History as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="82.9068%" y="373" width="0.0241%" height="15" fill="rgb(210,8,46)" fg:x="3434" fg:w="1"/><text x="83.1568%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="82.9068%" y="357" width="0.0241%" height="15" fill="rgb(240,16,54)" fg:x="3434" fg:w="1"/><text x="83.1568%" y="367.50"></text></g><g><title>hx`helix_view::editor::Editor::reset_idle_timer (2 samples, 0.05%)</title><rect x="82.9310%" y="421" width="0.0483%" height="15" fill="rgb(211,209,29)" fg:x="3435" fg:w="2"/><text x="83.1810%" y="431.50"></text></g><g><title>hx`&lt;A as arc_swap::access::DynAccess&lt;T&gt;&gt;::load (1 samples, 0.02%)</title><rect x="82.9551%" y="405" width="0.0241%" height="15" fill="rgb(226,228,24)" fg:x="3436" fg:w="1"/><text x="83.2051%" y="415.50"></text></g><g><title>hx`mi_malloc (1 samples, 0.02%)</title><rect x="82.9551%" y="389" width="0.0241%" height="15" fill="rgb(222,84,9)" fg:x="3436" fg:w="1"/><text x="83.2051%" y="399.50"></text></g><g><title>hx`&lt;helix_core::doc_formatter::DocumentFormatter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="83.0034%" y="405" width="0.0483%" height="15" fill="rgb(234,203,30)" fg:x="3438" fg:w="2"/><text x="83.2534%" y="415.50"></text></g><g><title>hx`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="83.0517%" y="405" width="0.0241%" height="15" fill="rgb(238,109,14)" fg:x="3440" fg:w="1"/><text x="83.3017%" y="415.50"></text></g><g><title>hx`&lt;slotmap::KeyData as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="83.0517%" y="389" width="0.0241%" height="15" fill="rgb(233,206,34)" fg:x="3440" fg:w="1"/><text x="83.3017%" y="399.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;helix_core::text_annotations::TextAnnotations&gt; (1 samples, 0.02%)</title><rect x="83.0758%" y="405" width="0.0241%" height="15" fill="rgb(220,167,47)" fg:x="3441" fg:w="1"/><text x="83.3258%" y="415.50"></text></g><g><title>hx`&lt;helix_core::doc_formatter::DocumentFormatter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="83.1000%" y="389" width="0.0724%" height="15" fill="rgb(238,105,10)" fg:x="3442" fg:w="3"/><text x="83.3500%" y="399.50"></text></g><g><title>hx`helix_core::position::char_idx_at_visual_block_offset (2 samples, 0.05%)</title><rect x="83.1724%" y="389" width="0.0483%" height="15" fill="rgb(213,227,17)" fg:x="3445" fg:w="2"/><text x="83.4224%" y="399.50"></text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::new_at_prev_checkpoint (2 samples, 0.05%)</title><rect x="83.1724%" y="373" width="0.0483%" height="15" fill="rgb(217,132,38)" fg:x="3445" fg:w="2"/><text x="83.4224%" y="383.50"></text></g><g><title>hx`helix_core::graphemes::RopeGraphemes::new (2 samples, 0.05%)</title><rect x="83.1724%" y="357" width="0.0483%" height="15" fill="rgb(242,146,4)" fg:x="3445" fg:w="2"/><text x="83.4224%" y="367.50"></text></g><g><title>hx`ropey::iter::Chunks::next_impl (1 samples, 0.02%)</title><rect x="83.1965%" y="341" width="0.0241%" height="15" fill="rgb(212,61,9)" fg:x="3446" fg:w="1"/><text x="83.4465%" y="351.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="83.3655%" y="357" width="0.0724%" height="15" fill="rgb(247,126,22)" fg:x="3453" fg:w="3"/><text x="83.6155%" y="367.50"></text></g><g><title>hx`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.05%)</title><rect x="83.5345%" y="341" width="0.0483%" height="15" fill="rgb(220,196,2)" fg:x="3460" fg:w="2"/><text x="83.7845%" y="351.50"></text></g><g><title>hx`&lt;helix_core::graphemes::GraphemeStr as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (1 samples, 0.02%)</title><rect x="83.5828%" y="341" width="0.0241%" height="15" fill="rgb(208,46,4)" fg:x="3462" fg:w="1"/><text x="83.8328%" y="351.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::grapheme_category (1 samples, 0.02%)</title><rect x="84.0898%" y="309" width="0.0241%" height="15" fill="rgb(252,104,46)" fg:x="3483" fg:w="1"/><text x="84.3398%" y="319.50"></text></g><g><title>hx`&lt;helix_core::graphemes::RopeGraphemes as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.63%)</title><rect x="83.6070%" y="341" width="0.6277%" height="15" fill="rgb(237,152,48)" fg:x="3463" fg:w="26"/><text x="83.8570%" y="351.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::next_boundary (17 samples, 0.41%)</title><rect x="83.8242%" y="325" width="0.4104%" height="15" fill="rgb(221,59,37)" fg:x="3472" fg:w="17"/><text x="84.0742%" y="335.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::is_boundary (5 samples, 0.12%)</title><rect x="84.1140%" y="309" width="0.1207%" height="15" fill="rgb(209,202,51)" fg:x="3484" fg:w="5"/><text x="84.3640%" y="319.50"></text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::advance_grapheme (35 samples, 0.85%)</title><rect x="83.4380%" y="357" width="0.8450%" height="15" fill="rgb(228,81,30)" fg:x="3456" fg:w="35"/><text x="83.6880%" y="367.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::next_boundary (2 samples, 0.05%)</title><rect x="84.2347%" y="341" width="0.0483%" height="15" fill="rgb(227,42,39)" fg:x="3489" fg:w="2"/><text x="84.4847%" y="351.50"></text></g><g><title>hx`&lt;helix_core::doc_formatter::DocumentFormatter as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 1.06%)</title><rect x="83.2448%" y="373" width="1.0623%" height="15" fill="rgb(221,26,2)" fg:x="3448" fg:w="44"/><text x="83.4948%" y="383.50"></text></g><g><title>hx`helix_core::graphemes::Grapheme::new (1 samples, 0.02%)</title><rect x="84.2830%" y="357" width="0.0241%" height="15" fill="rgb(254,61,31)" fg:x="3491" fg:w="1"/><text x="84.5330%" y="367.50"></text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::advance_grapheme (1 samples, 0.02%)</title><rect x="84.3071%" y="373" width="0.0241%" height="15" fill="rgb(222,173,38)" fg:x="3492" fg:w="1"/><text x="84.5571%" y="383.50"></text></g><g><title>hx`helix_core::graphemes::RopeGraphemes::new (5 samples, 0.12%)</title><rect x="84.6934%" y="357" width="0.1207%" height="15" fill="rgb(218,50,12)" fg:x="3508" fg:w="5"/><text x="84.9434%" y="367.50"></text></g><g><title>hx`ropey::iter::Chunks::new_with_range_at_byte (2 samples, 0.05%)</title><rect x="84.7658%" y="341" width="0.0483%" height="15" fill="rgb(223,88,40)" fg:x="3511" fg:w="2"/><text x="85.0158%" y="351.50"></text></g><g><title>hx`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="84.7900%" y="325" width="0.0241%" height="15" fill="rgb(237,54,19)" fg:x="3512" fg:w="1"/><text x="85.0400%" y="335.50"></text></g><g><title>hx`ropey::slice::RopeSlice::get_chunk_at_line_break (1 samples, 0.02%)</title><rect x="84.8141%" y="357" width="0.0241%" height="15" fill="rgb(251,129,25)" fg:x="3513" fg:w="1"/><text x="85.0641%" y="367.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_line_break (1 samples, 0.02%)</title><rect x="84.8141%" y="341" width="0.0241%" height="15" fill="rgb(238,97,19)" fg:x="3513" fg:w="1"/><text x="85.0641%" y="351.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_char (2 samples, 0.05%)</title><rect x="84.9348%" y="341" width="0.0483%" height="15" fill="rgb(240,169,18)" fg:x="3518" fg:w="2"/><text x="85.1848%" y="351.50"></text></g><g><title>hx`ropey::slice::RopeSlice::new_with_range (12 samples, 0.29%)</title><rect x="84.8382%" y="357" width="0.2897%" height="15" fill="rgb(230,187,49)" fg:x="3514" fg:w="12"/><text x="85.0882%" y="367.50"></text></g><g><title>hx`str_indices::chars::to_byte_idx (6 samples, 0.14%)</title><rect x="84.9831%" y="341" width="0.1449%" height="15" fill="rgb(209,44,26)" fg:x="3520" fg:w="6"/><text x="85.2331%" y="351.50"></text></g><g><title>hx`ropey::slice::RopeSlice::slice (1 samples, 0.02%)</title><rect x="85.1280%" y="357" width="0.0241%" height="15" fill="rgb(244,0,6)" fg:x="3526" fg:w="1"/><text x="85.3780%" y="367.50"></text></g><g><title>hx`ropey::str_utils::byte_to_utf16_surrogate_idx (1 samples, 0.02%)</title><rect x="85.1521%" y="357" width="0.0241%" height="15" fill="rgb(248,18,21)" fg:x="3527" fg:w="1"/><text x="85.4021%" y="367.50"></text></g><g><title>hx`helix_core::position::visual_offset_from_block (84 samples, 2.03%)</title><rect x="83.2207%" y="389" width="2.0280%" height="15" fill="rgb(245,180,19)" fg:x="3447" fg:w="84"/><text x="83.4707%" y="399.50">h..</text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::new_at_prev_checkpoint (38 samples, 0.92%)</title><rect x="84.3312%" y="373" width="0.9174%" height="15" fill="rgb(252,118,36)" fg:x="3493" fg:w="38"/><text x="84.5812%" y="383.50"></text></g><g><title>hx`str_indices::chars::to_byte_idx (3 samples, 0.07%)</title><rect x="85.1762%" y="357" width="0.0724%" height="15" fill="rgb(210,224,19)" fg:x="3528" fg:w="3"/><text x="85.4262%" y="367.50"></text></g><g><title>hx`helix_core::position::char_idx_at_visual_offset (90 samples, 2.17%)</title><rect x="83.1000%" y="405" width="2.1729%" height="15" fill="rgb(218,30,24)" fg:x="3442" fg:w="90"/><text x="83.3500%" y="415.50">h..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="85.2487%" y="389" width="0.0241%" height="15" fill="rgb(219,75,50)" fg:x="3531" fg:w="1"/><text x="85.4987%" y="399.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.14%)</title><rect x="85.6350%" y="373" width="0.1449%" height="15" fill="rgb(234,72,50)" fg:x="3547" fg:w="6"/><text x="85.8850%" y="383.50"></text></g><g><title>hx`&lt;helix_core::graphemes::RopeGraphemes as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="85.7798%" y="373" width="0.0241%" height="15" fill="rgb(219,100,48)" fg:x="3553" fg:w="1"/><text x="86.0298%" y="383.50"></text></g><g><title>hx`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6 samples, 0.14%)</title><rect x="85.9488%" y="357" width="0.1449%" height="15" fill="rgb(253,5,41)" fg:x="3560" fg:w="6"/><text x="86.1988%" y="367.50"></text></g><g><title>hx`&lt;helix_core::graphemes::GraphemeStr as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (1 samples, 0.02%)</title><rect x="86.0937%" y="357" width="0.0241%" height="15" fill="rgb(247,181,11)" fg:x="3566" fg:w="1"/><text x="86.3437%" y="367.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::grapheme_category (1 samples, 0.02%)</title><rect x="86.7455%" y="325" width="0.0241%" height="15" fill="rgb(222,223,25)" fg:x="3593" fg:w="1"/><text x="86.9955%" y="335.50"></text></g><g><title>hx`&lt;helix_core::graphemes::RopeGraphemes as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.85%)</title><rect x="86.1178%" y="357" width="0.8450%" height="15" fill="rgb(214,198,28)" fg:x="3567" fg:w="35"/><text x="86.3678%" y="367.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::next_boundary (27 samples, 0.65%)</title><rect x="86.3110%" y="341" width="0.6519%" height="15" fill="rgb(230,46,43)" fg:x="3575" fg:w="27"/><text x="86.5610%" y="351.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::is_boundary (8 samples, 0.19%)</title><rect x="86.7697%" y="325" width="0.1931%" height="15" fill="rgb(233,65,53)" fg:x="3594" fg:w="8"/><text x="87.0197%" y="335.50"></text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::advance_grapheme (49 samples, 1.18%)</title><rect x="85.8040%" y="373" width="1.1830%" height="15" fill="rgb(221,121,27)" fg:x="3554" fg:w="49"/><text x="86.0540%" y="383.50"></text></g><g><title>hx`helix_core::graphemes::Grapheme::new (1 samples, 0.02%)</title><rect x="86.9628%" y="357" width="0.0241%" height="15" fill="rgb(247,70,47)" fg:x="3602" fg:w="1"/><text x="87.2128%" y="367.50"></text></g><g><title>hx`&lt;helix_core::doc_formatter::DocumentFormatter as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 1.62%)</title><rect x="85.3935%" y="389" width="1.6176%" height="15" fill="rgb(228,85,35)" fg:x="3537" fg:w="67"/><text x="85.6435%" y="399.50"></text></g><g><title>hx`helix_core::graphemes::Grapheme::new (1 samples, 0.02%)</title><rect x="86.9870%" y="373" width="0.0241%" height="15" fill="rgb(209,50,18)" fg:x="3603" fg:w="1"/><text x="87.2370%" y="383.50"></text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::advance_grapheme (1 samples, 0.02%)</title><rect x="87.0111%" y="389" width="0.0241%" height="15" fill="rgb(250,19,35)" fg:x="3604" fg:w="1"/><text x="87.2611%" y="399.50"></text></g><g><title>hx`helix_core::graphemes::RopeGraphemes::new (1 samples, 0.02%)</title><rect x="87.0352%" y="389" width="0.0241%" height="15" fill="rgb(253,107,29)" fg:x="3605" fg:w="1"/><text x="87.2852%" y="399.50"></text></g><g><title>hx`helix_core::position::visual_offset_from_anchor (75 samples, 1.81%)</title><rect x="85.2728%" y="405" width="1.8107%" height="15" fill="rgb(252,179,29)" fg:x="3532" fg:w="75"/><text x="85.5228%" y="415.50">h..</text></g><g><title>hx`ropey::slice::RopeSlice::slice (1 samples, 0.02%)</title><rect x="87.0594%" y="389" width="0.0241%" height="15" fill="rgb(238,194,6)" fg:x="3606" fg:w="1"/><text x="87.3094%" y="399.50"></text></g><g><title>hx`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.02%)</title><rect x="87.1560%" y="357" width="0.0241%" height="15" fill="rgb(238,164,29)" fg:x="3610" fg:w="1"/><text x="87.4060%" y="367.50"></text></g><g><title>hx`helix_core::position::visual_offset_from_block (8 samples, 0.19%)</title><rect x="87.0835%" y="405" width="0.1931%" height="15" fill="rgb(224,25,9)" fg:x="3607" fg:w="8"/><text x="87.3335%" y="415.50"></text></g><g><title>hx`&lt;helix_core::doc_formatter::DocumentFormatter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.17%)</title><rect x="87.1077%" y="389" width="0.1690%" height="15" fill="rgb(244,153,23)" fg:x="3608" fg:w="7"/><text x="87.3577%" y="399.50"></text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::advance_grapheme (7 samples, 0.17%)</title><rect x="87.1077%" y="373" width="0.1690%" height="15" fill="rgb(212,203,14)" fg:x="3608" fg:w="7"/><text x="87.3577%" y="383.50"></text></g><g><title>hx`&lt;helix_core::graphemes::RopeGraphemes as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.10%)</title><rect x="87.1801%" y="357" width="0.0966%" height="15" fill="rgb(220,164,20)" fg:x="3611" fg:w="4"/><text x="87.4301%" y="367.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::next_boundary (4 samples, 0.10%)</title><rect x="87.1801%" y="341" width="0.0966%" height="15" fill="rgb(222,203,48)" fg:x="3611" fg:w="4"/><text x="87.4301%" y="351.50"></text></g><g><title>hx`unicode_segmentation::grapheme::GraphemeCursor::is_boundary (2 samples, 0.05%)</title><rect x="87.2284%" y="325" width="0.0483%" height="15" fill="rgb(215,159,22)" fg:x="3613" fg:w="2"/><text x="87.4784%" y="335.50"></text></g><g><title>hx`helix_view::gutter::line_numbers_width (1 samples, 0.02%)</title><rect x="87.2767%" y="405" width="0.0241%" height="15" fill="rgb(216,183,47)" fg:x="3615" fg:w="1"/><text x="87.5267%" y="415.50"></text></g><g><title>hx`ropey::tree::node::Node::get_chunk_at_line_break (1 samples, 0.02%)</title><rect x="87.2767%" y="389" width="0.0241%" height="15" fill="rgb(229,195,25)" fg:x="3615" fg:w="1"/><text x="87.5267%" y="399.50"></text></g><g><title>hx`&lt;helix_term::ui::editor::EditorView as helix_term::compositor::Component&gt;::handle_event (915 samples, 22.09%)</title><rect x="65.2342%" y="437" width="22.0908%" height="15" fill="rgb(224,132,51)" fg:x="2702" fg:w="915"/><text x="65.4842%" y="447.50">hx`&lt;helix_term::ui::editor::EditorV..</text></g><g><title>hx`helix_view::view::View::offset_coords_to_in_view_center (180 samples, 4.35%)</title><rect x="82.9792%" y="421" width="4.3457%" height="15" fill="rgb(240,63,7)" fg:x="3437" fg:w="180"/><text x="83.2292%" y="431.50">hx`he..</text></g><g><title>hx`str_indices::lines_lf::to_byte_idx (1 samples, 0.02%)</title><rect x="87.3008%" y="405" width="0.0241%" height="15" fill="rgb(249,182,41)" fg:x="3616" fg:w="1"/><text x="87.5508%" y="415.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="87.3250%" y="341" width="0.0241%" height="15" fill="rgb(243,47,26)" fg:x="3617" fg:w="1"/><text x="87.5750%" y="351.50"></text></g><g><title>hx`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="87.3250%" y="325" width="0.0241%" height="15" fill="rgb(233,48,2)" fg:x="3617" fg:w="1"/><text x="87.5750%" y="335.50"></text></g><g><title>hx`&lt;git_ref::store_impl::file::overlay_iter::LooseThenPacked as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="87.3250%" y="309" width="0.0241%" height="15" fill="rgb(244,165,34)" fg:x="3617" fg:w="1"/><text x="87.5750%" y="319.50"></text></g><g><title>hx`&lt;git_ref::store_impl::file::overlay_iter::LooseThenPacked as core::iter::traits::iterator::Iterator&gt;::next::peek_loose (1 samples, 0.02%)</title><rect x="87.3250%" y="293" width="0.0241%" height="15" fill="rgb(207,89,7)" fg:x="3617" fg:w="1"/><text x="87.5750%" y="303.50"></text></g><g><title>hx`&lt;git_ref::store_impl::file::loose::iter::SortedLoosePaths as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="87.3250%" y="277" width="0.0241%" height="15" fill="rgb(244,117,36)" fg:x="3617" fg:w="1"/><text x="87.5750%" y="287.50"></text></g><g><title>hx`&lt;walkdir::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="87.3250%" y="261" width="0.0241%" height="15" fill="rgb(226,144,34)" fg:x="3617" fg:w="1"/><text x="87.5750%" y="271.50"></text></g><g><title>hx`walkdir::IntoIter::handle_entry (1 samples, 0.02%)</title><rect x="87.3250%" y="245" width="0.0241%" height="15" fill="rgb(213,23,19)" fg:x="3617" fg:w="1"/><text x="87.5750%" y="255.50"></text></g><g><title>hx`walkdir::IntoIter::push (1 samples, 0.02%)</title><rect x="87.3250%" y="229" width="0.0241%" height="15" fill="rgb(217,75,12)" fg:x="3617" fg:w="1"/><text x="87.5750%" y="239.50"></text></g><g><title>hx`std::sys::unix::fs::readdir (1 samples, 0.02%)</title><rect x="87.3250%" y="213" width="0.0241%" height="15" fill="rgb(224,159,17)" fg:x="3617" fg:w="1"/><text x="87.5750%" y="223.50"></text></g><g><title>libsystem_c.dylib`__opendir2 (1 samples, 0.02%)</title><rect x="87.3250%" y="197" width="0.0241%" height="15" fill="rgb(217,118,1)" fg:x="3617" fg:w="1"/><text x="87.5750%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (1 samples, 0.02%)</title><rect x="87.3250%" y="181" width="0.0241%" height="15" fill="rgb(232,180,48)" fg:x="3617" fg:w="1"/><text x="87.5750%" y="191.50"></text></g><g><title>hx`git_features::fs::snapshot::MutableSnapshot&lt;T&gt;::recent_snapshot (1 samples, 0.02%)</title><rect x="87.3491%" y="341" width="0.0241%" height="15" fill="rgb(230,27,33)" fg:x="3618" fg:w="1"/><text x="87.5991%" y="351.50"></text></g><g><title>hx`git_ref::store_impl::file::packed::_&lt;impl git_ref::store_impl::file::Store&gt;::open_packed_buffer (1 samples, 0.02%)</title><rect x="87.3491%" y="325" width="0.0241%" height="15" fill="rgb(205,31,21)" fg:x="3618" fg:w="1"/><text x="87.5991%" y="335.50"></text></g><g><title>hx`git_ref::store_impl::packed::buffer::open::_&lt;impl git_ref::store_impl::packed::Buffer&gt;::open (1 samples, 0.02%)</title><rect x="87.3491%" y="309" width="0.0241%" height="15" fill="rgb(253,59,4)" fg:x="3618" fg:w="1"/><text x="87.5991%" y="319.50"></text></g><g><title>hx`std::fs::read::inner (1 samples, 0.02%)</title><rect x="87.3491%" y="293" width="0.0241%" height="15" fill="rgb(224,201,9)" fg:x="3618" fg:w="1"/><text x="87.5991%" y="303.50"></text></g><g><title>hx`std::fs::OpenOptions::_open (1 samples, 0.02%)</title><rect x="87.3491%" y="277" width="0.0241%" height="15" fill="rgb(229,206,30)" fg:x="3618" fg:w="1"/><text x="87.5991%" y="287.50"></text></g><g><title>hx`std::sys::unix::fs::File::open_c (1 samples, 0.02%)</title><rect x="87.3491%" y="261" width="0.0241%" height="15" fill="rgb(212,67,47)" fg:x="3618" fg:w="1"/><text x="87.5991%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.02%)</title><rect x="87.3491%" y="245" width="0.0241%" height="15" fill="rgb(211,96,50)" fg:x="3618" fg:w="1"/><text x="87.5991%" y="255.50"></text></g><g><title>hx`git_repository::discover::_&lt;impl git_repository::types::ThreadSafeRepository&gt;::discover_with_environment_overrides_opts (3 samples, 0.07%)</title><rect x="87.3250%" y="373" width="0.0724%" height="15" fill="rgb(252,114,18)" fg:x="3617" fg:w="3"/><text x="87.5750%" y="383.50"></text></g><g><title>hx`git_repository::open::repository::_&lt;impl git_repository::types::ThreadSafeRepository&gt;::open_from_paths (3 samples, 0.07%)</title><rect x="87.3250%" y="357" width="0.0724%" height="15" fill="rgb(223,58,37)" fg:x="3617" fg:w="3"/><text x="87.5750%" y="367.50"></text></g><g><title>hx`git_odb::store_impls::dynamic::load_index::_&lt;impl git_odb::Store&gt;::collect_indices_and_mtime_sorted_by_size (1 samples, 0.02%)</title><rect x="87.3732%" y="341" width="0.0241%" height="15" fill="rgb(237,70,4)" fg:x="3619" fg:w="1"/><text x="87.6232%" y="351.50"></text></g><g><title>hx`git_odb::store_impls::dynamic::load_index::_&lt;impl git_odb::Store&gt;::load_one_index (1 samples, 0.02%)</title><rect x="87.3974%" y="325" width="0.0241%" height="15" fill="rgb(244,85,46)" fg:x="3620" fg:w="1"/><text x="87.6474%" y="335.50"></text></g><g><title>hx`git_odb::store_impls::dynamic::load_index::_&lt;impl git_odb::Store&gt;::load_next_index (1 samples, 0.02%)</title><rect x="87.3974%" y="309" width="0.0241%" height="15" fill="rgb(223,39,52)" fg:x="3620" fg:w="1"/><text x="87.6474%" y="319.50"></text></g><g><title>hx`git_odb::store_impls::dynamic::types::IndexAndPacks::load_index (1 samples, 0.02%)</title><rect x="87.3974%" y="293" width="0.0241%" height="15" fill="rgb(218,200,14)" fg:x="3620" fg:w="1"/><text x="87.6474%" y="303.50"></text></g><g><title>hx`git_pack::index::init::_&lt;impl git_pack::index::File&gt;::at_inner (1 samples, 0.02%)</title><rect x="87.3974%" y="277" width="0.0241%" height="15" fill="rgb(208,171,16)" fg:x="3620" fg:w="1"/><text x="87.6474%" y="287.50"></text></g><g><title>hx`std::fs::OpenOptions::_open (1 samples, 0.02%)</title><rect x="87.3974%" y="261" width="0.0241%" height="15" fill="rgb(234,200,18)" fg:x="3620" fg:w="1"/><text x="87.6474%" y="271.50"></text></g><g><title>hx`std::sys::unix::fs::File::open_c (1 samples, 0.02%)</title><rect x="87.3974%" y="245" width="0.0241%" height="15" fill="rgb(228,45,11)" fg:x="3620" fg:w="1"/><text x="87.6474%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.02%)</title><rect x="87.3974%" y="229" width="0.0241%" height="15" fill="rgb(237,182,11)" fg:x="3620" fg:w="1"/><text x="87.6474%" y="239.50"></text></g><g><title>hx`&lt;helix_vcs::git::Git as helix_vcs::DiffProvider&gt;::get_diff_base (5 samples, 0.12%)</title><rect x="87.3250%" y="389" width="0.1207%" height="15" fill="rgb(241,175,49)" fg:x="3617" fg:w="5"/><text x="87.5750%" y="399.50"></text></g><g><title>hx`git_repository::repository::object::_&lt;impl git_repository::types::Repository&gt;::find_object (2 samples, 0.05%)</title><rect x="87.3974%" y="373" width="0.0483%" height="15" fill="rgb(247,38,35)" fg:x="3620" fg:w="2"/><text x="87.6474%" y="383.50"></text></g><g><title>hx`git_odb::traits::ext::FindExt::find (2 samples, 0.05%)</title><rect x="87.3974%" y="357" width="0.0483%" height="15" fill="rgb(228,39,49)" fg:x="3620" fg:w="2"/><text x="87.6474%" y="367.50"></text></g><g><title>hx`git_odb::store_impls::dynamic::find::_&lt;impl git_odb::store_impls::dynamic::Handle&lt;S&gt;&gt;::try_find_cached_inner (2 samples, 0.05%)</title><rect x="87.3974%" y="341" width="0.0483%" height="15" fill="rgb(226,101,26)" fg:x="3620" fg:w="2"/><text x="87.6474%" y="351.50"></text></g><g><title>hx`git_pack::data::file::decode::entry::_&lt;impl git_pack::data::File&gt;::decode_entry (1 samples, 0.02%)</title><rect x="87.4215%" y="325" width="0.0241%" height="15" fill="rgb(206,141,19)" fg:x="3621" fg:w="1"/><text x="87.6715%" y="335.50"></text></g><g><title>hx`git_pack::data::file::decode::entry::_&lt;impl git_pack::data::File&gt;::decompress_entry_from_data_offset (1 samples, 0.02%)</title><rect x="87.4215%" y="309" width="0.0241%" height="15" fill="rgb(211,200,13)" fg:x="3621" fg:w="1"/><text x="87.6715%" y="319.50"></text></g><g><title>hx`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (1 samples, 0.02%)</title><rect x="87.4215%" y="293" width="0.0241%" height="15" fill="rgb(241,121,6)" fg:x="3621" fg:w="1"/><text x="87.6715%" y="303.50"></text></g><g><title>hx`miniz_oxide::inflate::stream::inflate (1 samples, 0.02%)</title><rect x="87.4215%" y="277" width="0.0241%" height="15" fill="rgb(234,221,29)" fg:x="3621" fg:w="1"/><text x="87.6715%" y="287.50"></text></g><g><title>hx`miniz_oxide::inflate::core::decompress (1 samples, 0.02%)</title><rect x="87.4215%" y="261" width="0.0241%" height="15" fill="rgb(229,136,5)" fg:x="3621" fg:w="1"/><text x="87.6715%" y="271.50"></text></g><g><title>hx`miniz_oxide::inflate::core::transfer (1 samples, 0.02%)</title><rect x="87.4215%" y="245" width="0.0241%" height="15" fill="rgb(238,36,11)" fg:x="3621" fg:w="1"/><text x="87.6715%" y="255.50"></text></g><g><title>hx`ts_parser__reduce (2 samples, 0.05%)</title><rect x="87.4940%" y="277" width="0.0483%" height="15" fill="rgb(251,55,41)" fg:x="3624" fg:w="2"/><text x="87.7440%" y="287.50"></text></g><g><title>hx`ts_stack_pop_count (2 samples, 0.05%)</title><rect x="87.4940%" y="261" width="0.0483%" height="15" fill="rgb(242,34,40)" fg:x="3624" fg:w="2"/><text x="87.7440%" y="271.50"></text></g><g><title>hx`ts_malloc_default (2 samples, 0.05%)</title><rect x="87.4940%" y="245" width="0.0483%" height="15" fill="rgb(215,42,17)" fg:x="3624" fg:w="2"/><text x="87.7440%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.05%)</title><rect x="87.4940%" y="229" width="0.0483%" height="15" fill="rgb(207,44,46)" fg:x="3624" fg:w="2"/><text x="87.7440%" y="239.50"></text></g><g><title>hx`helix_core::syntax::LanguageLayer::parse (5 samples, 0.12%)</title><rect x="87.4457%" y="309" width="0.1207%" height="15" fill="rgb(211,206,28)" fg:x="3622" fg:w="5"/><text x="87.6957%" y="319.50"></text></g><g><title>hx`ts_parser_parse (5 samples, 0.12%)</title><rect x="87.4457%" y="293" width="0.1207%" height="15" fill="rgb(237,167,16)" fg:x="3622" fg:w="5"/><text x="87.6957%" y="303.50"></text></g><g><title>rust.so`ts_lex (1 samples, 0.02%)</title><rect x="87.5423%" y="277" width="0.0241%" height="15" fill="rgb(233,66,6)" fg:x="3626" fg:w="1"/><text x="87.7923%" y="287.50"></text></g><g><title>hx`ts_lexer__do_advance (1 samples, 0.02%)</title><rect x="87.5423%" y="261" width="0.0241%" height="15" fill="rgb(246,123,29)" fg:x="3626" fg:w="1"/><text x="87.7923%" y="271.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (1 samples, 0.02%)</title><rect x="87.5905%" y="277" width="0.0241%" height="15" fill="rgb(209,62,40)" fg:x="3628" fg:w="1"/><text x="87.8405%" y="287.50"></text></g><g><title>hx`helix_term::ui::file_picker::_{{closure}} (13 samples, 0.31%)</title><rect x="87.3250%" y="421" width="0.3139%" height="15" fill="rgb(218,4,25)" fg:x="3617" fg:w="13"/><text x="87.5750%" y="431.50"></text></g><g><title>hx`helix_view::editor::Editor::open (13 samples, 0.31%)</title><rect x="87.3250%" y="405" width="0.3139%" height="15" fill="rgb(253,91,49)" fg:x="3617" fg:w="13"/><text x="87.5750%" y="415.50"></text></g><g><title>hx`helix_view::document::Document::open (8 samples, 0.19%)</title><rect x="87.4457%" y="389" width="0.1931%" height="15" fill="rgb(228,155,29)" fg:x="3622" fg:w="8"/><text x="87.6957%" y="399.50"></text></g><g><title>hx`helix_view::document::Document::set_language (8 samples, 0.19%)</title><rect x="87.4457%" y="373" width="0.1931%" height="15" fill="rgb(243,57,37)" fg:x="3622" fg:w="8"/><text x="87.6957%" y="383.50"></text></g><g><title>hx`helix_core::syntax::Syntax::new (8 samples, 0.19%)</title><rect x="87.4457%" y="357" width="0.1931%" height="15" fill="rgb(244,167,17)" fg:x="3622" fg:w="8"/><text x="87.6957%" y="367.50"></text></g><g><title>hx`helix_core::syntax::Syntax::update (8 samples, 0.19%)</title><rect x="87.4457%" y="341" width="0.1931%" height="15" fill="rgb(207,181,38)" fg:x="3622" fg:w="8"/><text x="87.6957%" y="351.50"></text></g><g><title>hx`std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.19%)</title><rect x="87.4457%" y="325" width="0.1931%" height="15" fill="rgb(211,8,23)" fg:x="3622" fg:w="8"/><text x="87.6957%" y="335.50"></text></g><g><title>hx`ts_query_cursor_next_match (3 samples, 0.07%)</title><rect x="87.5664%" y="309" width="0.0724%" height="15" fill="rgb(235,11,44)" fg:x="3627" fg:w="3"/><text x="87.8164%" y="319.50"></text></g><g><title>hx`ts_query_cursor__advance (3 samples, 0.07%)</title><rect x="87.5664%" y="293" width="0.0724%" height="15" fill="rgb(248,18,52)" fg:x="3627" fg:w="3"/><text x="87.8164%" y="303.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (1 samples, 0.02%)</title><rect x="87.6147%" y="277" width="0.0241%" height="15" fill="rgb(208,4,7)" fg:x="3629" fg:w="1"/><text x="87.8647%" y="287.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (1 samples, 0.02%)</title><rect x="87.6147%" y="261" width="0.0241%" height="15" fill="rgb(240,17,39)" fg:x="3629" fg:w="1"/><text x="87.8647%" y="271.50"></text></g><g><title>hx`fuzzy_matcher::skim::SkimMatcherV2::fuzzy (1 samples, 0.02%)</title><rect x="87.6388%" y="373" width="0.0241%" height="15" fill="rgb(207,170,3)" fg:x="3630" fg:w="1"/><text x="87.8888%" y="383.50"></text></g><g><title>hx`mi_free (1 samples, 0.02%)</title><rect x="87.6388%" y="357" width="0.0241%" height="15" fill="rgb(236,100,52)" fg:x="3630" fg:w="1"/><text x="87.8888%" y="367.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="87.6388%" y="405" width="0.0483%" height="15" fill="rgb(246,78,51)" fg:x="3630" fg:w="2"/><text x="87.8888%" y="415.50"></text></g><g><title>hx`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.05%)</title><rect x="87.6388%" y="389" width="0.0483%" height="15" fill="rgb(211,17,15)" fg:x="3630" fg:w="2"/><text x="87.8888%" y="399.50"></text></g><g><title>hx`helix_term::ui::menu::Item::sort_text (1 samples, 0.02%)</title><rect x="87.6630%" y="373" width="0.0241%" height="15" fill="rgb(209,59,46)" fg:x="3631" fg:w="1"/><text x="87.9130%" y="383.50"></text></g><g><title>hx`std::path::Components::as_path (1 samples, 0.02%)</title><rect x="87.6630%" y="357" width="0.0241%" height="15" fill="rgb(210,92,25)" fg:x="3631" fg:w="1"/><text x="87.9130%" y="367.50"></text></g><g><title>hx`fuzzy_matcher::skim::CharType::of (3 samples, 0.07%)</title><rect x="87.6871%" y="373" width="0.0724%" height="15" fill="rgb(238,174,52)" fg:x="3632" fg:w="3"/><text x="87.9371%" y="383.50"></text></g><g><title>hx`fuzzy_matcher::skim::SkimMatcherV2::fuzzy (2 samples, 0.05%)</title><rect x="87.7595%" y="373" width="0.0483%" height="15" fill="rgb(230,73,7)" fg:x="3635" fg:w="2"/><text x="88.0095%" y="383.50"></text></g><g><title>hx`fuzzy_matcher::util::cheap_matches (1 samples, 0.02%)</title><rect x="87.7837%" y="357" width="0.0241%" height="15" fill="rgb(243,124,40)" fg:x="3636" fg:w="1"/><text x="88.0337%" y="367.50"></text></g><g><title>hx`helix_tui::text::_&lt;impl core::convert::From&lt;&amp;helix_tui::text::Text&gt; for alloc::string::String&gt;::from (1 samples, 0.02%)</title><rect x="87.8078%" y="341" width="0.0241%" height="15" fill="rgb(244,170,11)" fg:x="3637" fg:w="1"/><text x="88.0578%" y="351.50"></text></g><g><title>hx`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="87.8078%" y="325" width="0.0241%" height="15" fill="rgb(207,114,54)" fg:x="3637" fg:w="1"/><text x="88.0578%" y="335.50"></text></g><g><title>hx`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="87.8078%" y="309" width="0.0241%" height="15" fill="rgb(205,42,20)" fg:x="3637" fg:w="1"/><text x="88.0578%" y="319.50"></text></g><g><title>hx`&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="87.8078%" y="357" width="0.0483%" height="15" fill="rgb(230,30,28)" fg:x="3637" fg:w="2"/><text x="88.0578%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="87.8320%" y="341" width="0.0241%" height="15" fill="rgb(205,73,54)" fg:x="3638" fg:w="1"/><text x="88.0820%" y="351.50"></text></g><g><title>hx`&lt;helix_tui::widgets::table::Row as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.02%)</title><rect x="87.8561%" y="357" width="0.0241%" height="15" fill="rgb(254,227,23)" fg:x="3639" fg:w="1"/><text x="88.1061%" y="367.50"></text></g><g><title>hx`&lt;helix_tui::text::Text as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (1 samples, 0.02%)</title><rect x="87.8561%" y="341" width="0.0241%" height="15" fill="rgb(228,202,34)" fg:x="3639" fg:w="1"/><text x="88.1061%" y="351.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="87.8561%" y="325" width="0.0241%" height="15" fill="rgb(222,225,37)" fg:x="3639" fg:w="1"/><text x="88.1061%" y="335.50"></text></g><g><title>hx`&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="87.8561%" y="309" width="0.0241%" height="15" fill="rgb(221,14,54)" fg:x="3639" fg:w="1"/><text x="88.1061%" y="319.50"></text></g><g><title>hx`&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="87.8803%" y="357" width="0.0241%" height="15" fill="rgb(254,102,2)" fg:x="3640" fg:w="1"/><text x="88.1303%" y="367.50"></text></g><g><title>hx`&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="87.9044%" y="341" width="0.0241%" height="15" fill="rgb(232,104,17)" fg:x="3641" fg:w="1"/><text x="88.1544%" y="351.50"></text></g><g><title>hx`helix_term::ui::menu::Item::sort_text (6 samples, 0.14%)</title><rect x="87.8078%" y="373" width="0.1449%" height="15" fill="rgb(250,220,14)" fg:x="3637" fg:w="6"/><text x="88.0578%" y="383.50"></text></g><g><title>hx`std::path::Path::_strip_prefix (2 samples, 0.05%)</title><rect x="87.9044%" y="357" width="0.0483%" height="15" fill="rgb(241,158,9)" fg:x="3641" fg:w="2"/><text x="88.1544%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.02%)</title><rect x="87.9285%" y="341" width="0.0241%" height="15" fill="rgb(246,9,43)" fg:x="3642" fg:w="1"/><text x="88.1785%" y="351.50"></text></g><g><title>hx`helix_term::ui::picker::Picker&lt;T&gt;::prompt_handle_event (14 samples, 0.34%)</title><rect x="87.6388%" y="421" width="0.3380%" height="15" fill="rgb(206,73,33)" fg:x="3630" fg:w="14"/><text x="87.8888%" y="431.50"></text></g><g><title>hx`alloc::vec::Vec&lt;T,A&gt;::retain_mut (12 samples, 0.29%)</title><rect x="87.6871%" y="405" width="0.2897%" height="15" fill="rgb(222,79,8)" fg:x="3632" fg:w="12"/><text x="87.9371%" y="415.50"></text></g><g><title>hx`helix_term::ui::picker::Picker&lt;T&gt;::score::_{{closure}} (12 samples, 0.29%)</title><rect x="87.6871%" y="389" width="0.2897%" height="15" fill="rgb(234,8,54)" fg:x="3632" fg:w="12"/><text x="87.9371%" y="399.50"></text></g><g><title>hx`mi_free (1 samples, 0.02%)</title><rect x="87.9527%" y="373" width="0.0241%" height="15" fill="rgb(209,134,38)" fg:x="3643" fg:w="1"/><text x="88.2027%" y="383.50"></text></g><g><title>hx`stack_node_release (1 samples, 0.02%)</title><rect x="88.3631%" y="325" width="0.0241%" height="15" fill="rgb(230,127,29)" fg:x="3660" fg:w="1"/><text x="88.6131%" y="335.50"></text></g><g><title>hx`ts_lexer__eof (1 samples, 0.02%)</title><rect x="88.3873%" y="325" width="0.0241%" height="15" fill="rgb(242,44,41)" fg:x="3661" fg:w="1"/><text x="88.6373%" y="335.50"></text></g><g><title>hx`ts_lexer__mark_end (1 samples, 0.02%)</title><rect x="88.4114%" y="325" width="0.0241%" height="15" fill="rgb(222,56,43)" fg:x="3662" fg:w="1"/><text x="88.6614%" y="335.50"></text></g><g><title>hx`ts_parser__accept (1 samples, 0.02%)</title><rect x="88.4355%" y="325" width="0.0241%" height="15" fill="rgb(238,39,47)" fg:x="3663" fg:w="1"/><text x="88.6855%" y="335.50"></text></g><g><title>hx`ts_stack_pop_all (1 samples, 0.02%)</title><rect x="88.4355%" y="309" width="0.0241%" height="15" fill="rgb(226,79,43)" fg:x="3663" fg:w="1"/><text x="88.6855%" y="319.50"></text></g><g><title>hx`ts_parser__do_all_potential_reductions (5 samples, 0.12%)</title><rect x="88.4597%" y="325" width="0.1207%" height="15" fill="rgb(242,105,53)" fg:x="3664" fg:w="5"/><text x="88.7097%" y="335.50"></text></g><g><title>hx`ts_stack_can_merge (2 samples, 0.05%)</title><rect x="88.7253%" y="309" width="0.0483%" height="15" fill="rgb(251,132,46)" fg:x="3675" fg:w="2"/><text x="88.9753%" y="319.50"></text></g><g><title>hx`ts_malloc_default (1 samples, 0.02%)</title><rect x="88.9184%" y="293" width="0.0241%" height="15" fill="rgb(231,77,14)" fg:x="3683" fg:w="1"/><text x="89.1684%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="88.9184%" y="277" width="0.0241%" height="15" fill="rgb(240,135,9)" fg:x="3683" fg:w="1"/><text x="89.1684%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="88.9184%" y="261" width="0.0241%" height="15" fill="rgb(248,109,14)" fg:x="3683" fg:w="1"/><text x="89.1684%" y="271.50"></text></g><g><title>hx`ts_stack_pop_count (11 samples, 0.27%)</title><rect x="88.7735%" y="309" width="0.2656%" height="15" fill="rgb(227,146,52)" fg:x="3677" fg:w="11"/><text x="89.0235%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.10%)</title><rect x="88.9425%" y="293" width="0.0966%" height="15" fill="rgb(232,54,3)" fg:x="3684" fg:w="4"/><text x="89.1925%" y="303.50"></text></g><g><title>hx`ts_stack_push (1 samples, 0.02%)</title><rect x="89.0391%" y="309" width="0.0241%" height="15" fill="rgb(229,201,43)" fg:x="3688" fg:w="1"/><text x="89.2891%" y="319.50"></text></g><g><title>hx`ts_parser__reduce (31 samples, 0.75%)</title><rect x="88.5804%" y="325" width="0.7484%" height="15" fill="rgb(252,161,33)" fg:x="3669" fg:w="31"/><text x="88.8304%" y="335.50"></text></g><g><title>hx`ts_subtree_new_node (11 samples, 0.27%)</title><rect x="89.0633%" y="309" width="0.2656%" height="15" fill="rgb(226,146,40)" fg:x="3689" fg:w="11"/><text x="89.3133%" y="319.50"></text></g><g><title>hx`ts_subtree_summarize_children (9 samples, 0.22%)</title><rect x="89.1115%" y="293" width="0.2173%" height="15" fill="rgb(219,47,25)" fg:x="3691" fg:w="9"/><text x="89.3615%" y="303.50"></text></g><g><title>hx`ts_stack_can_merge (1 samples, 0.02%)</title><rect x="89.3288%" y="325" width="0.0241%" height="15" fill="rgb(250,135,13)" fg:x="3700" fg:w="1"/><text x="89.5788%" y="335.50"></text></g><g><title>hx`ts_stack_push (2 samples, 0.05%)</title><rect x="89.3530%" y="325" width="0.0483%" height="15" fill="rgb(219,229,18)" fg:x="3701" fg:w="2"/><text x="89.6030%" y="335.50"></text></g><g><title>hx`ts_subtree_release (1 samples, 0.02%)</title><rect x="89.4013%" y="293" width="0.0241%" height="15" fill="rgb(217,152,27)" fg:x="3703" fg:w="1"/><text x="89.6513%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="89.4013%" y="277" width="0.0241%" height="15" fill="rgb(225,71,47)" fg:x="3703" fg:w="1"/><text x="89.6513%" y="287.50"></text></g><g><title>hx`ts_stack_remove_version (2 samples, 0.05%)</title><rect x="89.4013%" y="325" width="0.0483%" height="15" fill="rgb(220,139,14)" fg:x="3703" fg:w="2"/><text x="89.6513%" y="335.50"></text></g><g><title>hx`stack_node_release (2 samples, 0.05%)</title><rect x="89.4013%" y="309" width="0.0483%" height="15" fill="rgb(247,54,32)" fg:x="3703" fg:w="2"/><text x="89.6513%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="89.4254%" y="293" width="0.0241%" height="15" fill="rgb(252,131,39)" fg:x="3704" fg:w="1"/><text x="89.6754%" y="303.50"></text></g><g><title>hx`stack_node_release (2 samples, 0.05%)</title><rect x="89.5220%" y="309" width="0.0483%" height="15" fill="rgb(210,108,39)" fg:x="3708" fg:w="2"/><text x="89.7720%" y="319.50"></text></g><g><title>hx`ts_subtree_release (1 samples, 0.02%)</title><rect x="89.5461%" y="293" width="0.0241%" height="15" fill="rgb(205,23,29)" fg:x="3709" fg:w="1"/><text x="89.7961%" y="303.50"></text></g><g><title>hx`ts_stack_renumber_version (6 samples, 0.14%)</title><rect x="89.4495%" y="325" width="0.1449%" height="15" fill="rgb(246,139,46)" fg:x="3705" fg:w="6"/><text x="89.6995%" y="335.50"></text></g><g><title>hx`ts_subtree_release (1 samples, 0.02%)</title><rect x="89.5703%" y="309" width="0.0241%" height="15" fill="rgb(250,81,26)" fg:x="3710" fg:w="1"/><text x="89.8203%" y="319.50"></text></g><g><title>hx`ts_subtree_balance (6 samples, 0.14%)</title><rect x="89.5944%" y="325" width="0.1449%" height="15" fill="rgb(214,104,7)" fg:x="3711" fg:w="6"/><text x="89.8444%" y="335.50"></text></g><g><title>hx`ts_subtree_summarize_children (4 samples, 0.10%)</title><rect x="89.6427%" y="309" width="0.0966%" height="15" fill="rgb(233,189,8)" fg:x="3713" fg:w="4"/><text x="89.8927%" y="319.50"></text></g><g><title>hx`ts_subtree_new_leaf (1 samples, 0.02%)</title><rect x="89.7393%" y="325" width="0.0241%" height="15" fill="rgb(228,141,17)" fg:x="3717" fg:w="1"/><text x="89.9893%" y="335.50"></text></g><g><title>markdown.so`ts_lex (2 samples, 0.05%)</title><rect x="89.7634%" y="325" width="0.0483%" height="15" fill="rgb(247,157,1)" fg:x="3718" fg:w="2"/><text x="90.0134%" y="335.50"></text></g><g><title>hx`ts_parser_parse (79 samples, 1.91%)</title><rect x="87.9768%" y="341" width="1.9073%" height="15" fill="rgb(249,225,5)" fg:x="3644" fg:w="79"/><text x="88.2268%" y="351.50">h..</text></g><g><title>markdown_inline.so`ts_lex (3 samples, 0.07%)</title><rect x="89.8117%" y="325" width="0.0724%" height="15" fill="rgb(242,55,13)" fg:x="3720" fg:w="3"/><text x="90.0617%" y="335.50"></text></g><g><title>hx`helix_core::syntax::LanguageLayer::parse (80 samples, 1.93%)</title><rect x="87.9768%" y="357" width="1.9314%" height="15" fill="rgb(230,49,50)" fg:x="3644" fg:w="80"/><text x="88.2268%" y="367.50">h..</text></g><g><title>hx`ts_stack_push (1 samples, 0.02%)</title><rect x="89.8841%" y="341" width="0.0241%" height="15" fill="rgb(241,111,38)" fg:x="3723" fg:w="1"/><text x="90.1341%" y="351.50"></text></g><g><title>hx`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="89.9083%" y="341" width="0.0241%" height="15" fill="rgb(252,155,4)" fg:x="3724" fg:w="1"/><text x="90.1583%" y="351.50"></text></g><g><title>hx`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="89.9083%" y="325" width="0.0241%" height="15" fill="rgb(212,69,32)" fg:x="3724" fg:w="1"/><text x="90.1583%" y="335.50"></text></g><g><title>hx`_mi_malloc_generic (1 samples, 0.02%)</title><rect x="89.9083%" y="309" width="0.0241%" height="15" fill="rgb(243,107,47)" fg:x="3724" fg:w="1"/><text x="90.1583%" y="319.50"></text></g><g><title>hx`mi_find_page (1 samples, 0.02%)</title><rect x="89.9083%" y="293" width="0.0241%" height="15" fill="rgb(247,130,12)" fg:x="3724" fg:w="1"/><text x="90.1583%" y="303.50"></text></g><g><title>hx`helix_core::syntax::intersect_ranges (2 samples, 0.05%)</title><rect x="89.9083%" y="357" width="0.0483%" height="15" fill="rgb(233,74,16)" fg:x="3724" fg:w="2"/><text x="90.1583%" y="367.50"></text></g><g><title>hx`ts_tree_cursor_current_node (1 samples, 0.02%)</title><rect x="89.9324%" y="341" width="0.0241%" height="15" fill="rgb(208,58,18)" fg:x="3725" fg:w="1"/><text x="90.1824%" y="351.50"></text></g><g><title>hx`helix_core::syntax::HighlightConfiguration::new (10 samples, 0.24%)</title><rect x="89.9565%" y="293" width="0.2414%" height="15" fill="rgb(242,225,1)" fg:x="3726" fg:w="10"/><text x="90.2065%" y="303.50"></text></g><g><title>hx`tree_sitter::Query::new (10 samples, 0.24%)</title><rect x="89.9565%" y="277" width="0.2414%" height="15" fill="rgb(249,39,40)" fg:x="3726" fg:w="10"/><text x="90.2065%" y="287.50"></text></g><g><title>hx`ts_query_new (10 samples, 0.24%)</title><rect x="89.9565%" y="261" width="0.2414%" height="15" fill="rgb(207,72,44)" fg:x="3726" fg:w="10"/><text x="90.2065%" y="271.50"></text></g><g><title>hx`once_cell::imp::OnceCell&lt;T&gt;::initialize (11 samples, 0.27%)</title><rect x="89.9565%" y="357" width="0.2656%" height="15" fill="rgb(215,193,12)" fg:x="3726" fg:w="11"/><text x="90.2065%" y="367.50"></text></g><g><title>hx`once_cell::imp::initialize_or_wait (11 samples, 0.27%)</title><rect x="89.9565%" y="341" width="0.2656%" height="15" fill="rgb(248,41,39)" fg:x="3726" fg:w="11"/><text x="90.2065%" y="351.50"></text></g><g><title>hx`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (11 samples, 0.27%)</title><rect x="89.9565%" y="325" width="0.2656%" height="15" fill="rgb(253,85,4)" fg:x="3726" fg:w="11"/><text x="90.2065%" y="335.50"></text></g><g><title>hx`helix_core::syntax::LanguageConfiguration::initialize_highlight (11 samples, 0.27%)</title><rect x="89.9565%" y="309" width="0.2656%" height="15" fill="rgb(243,70,31)" fg:x="3726" fg:w="11"/><text x="90.2065%" y="319.50"></text></g><g><title>hx`helix_core::syntax::read_query (1 samples, 0.02%)</title><rect x="90.1980%" y="293" width="0.0241%" height="15" fill="rgb(253,195,26)" fg:x="3736" fg:w="1"/><text x="90.4480%" y="303.50"></text></g><g><title>hx`helix_loader::grammar::load_runtime_file (1 samples, 0.02%)</title><rect x="90.1980%" y="277" width="0.0241%" height="15" fill="rgb(243,42,11)" fg:x="3736" fg:w="1"/><text x="90.4480%" y="287.50"></text></g><g><title>hx`std::fs::read_to_string::inner (1 samples, 0.02%)</title><rect x="90.1980%" y="261" width="0.0241%" height="15" fill="rgb(239,66,17)" fg:x="3736" fg:w="1"/><text x="90.4480%" y="271.50"></text></g><g><title>hx`&lt;std::fs::File as std::io::Read&gt;::read_to_string (1 samples, 0.02%)</title><rect x="90.1980%" y="245" width="0.0241%" height="15" fill="rgb(217,132,21)" fg:x="3736" fg:w="1"/><text x="90.4480%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`read (1 samples, 0.02%)</title><rect x="90.1980%" y="229" width="0.0241%" height="15" fill="rgb(252,202,21)" fg:x="3736" fg:w="1"/><text x="90.4480%" y="239.50"></text></g><g><title>hx`regex::re_unicode::Regex::find_at (1 samples, 0.02%)</title><rect x="90.2221%" y="357" width="0.0241%" height="15" fill="rgb(233,98,36)" fg:x="3737" fg:w="1"/><text x="90.4721%" y="367.50"></text></g><g><title>hx`memchr::memmem::Finder::find (1 samples, 0.02%)</title><rect x="90.2221%" y="341" width="0.0241%" height="15" fill="rgb(216,153,54)" fg:x="3737" fg:w="1"/><text x="90.4721%" y="351.50"></text></g><g><title>hx`ts_query_cursor__capture (1 samples, 0.02%)</title><rect x="90.3670%" y="325" width="0.0241%" height="15" fill="rgb(250,99,7)" fg:x="3743" fg:w="1"/><text x="90.6170%" y="335.50"></text></g><g><title>hx`ts_query_cursor__prepare_to_capture (1 samples, 0.02%)</title><rect x="90.3670%" y="309" width="0.0241%" height="15" fill="rgb(207,56,50)" fg:x="3743" fg:w="1"/><text x="90.6170%" y="319.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (6 samples, 0.14%)</title><rect x="90.3911%" y="325" width="0.1449%" height="15" fill="rgb(244,61,34)" fg:x="3744" fg:w="6"/><text x="90.6411%" y="335.50"></text></g><g><title>hx`ts_query_cursor__advance (18 samples, 0.43%)</title><rect x="90.2463%" y="341" width="0.4346%" height="15" fill="rgb(241,50,38)" fg:x="3738" fg:w="18"/><text x="90.4963%" y="351.50"></text></g><g><title>hx`ts_tree_cursor_goto_next_sibling (6 samples, 0.14%)</title><rect x="90.5360%" y="325" width="0.1449%" height="15" fill="rgb(212,166,30)" fg:x="3750" fg:w="6"/><text x="90.7860%" y="335.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (4 samples, 0.10%)</title><rect x="90.5843%" y="309" width="0.0966%" height="15" fill="rgb(249,127,32)" fg:x="3752" fg:w="4"/><text x="90.8343%" y="319.50"></text></g><g><title>hx`helix_core::syntax::Syntax::new (114 samples, 2.75%)</title><rect x="87.9768%" y="405" width="2.7523%" height="15" fill="rgb(209,103,0)" fg:x="3644" fg:w="114"/><text x="88.2268%" y="415.50">hx..</text></g><g><title>hx`helix_core::syntax::Syntax::update (114 samples, 2.75%)</title><rect x="87.9768%" y="389" width="2.7523%" height="15" fill="rgb(238,209,51)" fg:x="3644" fg:w="114"/><text x="88.2268%" y="399.50">hx..</text></g><g><title>hx`std::thread::local::LocalKey&lt;T&gt;::with (114 samples, 2.75%)</title><rect x="87.9768%" y="373" width="2.7523%" height="15" fill="rgb(237,56,23)" fg:x="3644" fg:w="114"/><text x="88.2268%" y="383.50">hx..</text></g><g><title>hx`ts_query_cursor_next_match (20 samples, 0.48%)</title><rect x="90.2463%" y="357" width="0.4829%" height="15" fill="rgb(215,153,46)" fg:x="3738" fg:w="20"/><text x="90.4963%" y="367.50"></text></g><g><title>hx`ts_tree_cursor_current_status (2 samples, 0.05%)</title><rect x="90.6808%" y="341" width="0.0483%" height="15" fill="rgb(224,49,31)" fg:x="3756" fg:w="2"/><text x="90.9308%" y="351.50"></text></g><g><title>hx`ts_query__parse_pattern (1 samples, 0.02%)</title><rect x="92.3708%" y="293" width="0.0241%" height="15" fill="rgb(250,18,42)" fg:x="3826" fg:w="1"/><text x="92.6208%" y="303.50"></text></g><g><title>hx`ts_query__parse_pattern (1 samples, 0.02%)</title><rect x="92.3708%" y="277" width="0.0241%" height="15" fill="rgb(215,176,39)" fg:x="3826" fg:w="1"/><text x="92.6208%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.02%)</title><rect x="92.3950%" y="261" width="0.0241%" height="15" fill="rgb(223,77,29)" fg:x="3827" fg:w="1"/><text x="92.6450%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.02%)</title><rect x="92.3950%" y="245" width="0.0241%" height="15" fill="rgb(234,94,52)" fg:x="3827" fg:w="1"/><text x="92.6450%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="92.3950%" y="229" width="0.0241%" height="15" fill="rgb(220,154,50)" fg:x="3827" fg:w="1"/><text x="92.6450%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="92.3950%" y="213" width="0.0241%" height="15" fill="rgb(212,11,10)" fg:x="3827" fg:w="1"/><text x="92.6450%" y="223.50"></text></g><g><title>hx`helix_core::syntax::HighlightConfiguration::new (71 samples, 1.71%)</title><rect x="90.7291%" y="341" width="1.7141%" height="15" fill="rgb(205,166,19)" fg:x="3758" fg:w="71"/><text x="90.9791%" y="351.50"></text></g><g><title>hx`tree_sitter::Query::new (71 samples, 1.71%)</title><rect x="90.7291%" y="325" width="1.7141%" height="15" fill="rgb(244,198,16)" fg:x="3758" fg:w="71"/><text x="90.9791%" y="335.50"></text></g><g><title>hx`ts_query_new (71 samples, 1.71%)</title><rect x="90.7291%" y="309" width="1.7141%" height="15" fill="rgb(219,69,12)" fg:x="3758" fg:w="71"/><text x="90.9791%" y="319.50"></text></g><g><title>hx`ts_realloc_default (2 samples, 0.05%)</title><rect x="92.3950%" y="293" width="0.0483%" height="15" fill="rgb(245,30,7)" fg:x="3827" fg:w="2"/><text x="92.6450%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.05%)</title><rect x="92.3950%" y="277" width="0.0483%" height="15" fill="rgb(218,221,48)" fg:x="3827" fg:w="2"/><text x="92.6450%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.02%)</title><rect x="92.4191%" y="261" width="0.0241%" height="15" fill="rgb(216,66,15)" fg:x="3828" fg:w="1"/><text x="92.6691%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="92.4191%" y="245" width="0.0241%" height="15" fill="rgb(226,122,50)" fg:x="3828" fg:w="1"/><text x="92.6691%" y="255.50"></text></g><g><title>hx`helix_core::syntax::read_query (1 samples, 0.02%)</title><rect x="92.4433%" y="341" width="0.0241%" height="15" fill="rgb(239,156,16)" fg:x="3829" fg:w="1"/><text x="92.6933%" y="351.50"></text></g><g><title>hx`helix_loader::grammar::load_runtime_file (1 samples, 0.02%)</title><rect x="92.4433%" y="325" width="0.0241%" height="15" fill="rgb(224,27,38)" fg:x="3829" fg:w="1"/><text x="92.6933%" y="335.50"></text></g><g><title>hx`std::fs::read_to_string::inner (1 samples, 0.02%)</title><rect x="92.4433%" y="309" width="0.0241%" height="15" fill="rgb(224,39,27)" fg:x="3829" fg:w="1"/><text x="92.6933%" y="319.50"></text></g><g><title>hx`std::fs::OpenOptions::_open (1 samples, 0.02%)</title><rect x="92.4433%" y="293" width="0.0241%" height="15" fill="rgb(215,92,29)" fg:x="3829" fg:w="1"/><text x="92.6933%" y="303.50"></text></g><g><title>hx`std::sys::unix::fs::File::open_c (1 samples, 0.02%)</title><rect x="92.4433%" y="277" width="0.0241%" height="15" fill="rgb(207,159,16)" fg:x="3829" fg:w="1"/><text x="92.6933%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.02%)</title><rect x="92.4433%" y="261" width="0.0241%" height="15" fill="rgb(238,163,47)" fg:x="3829" fg:w="1"/><text x="92.6933%" y="271.50"></text></g><g><title>dyld`dyld4::Loader::getLoader (1 samples, 0.02%)</title><rect x="92.4674%" y="277" width="0.0241%" height="15" fill="rgb(219,91,49)" fg:x="3830" fg:w="1"/><text x="92.7174%" y="287.50"></text></g><g><title>dyld`dyld4::Loader::forEachPath(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, void  (1 samples, 0.02%)</title><rect x="92.4674%" y="261" width="0.0241%" height="15" fill="rgb(227,167,31)" fg:x="3830" fg:w="1"/><text x="92.7174%" y="271.50"></text></g><g><title>dyld`dyld4::ProcessConfig::PathOverrides::forEachPathVariant(char const*, dyld3::Platform, bool, bool, bool&amp;, void  (1 samples, 0.02%)</title><rect x="92.4674%" y="245" width="0.0241%" height="15" fill="rgb(234,80,54)" fg:x="3830" fg:w="1"/><text x="92.7174%" y="255.50"></text></g><g><title>dyld`dyld4::Loader::forEachResolvedAtPathVar(dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;, void  (1 samples, 0.02%)</title><rect x="92.4674%" y="229" width="0.0241%" height="15" fill="rgb(212,114,2)" fg:x="3830" fg:w="1"/><text x="92.7174%" y="239.50"></text></g><g><title>dyld`invocation function for block in dyld4::Loader::getLoader (1 samples, 0.02%)</title><rect x="92.4674%" y="213" width="0.0241%" height="15" fill="rgb(234,50,24)" fg:x="3830" fg:w="1"/><text x="92.7174%" y="223.50"></text></g><g><title>dyld`dyld4::JustInTimeLoader::makeJustInTimeLoaderDisk (1 samples, 0.02%)</title><rect x="92.4674%" y="197" width="0.0241%" height="15" fill="rgb(221,68,8)" fg:x="3830" fg:w="1"/><text x="92.7174%" y="207.50"></text></g><g><title>dyld`dyld4::SyscallDelegate::withReadOnlyMappedFile(Diagnostics&amp;, char const*, bool, void  (1 samples, 0.02%)</title><rect x="92.4674%" y="181" width="0.0241%" height="15" fill="rgb(254,180,31)" fg:x="3830" fg:w="1"/><text x="92.7174%" y="191.50"></text></g><g><title>dyld`__mmap (1 samples, 0.02%)</title><rect x="92.4674%" y="165" width="0.0241%" height="15" fill="rgb(247,130,50)" fg:x="3830" fg:w="1"/><text x="92.7174%" y="175.50"></text></g><g><title>hx`&lt;helix_term::ui::picker::FilePicker&lt;T&gt; as helix_term::compositor::Component&gt;::handle_event (215 samples, 5.19%)</title><rect x="87.3250%" y="437" width="5.1907%" height="15" fill="rgb(211,109,4)" fg:x="3617" fg:w="215"/><text x="87.5750%" y="447.50">hx`&lt;he..</text></g><g><title>hx`helix_view::document::Document::set_language (188 samples, 4.54%)</title><rect x="87.9768%" y="421" width="4.5389%" height="15" fill="rgb(238,50,21)" fg:x="3644" fg:w="188"/><text x="88.2268%" y="431.50">hx`he..</text></g><g><title>hx`once_cell::imp::OnceCell&lt;T&gt;::initialize (74 samples, 1.79%)</title><rect x="90.7291%" y="405" width="1.7866%" height="15" fill="rgb(225,57,45)" fg:x="3758" fg:w="74"/><text x="90.9791%" y="415.50">h..</text></g><g><title>hx`once_cell::imp::initialize_or_wait (74 samples, 1.79%)</title><rect x="90.7291%" y="389" width="1.7866%" height="15" fill="rgb(209,196,50)" fg:x="3758" fg:w="74"/><text x="90.9791%" y="399.50">h..</text></g><g><title>hx`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (74 samples, 1.79%)</title><rect x="90.7291%" y="373" width="1.7866%" height="15" fill="rgb(242,140,13)" fg:x="3758" fg:w="74"/><text x="90.9791%" y="383.50">h..</text></g><g><title>hx`helix_core::syntax::LanguageConfiguration::initialize_highlight (74 samples, 1.79%)</title><rect x="90.7291%" y="357" width="1.7866%" height="15" fill="rgb(217,111,7)" fg:x="3758" fg:w="74"/><text x="90.9791%" y="367.50">h..</text></g><g><title>hx`helix_loader::grammar::get_language (2 samples, 0.05%)</title><rect x="92.4674%" y="341" width="0.0483%" height="15" fill="rgb(253,193,51)" fg:x="3830" fg:w="2"/><text x="92.7174%" y="351.50"></text></g><g><title>hx`libloading::os::unix::Library::open (2 samples, 0.05%)</title><rect x="92.4674%" y="325" width="0.0483%" height="15" fill="rgb(252,70,29)" fg:x="3830" fg:w="2"/><text x="92.7174%" y="335.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (2 samples, 0.05%)</title><rect x="92.4674%" y="309" width="0.0483%" height="15" fill="rgb(232,127,12)" fg:x="3830" fg:w="2"/><text x="92.7174%" y="319.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator() (2 samples, 0.05%)</title><rect x="92.4674%" y="293" width="0.0483%" height="15" fill="rgb(211,180,21)" fg:x="3830" fg:w="2"/><text x="92.7174%" y="303.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyDebuggerLoad(std::__1::span (1 samples, 0.02%)</title><rect x="92.4915%" y="277" width="0.0241%" height="15" fill="rgb(229,72,13)" fg:x="3831" fg:w="1"/><text x="92.7415%" y="287.50"></text></g><g><title>dyld`dyld4::RuntimeState::commitProcessSnapshot (1 samples, 0.02%)</title><rect x="92.4915%" y="261" width="0.0241%" height="15" fill="rgb(240,211,49)" fg:x="3831" fg:w="1"/><text x="92.7415%" y="271.50"></text></g><g><title>dyld`dyld4::Atlas::ProcessSnapshot::serialize (1 samples, 0.02%)</title><rect x="92.4915%" y="245" width="0.0241%" height="15" fill="rgb(219,149,40)" fg:x="3831" fg:w="1"/><text x="92.7415%" y="255.50"></text></g><g><title>dyld`dyld4::Atlas::ProcessSnapshot::Serializer::serialize (1 samples, 0.02%)</title><rect x="92.4915%" y="229" width="0.0241%" height="15" fill="rgb(210,127,46)" fg:x="3831" fg:w="1"/><text x="92.7415%" y="239.50"></text></g><g><title>dyld`lsl::OrderedSet&lt;char const*, lsl::ConstCharStarCompare&gt;::insert (1 samples, 0.02%)</title><rect x="92.4915%" y="213" width="0.0241%" height="15" fill="rgb(220,106,7)" fg:x="3831" fg:w="1"/><text x="92.7415%" y="223.50"></text></g><g><title>dyld`lsl::BTree&lt;char const*, lsl::ConstCharStarCompare, false&gt;::insert_internal(lsl::BTree (1 samples, 0.02%)</title><rect x="92.4915%" y="197" width="0.0241%" height="15" fill="rgb(249,31,22)" fg:x="3831" fg:w="1"/><text x="92.7415%" y="207.50"></text></g><g><title>dyld`lsl::BTree&lt;char const*, lsl::ConstCharStarCompare, false&gt;::lower_bound (1 samples, 0.02%)</title><rect x="92.4915%" y="181" width="0.0241%" height="15" fill="rgb(253,1,49)" fg:x="3831" fg:w="1"/><text x="92.7415%" y="191.50"></text></g><g><title>dyld`lsl::BTree&lt;char const*, lsl::ConstCharStarCompare, false&gt;::const_iterator::materializeNodes (1 samples, 0.02%)</title><rect x="92.4915%" y="165" width="0.0241%" height="15" fill="rgb(227,144,33)" fg:x="3831" fg:w="1"/><text x="92.7415%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.07%)</title><rect x="92.7571%" y="293" width="0.0724%" height="15" fill="rgb(249,163,44)" fg:x="3842" fg:w="3"/><text x="93.0071%" y="303.50"></text></g><g><title>hx`ts_subtree_release (15 samples, 0.36%)</title><rect x="92.5157%" y="309" width="0.3621%" height="15" fill="rgb(234,15,39)" fg:x="3832" fg:w="15"/><text x="92.7657%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (2 samples, 0.05%)</title><rect x="92.8296%" y="293" width="0.0483%" height="15" fill="rgb(207,66,16)" fg:x="3845" fg:w="2"/><text x="93.0796%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (2 samples, 0.05%)</title><rect x="92.8296%" y="277" width="0.0483%" height="15" fill="rgb(233,112,24)" fg:x="3845" fg:w="2"/><text x="93.0796%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.05%)</title><rect x="92.8296%" y="261" width="0.0483%" height="15" fill="rgb(230,90,22)" fg:x="3845" fg:w="2"/><text x="93.0796%" y="271.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;helix_term::ui::overlay::Overlay&lt;helix_term::ui::picker::FilePicker&lt;std::path::PathBuf&gt;&gt;&gt; (17 samples, 0.41%)</title><rect x="92.5157%" y="421" width="0.4104%" height="15" fill="rgb(229,61,13)" fg:x="3832" fg:w="17"/><text x="92.7657%" y="431.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;helix_term::ui::picker::FilePicker&lt;std::path::PathBuf&gt;&gt; (17 samples, 0.41%)</title><rect x="92.5157%" y="405" width="0.4104%" height="15" fill="rgb(225,57,24)" fg:x="3832" fg:w="17"/><text x="92.7657%" y="415.50"></text></g><g><title>hx`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.41%)</title><rect x="92.5157%" y="389" width="0.4104%" height="15" fill="rgb(208,169,48)" fg:x="3832" fg:w="17"/><text x="92.7657%" y="399.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;helix_term::ui::picker::CachedPreview&gt; (17 samples, 0.41%)</title><rect x="92.5157%" y="373" width="0.4104%" height="15" fill="rgb(244,218,51)" fg:x="3832" fg:w="17"/><text x="92.7657%" y="383.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;core::option::Option&lt;helix_core::syntax::Syntax&gt;&gt; (17 samples, 0.41%)</title><rect x="92.5157%" y="357" width="0.4104%" height="15" fill="rgb(214,148,10)" fg:x="3832" fg:w="17"/><text x="92.7657%" y="367.50"></text></g><g><title>hx`&lt;slotmap::hop::Slot&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.41%)</title><rect x="92.5157%" y="341" width="0.4104%" height="15" fill="rgb(225,174,27)" fg:x="3832" fg:w="17"/><text x="92.7657%" y="351.50"></text></g><g><title>hx`ts_tree_delete (17 samples, 0.41%)</title><rect x="92.5157%" y="325" width="0.4104%" height="15" fill="rgb(230,96,26)" fg:x="3832" fg:w="17"/><text x="92.7657%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.05%)</title><rect x="92.8778%" y="309" width="0.0483%" height="15" fill="rgb(232,10,30)" fg:x="3847" fg:w="2"/><text x="93.1278%" y="319.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="92.9261%" y="389" width="0.0241%" height="15" fill="rgb(222,8,50)" fg:x="3849" fg:w="1"/><text x="93.1761%" y="399.50"></text></g><g><title>hx`helix_term::ui::explorer::dir_entry_to_file_info (1 samples, 0.02%)</title><rect x="92.9261%" y="373" width="0.0241%" height="15" fill="rgb(213,81,27)" fg:x="3849" fg:w="1"/><text x="93.1761%" y="383.50"></text></g><g><title>hx`std::path::Path::_join (1 samples, 0.02%)</title><rect x="92.9261%" y="357" width="0.0241%" height="15" fill="rgb(245,50,10)" fg:x="3849" fg:w="1"/><text x="93.1761%" y="367.50"></text></g><g><title>hx`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="92.9261%" y="341" width="0.0241%" height="15" fill="rgb(216,100,18)" fg:x="3849" fg:w="1"/><text x="93.1761%" y="351.50"></text></g><g><title>hx`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="92.9261%" y="325" width="0.0241%" height="15" fill="rgb(236,147,54)" fg:x="3849" fg:w="1"/><text x="93.1761%" y="335.50"></text></g><g><title>hx`_mi_heap_realloc_zero (1 samples, 0.02%)</title><rect x="92.9261%" y="309" width="0.0241%" height="15" fill="rgb(205,143,26)" fg:x="3849" fg:w="1"/><text x="93.1761%" y="319.50"></text></g><g><title>hx`_mi_malloc_generic (1 samples, 0.02%)</title><rect x="92.9261%" y="293" width="0.0241%" height="15" fill="rgb(236,26,9)" fg:x="3849" fg:w="1"/><text x="93.1761%" y="303.50"></text></g><g><title>hx`mi_page_free_list_extend (1 samples, 0.02%)</title><rect x="92.9261%" y="277" width="0.0241%" height="15" fill="rgb(221,165,53)" fg:x="3849" fg:w="1"/><text x="93.1761%" y="287.50"></text></g><g><title>hx`helix_term::ui::tree::TreeView&lt;T&gt;::build_tree (2 samples, 0.05%)</title><rect x="92.9261%" y="405" width="0.0483%" height="15" fill="rgb(214,110,17)" fg:x="3849" fg:w="2"/><text x="93.1761%" y="415.50"></text></g><g><title>hx`helix_term::ui::tree::index_elems::index_elems (1 samples, 0.02%)</title><rect x="92.9503%" y="389" width="0.0241%" height="15" fill="rgb(237,197,12)" fg:x="3850" fg:w="1"/><text x="93.2003%" y="399.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="92.9503%" y="373" width="0.0241%" height="15" fill="rgb(205,84,17)" fg:x="3850" fg:w="1"/><text x="93.2003%" y="383.50"></text></g><g><title>hx`_mi_malloc_generic (1 samples, 0.02%)</title><rect x="92.9503%" y="357" width="0.0241%" height="15" fill="rgb(237,18,45)" fg:x="3850" fg:w="1"/><text x="93.2003%" y="367.50"></text></g><g><title>hx`core::ops::function::FnOnce::call_once{{vtable.shim}} (20 samples, 0.48%)</title><rect x="92.5157%" y="437" width="0.4829%" height="15" fill="rgb(221,87,14)" fg:x="3832" fg:w="20"/><text x="92.7657%" y="447.50"></text></g><g><title>hx`helix_term::ui::explorer::Explorer::new (3 samples, 0.07%)</title><rect x="92.9261%" y="421" width="0.0724%" height="15" fill="rgb(238,186,15)" fg:x="3849" fg:w="3"/><text x="93.1761%" y="431.50"></text></g><g><title>hx`std::env::current_dir (1 samples, 0.02%)</title><rect x="92.9744%" y="405" width="0.0241%" height="15" fill="rgb(208,115,11)" fg:x="3851" fg:w="1"/><text x="93.2244%" y="415.50"></text></g><g><title>libsystem_c.dylib`__private_getcwd (1 samples, 0.02%)</title><rect x="92.9744%" y="389" width="0.0241%" height="15" fill="rgb(254,175,0)" fg:x="3851" fg:w="1"/><text x="93.2244%" y="399.50"></text></g><g><title>libsystem_c.dylib`__getcwd (1 samples, 0.02%)</title><rect x="92.9744%" y="373" width="0.0241%" height="15" fill="rgb(227,24,42)" fg:x="3851" fg:w="1"/><text x="93.2244%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (1 samples, 0.02%)</title><rect x="92.9744%" y="357" width="0.0241%" height="15" fill="rgb(223,211,37)" fg:x="3851" fg:w="1"/><text x="93.2244%" y="367.50"></text></g><g><title>hx`helix_term::compositor::Compositor::handle_event (1,152 samples, 27.81%)</title><rect x="65.2100%" y="453" width="27.8127%" height="15" fill="rgb(235,49,27)" fg:x="2701" fg:w="1152"/><text x="65.4600%" y="463.50">hx`helix_term::compositor::Compositor::handle..</text></g><g><title>hx`helix_view::view::View::offset_coords_to_in_view_center (1 samples, 0.02%)</title><rect x="92.9986%" y="437" width="0.0241%" height="15" fill="rgb(254,97,51)" fg:x="3852" fg:w="1"/><text x="93.2486%" y="447.50"></text></g><g><title>hx`helix_core::indent::auto_detect_indent_style (1 samples, 0.02%)</title><rect x="93.0227%" y="421" width="0.0241%" height="15" fill="rgb(249,51,40)" fg:x="3853" fg:w="1"/><text x="93.2727%" y="431.50"></text></g><g><title>hx`ropey::iter::Lines::next_impl (1 samples, 0.02%)</title><rect x="93.0227%" y="405" width="0.0241%" height="15" fill="rgb(210,128,45)" fg:x="3853" fg:w="1"/><text x="93.2727%" y="415.50"></text></g><g><title>hx`str_indices::lines_lf::to_byte_idx (1 samples, 0.02%)</title><rect x="93.0227%" y="389" width="0.0241%" height="15" fill="rgb(224,137,50)" fg:x="3853" fg:w="1"/><text x="93.2727%" y="399.50"></text></g><g><title>hx`helix_core::selection::Selection::ensure_invariants (1 samples, 0.02%)</title><rect x="93.0468%" y="389" width="0.0241%" height="15" fill="rgb(242,15,9)" fg:x="3854" fg:w="1"/><text x="93.2968%" y="399.50"></text></g><g><title>hx`helix_core::selection::Selection::normalize (1 samples, 0.02%)</title><rect x="93.0468%" y="373" width="0.0241%" height="15" fill="rgb(233,187,41)" fg:x="3854" fg:w="1"/><text x="93.2968%" y="383.50"></text></g><g><title>hx`ts_query_cursor__advance (2 samples, 0.05%)</title><rect x="93.0710%" y="341" width="0.0483%" height="15" fill="rgb(227,2,29)" fg:x="3855" fg:w="2"/><text x="93.3210%" y="351.50"></text></g><g><title>hx`ts_tree_cursor_child_iterator_next (1 samples, 0.02%)</title><rect x="93.0951%" y="325" width="0.0241%" height="15" fill="rgb(222,70,3)" fg:x="3856" fg:w="1"/><text x="93.3451%" y="335.50"></text></g><g><title>hx`helix_view::document::Document::apply (5 samples, 0.12%)</title><rect x="93.0468%" y="421" width="0.1207%" height="15" fill="rgb(213,11,42)" fg:x="3854" fg:w="5"/><text x="93.2968%" y="431.50"></text></g><g><title>hx`helix_view::document::Document::apply_impl (5 samples, 0.12%)</title><rect x="93.0468%" y="405" width="0.1207%" height="15" fill="rgb(225,150,9)" fg:x="3854" fg:w="5"/><text x="93.2968%" y="415.50"></text></g><g><title>hx`helix_core::syntax::Syntax::update (4 samples, 0.10%)</title><rect x="93.0710%" y="389" width="0.0966%" height="15" fill="rgb(230,162,45)" fg:x="3855" fg:w="4"/><text x="93.3210%" y="399.50"></text></g><g><title>hx`std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.10%)</title><rect x="93.0710%" y="373" width="0.0966%" height="15" fill="rgb(222,14,52)" fg:x="3855" fg:w="4"/><text x="93.3210%" y="383.50"></text></g><g><title>hx`ts_query_cursor_next_match (4 samples, 0.10%)</title><rect x="93.0710%" y="357" width="0.0966%" height="15" fill="rgb(254,198,14)" fg:x="3855" fg:w="4"/><text x="93.3210%" y="367.50"></text></g><g><title>hx`ts_tree_cursor_current_status (2 samples, 0.05%)</title><rect x="93.1193%" y="341" width="0.0483%" height="15" fill="rgb(220,217,30)" fg:x="3857" fg:w="2"/><text x="93.3693%" y="351.50"></text></g><g><title>hx`helix_term::application::Application::run::_{{closure}} (3,842 samples, 92.76%)</title><rect x="0.4346%" y="469" width="92.7571%" height="15" fill="rgb(215,146,41)" fg:x="18" fg:w="3842"/><text x="0.6846%" y="479.50">hx`helix_term::application::Application::run::_{{closure}}</text></g><g><title>hx`helix_term::job::Jobs::handle_callback (7 samples, 0.17%)</title><rect x="93.0227%" y="453" width="0.1690%" height="15" fill="rgb(217,27,36)" fg:x="3853" fg:w="7"/><text x="93.2727%" y="463.50"></text></g><g><title>hx`core::ops::function::FnOnce::call_once{{vtable.shim}} (7 samples, 0.17%)</title><rect x="93.0227%" y="437" width="0.1690%" height="15" fill="rgb(219,218,39)" fg:x="3853" fg:w="7"/><text x="93.2727%" y="447.50"></text></g><g><title>hx`helix_view::view::View::offset_coords_to_in_view_center (1 samples, 0.02%)</title><rect x="93.1676%" y="421" width="0.0241%" height="15" fill="rgb(219,4,42)" fg:x="3859" fg:w="1"/><text x="93.4176%" y="431.50"></text></g><g><title>hx`helix_core::position::visual_offset_from_anchor (1 samples, 0.02%)</title><rect x="93.1676%" y="405" width="0.0241%" height="15" fill="rgb(249,119,36)" fg:x="3859" fg:w="1"/><text x="93.4176%" y="415.50"></text></g><g><title>hx`&lt;helix_core::doc_formatter::DocumentFormatter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="93.1676%" y="389" width="0.0241%" height="15" fill="rgb(209,23,33)" fg:x="3859" fg:w="1"/><text x="93.4176%" y="399.50"></text></g><g><title>hx`helix_core::doc_formatter::DocumentFormatter::advance_grapheme (1 samples, 0.02%)</title><rect x="93.1676%" y="373" width="0.0241%" height="15" fill="rgb(211,10,0)" fg:x="3859" fg:w="1"/><text x="93.4176%" y="383.50"></text></g><g><title>hx`&lt;helix_core::graphemes::RopeGraphemes as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="93.1676%" y="357" width="0.0241%" height="15" fill="rgb(208,99,37)" fg:x="3859" fg:w="1"/><text x="93.4176%" y="367.50"></text></g><g><title>hx`helix_term::compositor::Compositor::has_component (1 samples, 0.02%)</title><rect x="93.1917%" y="469" width="0.0241%" height="15" fill="rgb(213,132,31)" fg:x="3860" fg:w="1"/><text x="93.4417%" y="479.50"></text></g><g><title>hx`tokio::runtime::park::drop_waker (1 samples, 0.02%)</title><rect x="93.2158%" y="469" width="0.0241%" height="15" fill="rgb(243,129,40)" fg:x="3861" fg:w="1"/><text x="93.4658%" y="479.50"></text></g><g><title>hx`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,860 samples, 93.19%)</title><rect x="0.0724%" y="485" width="93.1917%" height="15" fill="rgb(210,66,33)" fg:x="3" fg:w="3860"/><text x="0.3224%" y="495.50">hx`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.02%)</title><rect x="93.2400%" y="469" width="0.0241%" height="15" fill="rgb(209,189,4)" fg:x="3862" fg:w="1"/><text x="93.4900%" y="479.50"></text></g><g><title>hx`parking_lot::condvar::Condvar::wait_until_internal (1 samples, 0.02%)</title><rect x="93.2641%" y="485" width="0.0241%" height="15" fill="rgb(214,107,37)" fg:x="3863" fg:w="1"/><text x="93.5141%" y="495.50"></text></g><g><title>hx`tokio::runtime::park::CachedParkThread::park (1 samples, 0.02%)</title><rect x="93.2883%" y="485" width="0.0241%" height="15" fill="rgb(245,88,54)" fg:x="3864" fg:w="1"/><text x="93.5383%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (9 samples, 0.22%)</title><rect x="93.3366%" y="453" width="0.2173%" height="15" fill="rgb(205,146,20)" fg:x="3866" fg:w="9"/><text x="93.5866%" y="463.50"></text></g><g><title>hx`tokio::runtime::park::CachedParkThread::block_on (3,876 samples, 93.58%)</title><rect x="0.0241%" y="501" width="93.5780%" height="15" fill="rgb(220,161,25)" fg:x="1" fg:w="3876"/><text x="0.2741%" y="511.50">hx`tokio::runtime::park::CachedParkThread::block_on</text></g><g><title>hx`tokio::runtime::park::Inner::park (12 samples, 0.29%)</title><rect x="93.3124%" y="485" width="0.2897%" height="15" fill="rgb(215,152,15)" fg:x="3865" fg:w="12"/><text x="93.5624%" y="495.50"></text></g><g><title>hx`parking_lot::condvar::Condvar::wait_until_internal (12 samples, 0.29%)</title><rect x="93.3124%" y="469" width="0.2897%" height="15" fill="rgb(233,192,44)" fg:x="3865" fg:w="12"/><text x="93.5624%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (2 samples, 0.05%)</title><rect x="93.5538%" y="453" width="0.0483%" height="15" fill="rgb(240,170,46)" fg:x="3875" fg:w="2"/><text x="93.8038%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.02%)</title><rect x="93.5780%" y="437" width="0.0241%" height="15" fill="rgb(207,104,33)" fg:x="3876" fg:w="1"/><text x="93.8280%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (1 samples, 0.02%)</title><rect x="93.5780%" y="421" width="0.0241%" height="15" fill="rgb(219,21,39)" fg:x="3876" fg:w="1"/><text x="93.8280%" y="431.50"></text></g><g><title>dyld`start (3,879 samples, 93.65%)</title><rect x="0.0000%" y="629" width="93.6504%" height="15" fill="rgb(214,133,29)" fg:x="0" fg:w="3879"/><text x="0.2500%" y="639.50">dyld`start</text></g><g><title>hx`main (3,879 samples, 93.65%)</title><rect x="0.0000%" y="613" width="93.6504%" height="15" fill="rgb(226,93,6)" fg:x="0" fg:w="3879"/><text x="0.2500%" y="623.50">hx`main</text></g><g><title>hx`std::rt::lang_start_internal (3,879 samples, 93.65%)</title><rect x="0.0000%" y="597" width="93.6504%" height="15" fill="rgb(252,222,34)" fg:x="0" fg:w="3879"/><text x="0.2500%" y="607.50">hx`std::rt::lang_start_internal</text></g><g><title>hx`std::rt::lang_start::_{{closure}} (3,879 samples, 93.65%)</title><rect x="0.0000%" y="581" width="93.6504%" height="15" fill="rgb(252,92,48)" fg:x="0" fg:w="3879"/><text x="0.2500%" y="591.50">hx`std::rt::lang_start::_{{closure}}</text></g><g><title>hx`std::sys_common::backtrace::__rust_begin_short_backtrace (3,879 samples, 93.65%)</title><rect x="0.0000%" y="565" width="93.6504%" height="15" fill="rgb(245,223,24)" fg:x="0" fg:w="3879"/><text x="0.2500%" y="575.50">hx`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>hx`hx::main (3,879 samples, 93.65%)</title><rect x="0.0000%" y="549" width="93.6504%" height="15" fill="rgb(205,176,3)" fg:x="0" fg:w="3879"/><text x="0.2500%" y="559.50">hx`hx::main</text></g><g><title>hx`tokio::runtime::runtime::Runtime::block_on (3,878 samples, 93.63%)</title><rect x="0.0241%" y="533" width="93.6263%" height="15" fill="rgb(235,151,15)" fg:x="1" fg:w="3878"/><text x="0.2741%" y="543.50">hx`tokio::runtime::runtime::Runtime::block_on</text></g><g><title>hx`tokio::runtime::scheduler::multi_thread::MultiThread::block_on (3,878 samples, 93.63%)</title><rect x="0.0241%" y="517" width="93.6263%" height="15" fill="rgb(237,209,11)" fg:x="1" fg:w="3878"/><text x="0.2741%" y="527.50">hx`tokio::runtime::scheduler::multi_thread::MultiThread::block_on</text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.05%)</title><rect x="93.6021%" y="501" width="0.0483%" height="15" fill="rgb(243,227,24)" fg:x="3877" fg:w="2"/><text x="93.8521%" y="511.50"></text></g><g><title>hx`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="93.6504%" y="549" width="0.0241%" height="15" fill="rgb(239,193,16)" fg:x="3879" fg:w="1"/><text x="93.9004%" y="559.50"></text></g><g><title>hx`&lt;helix_term::ui::editor::EditorView as helix_term::compositor::Component&gt;::render (1 samples, 0.02%)</title><rect x="93.6504%" y="533" width="0.0241%" height="15" fill="rgb(231,27,9)" fg:x="3879" fg:w="1"/><text x="93.9004%" y="543.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::render_view (1 samples, 0.02%)</title><rect x="93.6504%" y="517" width="0.0241%" height="15" fill="rgb(219,169,10)" fg:x="3879" fg:w="1"/><text x="93.9004%" y="527.50"></text></g><g><title>hx`helix_term::ui::document::render_document (1 samples, 0.02%)</title><rect x="93.6504%" y="501" width="0.0241%" height="15" fill="rgb(244,229,43)" fg:x="3879" fg:w="1"/><text x="93.9004%" y="511.50"></text></g><g><title>hx`&lt;helix_term::ui::document::StyleIter&lt;H&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="93.6504%" y="485" width="0.0241%" height="15" fill="rgb(254,38,20)" fg:x="3879" fg:w="1"/><text x="93.9004%" y="495.50"></text></g><g><title>hx`&lt;helix_core::syntax::Merge&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="93.6504%" y="469" width="0.0241%" height="15" fill="rgb(250,47,30)" fg:x="3879" fg:w="1"/><text x="93.9004%" y="479.50"></text></g><g><title>hx`&lt;helix_core::syntax::Merge&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="93.6504%" y="453" width="0.0241%" height="15" fill="rgb(224,124,36)" fg:x="3879" fg:w="1"/><text x="93.9004%" y="463.50"></text></g><g><title>hx`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="93.6504%" y="437" width="0.0241%" height="15" fill="rgb(246,68,51)" fg:x="3879" fg:w="1"/><text x="93.9004%" y="447.50"></text></g><g><title>hx`ropey::slice::RopeSlice::byte_to_char (1 samples, 0.02%)</title><rect x="93.6504%" y="421" width="0.0241%" height="15" fill="rgb(253,43,49)" fg:x="3879" fg:w="1"/><text x="93.9004%" y="431.50"></text></g><g><title>hx`tokio::runtime::runtime::Runtime::block_on (2 samples, 0.05%)</title><rect x="93.6504%" y="629" width="0.0483%" height="15" fill="rgb(219,54,36)" fg:x="3879" fg:w="2"/><text x="93.9004%" y="639.50"></text></g><g><title>hx`tokio::runtime::scheduler::multi_thread::MultiThread::block_on (2 samples, 0.05%)</title><rect x="93.6504%" y="613" width="0.0483%" height="15" fill="rgb(227,133,34)" fg:x="3879" fg:w="2"/><text x="93.9004%" y="623.50"></text></g><g><title>hx`tokio::runtime::park::CachedParkThread::block_on (2 samples, 0.05%)</title><rect x="93.6504%" y="597" width="0.0483%" height="15" fill="rgb(247,227,15)" fg:x="3879" fg:w="2"/><text x="93.9004%" y="607.50"></text></g><g><title>hx`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.05%)</title><rect x="93.6504%" y="581" width="0.0483%" height="15" fill="rgb(229,96,14)" fg:x="3879" fg:w="2"/><text x="93.9004%" y="591.50"></text></g><g><title>hx`helix_term::application::Application::run::_{{closure}} (2 samples, 0.05%)</title><rect x="93.6504%" y="565" width="0.0483%" height="15" fill="rgb(220,79,17)" fg:x="3879" fg:w="2"/><text x="93.9004%" y="575.50"></text></g><g><title>hx`helix_term::compositor::Compositor::handle_event (1 samples, 0.02%)</title><rect x="93.6746%" y="549" width="0.0241%" height="15" fill="rgb(205,131,53)" fg:x="3880" fg:w="1"/><text x="93.9246%" y="559.50"></text></g><g><title>hx`&lt;helix_term::ui::editor::EditorView as helix_term::compositor::Component&gt;::handle_event (1 samples, 0.02%)</title><rect x="93.6746%" y="533" width="0.0241%" height="15" fill="rgb(209,50,29)" fg:x="3880" fg:w="1"/><text x="93.9246%" y="543.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::handle_keymap_event (1 samples, 0.02%)</title><rect x="93.6746%" y="517" width="0.0241%" height="15" fill="rgb(245,86,46)" fg:x="3880" fg:w="1"/><text x="93.9246%" y="527.50"></text></g><g><title>hx`helix_term::ui::editor::EditorView::handle_keymap_event::_{{closure}} (1 samples, 0.02%)</title><rect x="93.6746%" y="501" width="0.0241%" height="15" fill="rgb(235,66,46)" fg:x="3880" fg:w="1"/><text x="93.9246%" y="511.50"></text></g><g><title>hx`helix_term::commands::delete_selection_impl (1 samples, 0.02%)</title><rect x="93.6746%" y="485" width="0.0241%" height="15" fill="rgb(232,148,31)" fg:x="3880" fg:w="1"/><text x="93.9246%" y="495.50"></text></g><g><title>hx`helix_view::document::Document::apply (1 samples, 0.02%)</title><rect x="93.6746%" y="469" width="0.0241%" height="15" fill="rgb(217,149,8)" fg:x="3880" fg:w="1"/><text x="93.9246%" y="479.50"></text></g><g><title>hx`helix_view::document::Document::apply_impl (1 samples, 0.02%)</title><rect x="93.6746%" y="453" width="0.0241%" height="15" fill="rgb(209,183,11)" fg:x="3880" fg:w="1"/><text x="93.9246%" y="463.50"></text></g><g><title>hx`helix_core::syntax::Syntax::update (1 samples, 0.02%)</title><rect x="93.6746%" y="437" width="0.0241%" height="15" fill="rgb(208,55,20)" fg:x="3880" fg:w="1"/><text x="93.9246%" y="447.50"></text></g><g><title>hx`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="93.6746%" y="421" width="0.0241%" height="15" fill="rgb(218,39,14)" fg:x="3880" fg:w="1"/><text x="93.9246%" y="431.50"></text></g><g><title>hx`ts_query_cursor_next_match (1 samples, 0.02%)</title><rect x="93.6746%" y="405" width="0.0241%" height="15" fill="rgb(216,169,33)" fg:x="3880" fg:w="1"/><text x="93.9246%" y="415.50"></text></g><g><title>hx`ts_query_cursor__advance (1 samples, 0.02%)</title><rect x="93.6746%" y="389" width="0.0241%" height="15" fill="rgb(233,80,24)" fg:x="3880" fg:w="1"/><text x="93.9246%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__exit (2 samples, 0.05%)</title><rect x="93.6987%" y="629" width="0.0483%" height="15" fill="rgb(213,179,31)" fg:x="3881" fg:w="2"/><text x="93.9487%" y="639.50"></text></g><g><title>hx`std::sync::mpsc::Receiver&lt;T&gt;::recv (1 samples, 0.02%)</title><rect x="93.7470%" y="565" width="0.0241%" height="15" fill="rgb(209,19,5)" fg:x="3883" fg:w="1"/><text x="93.9970%" y="575.50"></text></g><g><title>hx`&lt;crossterm::event::source::unix::mio::UnixInternalEventSource as crossterm::event::source::EventSource&gt;::try_read (2 samples, 0.05%)</title><rect x="93.7953%" y="517" width="0.0483%" height="15" fill="rgb(219,18,35)" fg:x="3885" fg:w="2"/><text x="94.0453%" y="527.50"></text></g><g><title>hx`crossterm::event::sys::unix::parse::parse_event (2 samples, 0.05%)</title><rect x="93.7953%" y="501" width="0.0483%" height="15" fill="rgb(209,169,16)" fg:x="3885" fg:w="2"/><text x="94.0453%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`kevent (8 samples, 0.19%)</title><rect x="93.8436%" y="517" width="0.1931%" height="15" fill="rgb(245,90,51)" fg:x="3887" fg:w="8"/><text x="94.0936%" y="527.50"></text></g><g><title>hx`crossterm::event::read::InternalEventReader::poll (17 samples, 0.41%)</title><rect x="93.7953%" y="533" width="0.4104%" height="15" fill="rgb(220,99,45)" fg:x="3885" fg:w="17"/><text x="94.0453%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`read (7 samples, 0.17%)</title><rect x="94.0367%" y="517" width="0.1690%" height="15" fill="rgb(249,89,25)" fg:x="3895" fg:w="7"/><text x="94.2867%" y="527.50"></text></g><g><title>hx`crossterm::event::poll_internal (19 samples, 0.46%)</title><rect x="93.7711%" y="549" width="0.4587%" height="15" fill="rgb(239,193,0)" fg:x="3884" fg:w="19"/><text x="94.0211%" y="559.50"></text></g><g><title>hx`crossterm::event::timeout::PollTimeout::elapsed (1 samples, 0.02%)</title><rect x="94.2057%" y="533" width="0.0241%" height="15" fill="rgb(231,126,1)" fg:x="3902" fg:w="1"/><text x="94.4557%" y="543.50"></text></g><g><title>hx`parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.02%)</title><rect x="94.2298%" y="549" width="0.0241%" height="15" fill="rgb(243,166,3)" fg:x="3903" fg:w="1"/><text x="94.4798%" y="559.50"></text></g><g><title>hx`std::sys_common::thread_info::current_thread (2 samples, 0.05%)</title><rect x="94.3023%" y="501" width="0.0483%" height="15" fill="rgb(223,22,34)" fg:x="3906" fg:w="2"/><text x="94.5523%" y="511.50"></text></g><g><title>hx`std::sync::mpsc::sync::Packet&lt;T&gt;::recv (9 samples, 0.22%)</title><rect x="94.2781%" y="533" width="0.2173%" height="15" fill="rgb(251,52,51)" fg:x="3905" fg:w="9"/><text x="94.5281%" y="543.50"></text></g><g><title>hx`std::sync::mpsc::sync::wait (8 samples, 0.19%)</title><rect x="94.3023%" y="517" width="0.1931%" height="15" fill="rgb(221,165,28)" fg:x="3906" fg:w="8"/><text x="94.5523%" y="527.50"></text></g><g><title>hx`std::thread::park (6 samples, 0.14%)</title><rect x="94.3506%" y="501" width="0.1449%" height="15" fill="rgb(218,121,47)" fg:x="3908" fg:w="6"/><text x="94.6006%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (6 samples, 0.14%)</title><rect x="94.3506%" y="485" width="0.1449%" height="15" fill="rgb(209,120,9)" fg:x="3908" fg:w="6"/><text x="94.6006%" y="495.50"></text></g><g><title>hx`std::sync::mpsc::Receiver&lt;T&gt;::recv (11 samples, 0.27%)</title><rect x="94.2540%" y="549" width="0.2656%" height="15" fill="rgb(236,68,12)" fg:x="3904" fg:w="11"/><text x="94.5040%" y="559.50"></text></g><g><title>hx`std::sync::mpsc::sync::wait (1 samples, 0.02%)</title><rect x="94.4954%" y="533" width="0.0241%" height="15" fill="rgb(225,194,26)" fg:x="3914" fg:w="1"/><text x="94.7454%" y="543.50"></text></g><g><title>hx`parking_lot::condvar::Condvar::wait_until_internal (4 samples, 0.10%)</title><rect x="94.5196%" y="533" width="0.0966%" height="15" fill="rgb(231,84,39)" fg:x="3915" fg:w="4"/><text x="94.7696%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (2 samples, 0.05%)</title><rect x="94.5678%" y="517" width="0.0483%" height="15" fill="rgb(210,11,45)" fg:x="3917" fg:w="2"/><text x="94.8178%" y="527.50"></text></g><g><title>hx`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.05%)</title><rect x="94.6161%" y="485" width="0.0483%" height="15" fill="rgb(224,54,52)" fg:x="3919" fg:w="2"/><text x="94.8661%" y="495.50"></text></g><g><title>hx`std::fs::OpenOptions::_open (2 samples, 0.05%)</title><rect x="94.6161%" y="469" width="0.0483%" height="15" fill="rgb(238,102,14)" fg:x="3919" fg:w="2"/><text x="94.8661%" y="479.50"></text></g><g><title>hx`std::sys::unix::fs::File::open_c (2 samples, 0.05%)</title><rect x="94.6161%" y="453" width="0.0483%" height="15" fill="rgb(243,160,52)" fg:x="3919" fg:w="2"/><text x="94.8661%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__open (2 samples, 0.05%)</title><rect x="94.6161%" y="437" width="0.0483%" height="15" fill="rgb(216,114,19)" fg:x="3919" fg:w="2"/><text x="94.8661%" y="447.50"></text></g><g><title>hx`tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (2 samples, 0.05%)</title><rect x="94.6886%" y="437" width="0.0483%" height="15" fill="rgb(244,166,37)" fg:x="3922" fg:w="2"/><text x="94.9386%" y="447.50"></text></g><g><title>hx`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="94.7368%" y="421" width="0.0241%" height="15" fill="rgb(246,29,44)" fg:x="3924" fg:w="1"/><text x="94.9868%" y="431.50"></text></g><g><title>hx`parking_lot::condvar::Condvar::wait_until_internal (11 samples, 0.27%)</title><rect x="94.7851%" y="405" width="0.2656%" height="15" fill="rgb(215,56,53)" fg:x="3926" fg:w="11"/><text x="95.0351%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (11 samples, 0.27%)</title><rect x="94.7851%" y="389" width="0.2656%" height="15" fill="rgb(217,60,2)" fg:x="3926" fg:w="11"/><text x="95.0351%" y="399.50"></text></g><g><title>hx`std::time::Instant::checked_duration_since (2 samples, 0.05%)</title><rect x="95.0990%" y="373" width="0.0483%" height="15" fill="rgb(207,26,24)" fg:x="3939" fg:w="2"/><text x="95.3490%" y="383.50"></text></g><g><title>hx`tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (1 samples, 0.02%)</title><rect x="95.1473%" y="373" width="0.0241%" height="15" fill="rgb(252,210,15)" fg:x="3941" fg:w="1"/><text x="95.3973%" y="383.50"></text></g><g><title>hx`tokio::runtime::io::scheduled_io::ScheduledIo::wake (1 samples, 0.02%)</title><rect x="95.1956%" y="357" width="0.0241%" height="15" fill="rgb(253,209,26)" fg:x="3943" fg:w="1"/><text x="95.4456%" y="367.50"></text></g><g><title>hx`tokio::runtime::task::waker::wake_by_val (1 samples, 0.02%)</title><rect x="95.1956%" y="341" width="0.0241%" height="15" fill="rgb(238,170,14)" fg:x="3943" fg:w="1"/><text x="95.4456%" y="351.50"></text></g><g><title>hx`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1 samples, 0.02%)</title><rect x="95.1956%" y="325" width="0.0241%" height="15" fill="rgb(216,178,15)" fg:x="3943" fg:w="1"/><text x="95.4456%" y="335.50"></text></g><g><title>hx`tokio::runtime::io::Driver::turn (3 samples, 0.07%)</title><rect x="95.1714%" y="373" width="0.0724%" height="15" fill="rgb(250,197,2)" fg:x="3942" fg:w="3"/><text x="95.4214%" y="383.50"></text></g><g><title>hx`tokio::runtime::task::waker::wake_by_val (1 samples, 0.02%)</title><rect x="95.2197%" y="357" width="0.0241%" height="15" fill="rgb(212,70,42)" fg:x="3944" fg:w="1"/><text x="95.4697%" y="367.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt; (1 samples, 0.02%)</title><rect x="95.2438%" y="357" width="0.0241%" height="15" fill="rgb(227,213,9)" fg:x="3945" fg:w="1"/><text x="95.4938%" y="367.50"></text></g><g><title> 32]&gt; (1 samples, 0.02%)</title><rect x="95.2438%" y="341" width="0.0241%" height="15" fill="rgb(245,99,25)" fg:x="3945" fg:w="1"/><text x="95.4938%" y="351.50"></text></g><g><title>hx`tokio::runtime::task::raw::schedule (1 samples, 0.02%)</title><rect x="95.2680%" y="357" width="0.0241%" height="15" fill="rgb(250,82,29)" fg:x="3946" fg:w="1"/><text x="95.5180%" y="367.50"></text></g><g><title>hx`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (3 samples, 0.07%)</title><rect x="95.2438%" y="373" width="0.0724%" height="15" fill="rgb(241,226,54)" fg:x="3945" fg:w="3"/><text x="95.4938%" y="383.50"></text></g><g><title>hx`tokio::runtime::task::waker::wake_by_val (1 samples, 0.02%)</title><rect x="95.2921%" y="357" width="0.0241%" height="15" fill="rgb(221,99,41)" fg:x="3947" fg:w="1"/><text x="95.5421%" y="367.50"></text></g><g><title>hx`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1 samples, 0.02%)</title><rect x="95.2921%" y="341" width="0.0241%" height="15" fill="rgb(213,90,21)" fg:x="3947" fg:w="1"/><text x="95.5421%" y="351.50"></text></g><g><title>hx`tokio::runtime::time::Driver::park_internal (42 samples, 1.01%)</title><rect x="95.0507%" y="389" width="1.0140%" height="15" fill="rgb(205,208,24)" fg:x="3937" fg:w="42"/><text x="95.3007%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`kevent (31 samples, 0.75%)</title><rect x="95.3163%" y="373" width="0.7484%" height="15" fill="rgb(246,31,12)" fg:x="3948" fg:w="31"/><text x="95.5663%" y="383.50"></text></g><g><title>hx`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (56 samples, 1.35%)</title><rect x="94.7368%" y="437" width="1.3520%" height="15" fill="rgb(213,154,6)" fg:x="3924" fg:w="56"/><text x="94.9868%" y="447.50"></text></g><g><title>hx`tokio::runtime::scheduler::multi_thread::park::Parker::park (55 samples, 1.33%)</title><rect x="94.7610%" y="421" width="1.3279%" height="15" fill="rgb(222,163,29)" fg:x="3925" fg:w="55"/><text x="95.0110%" y="431.50"></text></g><g><title>hx`tokio::runtime::driver::Driver::park (43 samples, 1.04%)</title><rect x="95.0507%" y="405" width="1.0381%" height="15" fill="rgb(227,201,8)" fg:x="3937" fg:w="43"/><text x="95.3007%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.02%)</title><rect x="96.0647%" y="389" width="0.0241%" height="15" fill="rgb(233,9,32)" fg:x="3979" fg:w="1"/><text x="96.3147%" y="399.50"></text></g><g><title>hx`parking_lot::condvar::Condvar::notify_one_slow (3 samples, 0.07%)</title><rect x="96.1130%" y="421" width="0.0724%" height="15" fill="rgb(217,54,24)" fg:x="3981" fg:w="3"/><text x="96.3630%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (3 samples, 0.07%)</title><rect x="96.1130%" y="405" width="0.0724%" height="15" fill="rgb(235,192,0)" fg:x="3981" fg:w="3"/><text x="96.3630%" y="415.50"></text></g><g><title>hx`DYLD-STUB$$kevent (1 samples, 0.02%)</title><rect x="96.1854%" y="405" width="0.0241%" height="15" fill="rgb(235,45,9)" fg:x="3984" fg:w="1"/><text x="96.4354%" y="415.50"></text></g><g><title>hx`tokio::runtime::driver::Handle::unpark (4 samples, 0.10%)</title><rect x="96.1854%" y="421" width="0.0966%" height="15" fill="rgb(246,42,40)" fg:x="3984" fg:w="4"/><text x="96.4354%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`kevent (3 samples, 0.07%)</title><rect x="96.2096%" y="405" width="0.0724%" height="15" fill="rgb(248,111,24)" fg:x="3985" fg:w="3"/><text x="96.4596%" y="415.50"></text></g><g><title>hx`tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (1 samples, 0.02%)</title><rect x="96.2820%" y="421" width="0.0241%" height="15" fill="rgb(249,65,22)" fg:x="3988" fg:w="1"/><text x="96.5320%" y="431.50"></text></g><g><title>hx`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.02%)</title><rect x="96.3061%" y="421" width="0.0241%" height="15" fill="rgb(238,111,51)" fg:x="3989" fg:w="1"/><text x="96.5561%" y="431.50"></text></g><g><title>hx`&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.02%)</title><rect x="96.3544%" y="373" width="0.0241%" height="15" fill="rgb(250,118,22)" fg:x="3991" fg:w="1"/><text x="96.6044%" y="383.50"></text></g><g><title>hx`&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.02%)</title><rect x="96.4510%" y="357" width="0.0241%" height="15" fill="rgb(234,84,26)" fg:x="3995" fg:w="1"/><text x="96.7010%" y="367.50"></text></g><g><title>hx`&lt;fern::log_impl::Dispatch as log::Log&gt;::log (1 samples, 0.02%)</title><rect x="96.4993%" y="341" width="0.0241%" height="15" fill="rgb(243,172,12)" fg:x="3997" fg:w="1"/><text x="96.7493%" y="351.50"></text></g><g><title>hx`&lt;fern::log_impl::Dispatch as log::Log&gt;::log (1 samples, 0.02%)</title><rect x="96.4993%" y="325" width="0.0241%" height="15" fill="rgb(236,150,49)" fg:x="3997" fg:w="1"/><text x="96.7493%" y="335.50"></text></g><g><title>hx`hx::setup_logging::_{{closure}} (1 samples, 0.02%)</title><rect x="96.4993%" y="309" width="0.0241%" height="15" fill="rgb(225,197,26)" fg:x="3997" fg:w="1"/><text x="96.7493%" y="319.50"></text></g><g><title>hx`fern::log_impl::FormatCallback::finish (1 samples, 0.02%)</title><rect x="96.4993%" y="293" width="0.0241%" height="15" fill="rgb(214,17,42)" fg:x="3997" fg:w="1"/><text x="96.7493%" y="303.50"></text></g><g><title>hx`&lt;fern::log_impl::File as log::Log&gt;::log (1 samples, 0.02%)</title><rect x="96.4993%" y="277" width="0.0241%" height="15" fill="rgb(224,165,40)" fg:x="3997" fg:w="1"/><text x="96.7493%" y="287.50"></text></g><g><title>hx`std::io::Write::write_fmt (1 samples, 0.02%)</title><rect x="96.4993%" y="261" width="0.0241%" height="15" fill="rgb(246,100,4)" fg:x="3997" fg:w="1"/><text x="96.7493%" y="271.50"></text></g><g><title>hx`core::fmt::write (1 samples, 0.02%)</title><rect x="96.4993%" y="245" width="0.0241%" height="15" fill="rgb(222,103,0)" fg:x="3997" fg:w="1"/><text x="96.7493%" y="255.50"></text></g><g><title>hx`&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="96.4993%" y="229" width="0.0241%" height="15" fill="rgb(227,189,26)" fg:x="3997" fg:w="1"/><text x="96.7493%" y="239.50"></text></g><g><title>hx`core::fmt::write (1 samples, 0.02%)</title><rect x="96.4993%" y="213" width="0.0241%" height="15" fill="rgb(214,202,17)" fg:x="3997" fg:w="1"/><text x="96.7493%" y="223.50"></text></g><g><title>hx`&lt;chrono::format::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="96.4993%" y="197" width="0.0241%" height="15" fill="rgb(229,111,3)" fg:x="3997" fg:w="1"/><text x="96.7493%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="96.4993%" y="181" width="0.0241%" height="15" fill="rgb(229,172,15)" fg:x="3997" fg:w="1"/><text x="96.7493%" y="191.50"></text></g><g><title>hx`alloc::fmt::format::format_inner (1 samples, 0.02%)</title><rect x="96.5234%" y="341" width="0.0241%" height="15" fill="rgb(230,224,35)" fg:x="3998" fg:w="1"/><text x="96.7734%" y="351.50"></text></g><g><title>hx`mi_malloc (1 samples, 0.02%)</title><rect x="96.5234%" y="325" width="0.0241%" height="15" fill="rgb(251,141,6)" fg:x="3998" fg:w="1"/><text x="96.7734%" y="335.50"></text></g><g><title>hx`futures_task::waker::wake_arc_raw (1 samples, 0.02%)</title><rect x="96.5476%" y="341" width="0.0241%" height="15" fill="rgb(225,208,6)" fg:x="3999" fg:w="1"/><text x="96.7976%" y="351.50"></text></g><g><title>hx`&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (1 samples, 0.02%)</title><rect x="96.5476%" y="325" width="0.0241%" height="15" fill="rgb(246,181,16)" fg:x="3999" fg:w="1"/><text x="96.7976%" y="335.50"></text></g><g><title>hx`tokio::runtime::park::wake (1 samples, 0.02%)</title><rect x="96.5476%" y="309" width="0.0241%" height="15" fill="rgb(227,129,36)" fg:x="3999" fg:w="1"/><text x="96.7976%" y="319.50"></text></g><g><title>hx`parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.02%)</title><rect x="96.5476%" y="293" width="0.0241%" height="15" fill="rgb(248,117,24)" fg:x="3999" fg:w="1"/><text x="96.7976%" y="303.50"></text></g><g><title>hx`parking_lot_core::parking_lot::lock_bucket_pair (1 samples, 0.02%)</title><rect x="96.5476%" y="277" width="0.0241%" height="15" fill="rgb(214,185,35)" fg:x="3999" fg:w="1"/><text x="96.7976%" y="287.50"></text></g><g><title>hx`helix_lsp::jsonrpc::_::_&lt;impl serde::ser::Serialize for helix_lsp::jsonrpc::Notification&gt;::serialize (1 samples, 0.02%)</title><rect x="96.5717%" y="341" width="0.0241%" height="15" fill="rgb(236,150,34)" fg:x="4000" fg:w="1"/><text x="96.8217%" y="351.50"></text></g><g><title>hx`helix_lsp::jsonrpc::_::_&lt;impl serde::ser::Serialize for helix_lsp::jsonrpc::Params&gt;::serialize (1 samples, 0.02%)</title><rect x="96.5717%" y="325" width="0.0241%" height="15" fill="rgb(243,228,27)" fg:x="4000" fg:w="1"/><text x="96.8217%" y="335.50"></text></g><g><title>hx`serde::ser::SerializeMap::serialize_entry (1 samples, 0.02%)</title><rect x="96.5717%" y="309" width="0.0241%" height="15" fill="rgb(245,77,44)" fg:x="4000" fg:w="1"/><text x="96.8217%" y="319.50"></text></g><g><title>hx`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.02%)</title><rect x="96.5717%" y="293" width="0.0241%" height="15" fill="rgb(235,214,42)" fg:x="4000" fg:w="1"/><text x="96.8217%" y="303.50"></text></g><g><title>hx`serde::ser::Serializer::collect_seq (1 samples, 0.02%)</title><rect x="96.5717%" y="277" width="0.0241%" height="15" fill="rgb(221,74,3)" fg:x="4000" fg:w="1"/><text x="96.8217%" y="287.50"></text></g><g><title>hx`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.02%)</title><rect x="96.5717%" y="261" width="0.0241%" height="15" fill="rgb(206,121,29)" fg:x="4000" fg:w="1"/><text x="96.8217%" y="271.50"></text></g><g><title>hx`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.02%)</title><rect x="96.5717%" y="245" width="0.0241%" height="15" fill="rgb(249,131,53)" fg:x="4000" fg:w="1"/><text x="96.8217%" y="255.50"></text></g><g><title>hx`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.02%)</title><rect x="96.5717%" y="229" width="0.0241%" height="15" fill="rgb(236,170,29)" fg:x="4000" fg:w="1"/><text x="96.8217%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="96.5717%" y="213" width="0.0241%" height="15" fill="rgb(247,96,15)" fg:x="4000" fg:w="1"/><text x="96.8217%" y="223.50"></text></g><g><title>hx`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.19%)</title><rect x="96.4751%" y="357" width="0.1931%" height="15" fill="rgb(211,210,7)" fg:x="3996" fg:w="8"/><text x="96.7251%" y="367.50"></text></g><g><title>hx`tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (3 samples, 0.07%)</title><rect x="96.5958%" y="341" width="0.0724%" height="15" fill="rgb(240,88,50)" fg:x="4001" fg:w="3"/><text x="96.8458%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`write (3 samples, 0.07%)</title><rect x="96.5958%" y="325" width="0.0724%" height="15" fill="rgb(209,229,26)" fg:x="4001" fg:w="3"/><text x="96.8458%" y="335.50"></text></g><g><title>hx`&lt;fern::log_impl::Dispatch as log::Log&gt;::log (1 samples, 0.02%)</title><rect x="96.6683%" y="357" width="0.0241%" height="15" fill="rgb(210,68,23)" fg:x="4004" fg:w="1"/><text x="96.9183%" y="367.50"></text></g><g><title>hx`&lt;fern::log_impl::Dispatch as log::Log&gt;::log (1 samples, 0.02%)</title><rect x="96.6683%" y="341" width="0.0241%" height="15" fill="rgb(229,180,13)" fg:x="4004" fg:w="1"/><text x="96.9183%" y="351.50"></text></g><g><title>hx`hx::setup_logging::_{{closure}} (1 samples, 0.02%)</title><rect x="96.6683%" y="325" width="0.0241%" height="15" fill="rgb(236,53,44)" fg:x="4004" fg:w="1"/><text x="96.9183%" y="335.50"></text></g><g><title>hx`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="96.6683%" y="309" width="0.0241%" height="15" fill="rgb(244,214,29)" fg:x="4004" fg:w="1"/><text x="96.9183%" y="319.50"></text></g><g><title>hx`&lt;chrono::offset::local::inner::Cache as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="96.6683%" y="293" width="0.0241%" height="15" fill="rgb(220,75,29)" fg:x="4004" fg:w="1"/><text x="96.9183%" y="303.50"></text></g><g><title>hx`chrono::offset::local::inner::current_zone (1 samples, 0.02%)</title><rect x="96.6683%" y="277" width="0.0241%" height="15" fill="rgb(214,183,37)" fg:x="4004" fg:w="1"/><text x="96.9183%" y="287.50"></text></g><g><title>hx`chrono::offset::local::tz_info::timezone::TimeZone::from_posix_tz (1 samples, 0.02%)</title><rect x="96.6683%" y="261" width="0.0241%" height="15" fill="rgb(239,117,29)" fg:x="4004" fg:w="1"/><text x="96.9183%" y="271.50"></text></g><g><title>hx`std::fs::read::inner (1 samples, 0.02%)</title><rect x="96.6683%" y="245" width="0.0241%" height="15" fill="rgb(237,171,35)" fg:x="4004" fg:w="1"/><text x="96.9183%" y="255.50"></text></g><g><title>hx`std::fs::OpenOptions::_open (1 samples, 0.02%)</title><rect x="96.6683%" y="229" width="0.0241%" height="15" fill="rgb(229,178,53)" fg:x="4004" fg:w="1"/><text x="96.9183%" y="239.50"></text></g><g><title>hx`std::sys::unix::fs::File::open_c (1 samples, 0.02%)</title><rect x="96.6683%" y="213" width="0.0241%" height="15" fill="rgb(210,102,19)" fg:x="4004" fg:w="1"/><text x="96.9183%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.02%)</title><rect x="96.6683%" y="197" width="0.0241%" height="15" fill="rgb(235,127,22)" fg:x="4004" fg:w="1"/><text x="96.9183%" y="207.50"></text></g><g><title>hx`&lt;tokio::io::util::read_line::ReadLine&lt;R&gt; as core::future::future::Future&gt;::poll (3 samples, 0.07%)</title><rect x="96.6924%" y="357" width="0.0724%" height="15" fill="rgb(244,31,31)" fg:x="4005" fg:w="3"/><text x="96.9424%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`read (3 samples, 0.07%)</title><rect x="96.6924%" y="341" width="0.0724%" height="15" fill="rgb(231,43,21)" fg:x="4005" fg:w="3"/><text x="96.9424%" y="351.50"></text></g><g><title>hx`&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.07%)</title><rect x="96.7648%" y="357" width="0.0724%" height="15" fill="rgb(217,131,35)" fg:x="4008" fg:w="3"/><text x="97.0148%" y="367.50"></text></g><g><title>hx`&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (3 samples, 0.07%)</title><rect x="96.7648%" y="341" width="0.0724%" height="15" fill="rgb(221,149,4)" fg:x="4008" fg:w="3"/><text x="97.0148%" y="351.50"></text></g><g><title>hx`tokio::runtime::time::entry::TimerEntry::reset (2 samples, 0.05%)</title><rect x="96.7890%" y="325" width="0.0483%" height="15" fill="rgb(232,170,28)" fg:x="4009" fg:w="2"/><text x="97.0390%" y="335.50"></text></g><g><title>hx`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (2 samples, 0.05%)</title><rect x="96.7890%" y="309" width="0.0483%" height="15" fill="rgb(238,56,10)" fg:x="4009" fg:w="2"/><text x="97.0390%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`kevent (2 samples, 0.05%)</title><rect x="96.7890%" y="293" width="0.0483%" height="15" fill="rgb(235,196,14)" fg:x="4009" fg:w="2"/><text x="97.0390%" y="303.50"></text></g><g><title>hx`_mi_malloc_generic (1 samples, 0.02%)</title><rect x="96.8373%" y="357" width="0.0241%" height="15" fill="rgb(216,45,48)" fg:x="4011" fg:w="1"/><text x="97.0873%" y="367.50"></text></g><g><title>hx`_mi_free_delayed_block (1 samples, 0.02%)</title><rect x="96.8373%" y="341" width="0.0241%" height="15" fill="rgb(238,213,17)" fg:x="4011" fg:w="1"/><text x="97.0873%" y="351.50"></text></g><g><title>hx`_mi_page_free (1 samples, 0.02%)</title><rect x="96.8373%" y="325" width="0.0241%" height="15" fill="rgb(212,13,2)" fg:x="4011" fg:w="1"/><text x="97.0873%" y="335.50"></text></g><g><title>hx`mi_segment_page_clear (1 samples, 0.02%)</title><rect x="96.8373%" y="309" width="0.0241%" height="15" fill="rgb(240,114,20)" fg:x="4011" fg:w="1"/><text x="97.0873%" y="319.50"></text></g><g><title>hx`mi_segment_span_free_coalesce (1 samples, 0.02%)</title><rect x="96.8373%" y="293" width="0.0241%" height="15" fill="rgb(228,41,40)" fg:x="4011" fg:w="1"/><text x="97.0873%" y="303.50"></text></g><g><title>hx`mi_segment_span_free (1 samples, 0.02%)</title><rect x="96.8373%" y="277" width="0.0241%" height="15" fill="rgb(244,132,35)" fg:x="4011" fg:w="1"/><text x="97.0873%" y="287.50"></text></g><g><title>hx`core::str::converts::from_utf8 (1 samples, 0.02%)</title><rect x="96.8614%" y="357" width="0.0241%" height="15" fill="rgb(253,189,4)" fg:x="4012" fg:w="1"/><text x="97.1114%" y="367.50"></text></g><g><title>hx`helix_lsp::jsonrpc::_::_&lt;impl serde::de::Deserialize for helix_lsp::jsonrpc::Call&gt;::deserialize (1 samples, 0.02%)</title><rect x="96.8856%" y="357" width="0.0241%" height="15" fill="rgb(224,37,19)" fg:x="4013" fg:w="1"/><text x="97.1356%" y="367.50"></text></g><g><title>hx`helix_lsp::jsonrpc::_::_&lt;impl serde::ser::Serialize for helix_lsp::jsonrpc::Notification&gt;::serialize (1 samples, 0.02%)</title><rect x="96.9097%" y="357" width="0.0241%" height="15" fill="rgb(235,223,18)" fg:x="4014" fg:w="1"/><text x="97.1597%" y="367.50"></text></g><g><title>hx`_mi_page_retire (1 samples, 0.02%)</title><rect x="96.9338%" y="341" width="0.0241%" height="15" fill="rgb(235,163,25)" fg:x="4015" fg:w="1"/><text x="97.1838%" y="351.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.05%)</title><rect x="96.9580%" y="341" width="0.0483%" height="15" fill="rgb(217,145,28)" fg:x="4016" fg:w="2"/><text x="97.2080%" y="351.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.05%)</title><rect x="96.9580%" y="325" width="0.0483%" height="15" fill="rgb(223,223,32)" fg:x="4016" fg:w="2"/><text x="97.2080%" y="335.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.05%)</title><rect x="96.9580%" y="309" width="0.0483%" height="15" fill="rgb(227,189,39)" fg:x="4016" fg:w="2"/><text x="97.2080%" y="319.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.02%)</title><rect x="96.9821%" y="293" width="0.0241%" height="15" fill="rgb(248,10,22)" fg:x="4017" fg:w="1"/><text x="97.2321%" y="303.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.02%)</title><rect x="96.9821%" y="277" width="0.0241%" height="15" fill="rgb(248,46,39)" fg:x="4017" fg:w="1"/><text x="97.2321%" y="287.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.02%)</title><rect x="96.9821%" y="261" width="0.0241%" height="15" fill="rgb(248,113,48)" fg:x="4017" fg:w="1"/><text x="97.2321%" y="271.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.02%)</title><rect x="97.0787%" y="309" width="0.0241%" height="15" fill="rgb(245,16,25)" fg:x="4021" fg:w="1"/><text x="97.3287%" y="319.50"></text></g><g><title>hx`&lt;serde::__private::de::content::Content as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="97.1028%" y="293" width="0.0241%" height="15" fill="rgb(249,152,16)" fg:x="4022" fg:w="1"/><text x="97.3528%" y="303.50"></text></g><g><title>hx`alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="97.1028%" y="277" width="0.0241%" height="15" fill="rgb(250,16,1)" fg:x="4022" fg:w="1"/><text x="97.3528%" y="287.50"></text></g><g><title>hx`&lt;serde::__private::de::content::Content as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="97.1028%" y="261" width="0.0241%" height="15" fill="rgb(249,138,3)" fg:x="4022" fg:w="1"/><text x="97.3528%" y="271.50"></text></g><g><title>hx`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="97.1028%" y="245" width="0.0241%" height="15" fill="rgb(227,71,41)" fg:x="4022" fg:w="1"/><text x="97.3528%" y="255.50"></text></g><g><title>hx`&lt;serde::__private::de::content::Content as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="97.1028%" y="229" width="0.0241%" height="15" fill="rgb(209,184,23)" fg:x="4022" fg:w="1"/><text x="97.3528%" y="239.50"></text></g><g><title>hx`alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="97.1028%" y="213" width="0.0241%" height="15" fill="rgb(223,215,31)" fg:x="4022" fg:w="1"/><text x="97.3528%" y="223.50"></text></g><g><title>hx`&lt;T as serde::de::Expected&gt;::fmt (1 samples, 0.02%)</title><rect x="97.1511%" y="245" width="0.0241%" height="15" fill="rgb(210,146,28)" fg:x="4024" fg:w="1"/><text x="97.4011%" y="255.50"></text></g><g><title>hx`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="97.1753%" y="245" width="0.0241%" height="15" fill="rgb(209,183,41)" fg:x="4025" fg:w="1"/><text x="97.4253%" y="255.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.10%)</title><rect x="97.1270%" y="293" width="0.0966%" height="15" fill="rgb(209,224,45)" fg:x="4023" fg:w="4"/><text x="97.3770%" y="303.50"></text></g><g><title>hx`&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (3 samples, 0.07%)</title><rect x="97.1511%" y="277" width="0.0724%" height="15" fill="rgb(224,209,51)" fg:x="4024" fg:w="3"/><text x="97.4011%" y="287.50"></text></g><g><title>hx`&lt;serde_json::error::Error as serde::de::Error&gt;::custom (3 samples, 0.07%)</title><rect x="97.1511%" y="261" width="0.0724%" height="15" fill="rgb(223,17,39)" fg:x="4024" fg:w="3"/><text x="97.4011%" y="271.50"></text></g><g><title>hx`core::fmt::write (1 samples, 0.02%)</title><rect x="97.1994%" y="245" width="0.0241%" height="15" fill="rgb(234,204,37)" fg:x="4026" fg:w="1"/><text x="97.4494%" y="255.50"></text></g><g><title>hx`&lt;T as serde::de::Expected&gt;::fmt (1 samples, 0.02%)</title><rect x="97.1994%" y="229" width="0.0241%" height="15" fill="rgb(236,120,5)" fg:x="4026" fg:w="1"/><text x="97.4494%" y="239.50"></text></g><g><title>hx`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="97.1994%" y="213" width="0.0241%" height="15" fill="rgb(248,97,27)" fg:x="4026" fg:w="1"/><text x="97.4494%" y="223.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="97.2236%" y="245" width="0.0241%" height="15" fill="rgb(240,66,17)" fg:x="4027" fg:w="1"/><text x="97.4736%" y="255.50"></text></g><g><title>hx`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="97.2236%" y="229" width="0.0241%" height="15" fill="rgb(210,79,3)" fg:x="4027" fg:w="1"/><text x="97.4736%" y="239.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="97.2236%" y="213" width="0.0241%" height="15" fill="rgb(214,176,27)" fg:x="4027" fg:w="1"/><text x="97.4736%" y="223.50"></text></g><g><title>hx`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="97.2236%" y="197" width="0.0241%" height="15" fill="rgb(235,185,3)" fg:x="4027" fg:w="1"/><text x="97.4736%" y="207.50"></text></g><g><title>hx`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.02%)</title><rect x="97.2236%" y="181" width="0.0241%" height="15" fill="rgb(227,24,12)" fg:x="4027" fg:w="1"/><text x="97.4736%" y="191.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="97.2236%" y="165" width="0.0241%" height="15" fill="rgb(252,169,48)" fg:x="4027" fg:w="1"/><text x="97.4736%" y="175.50"></text></g><g><title>hx`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="97.2236%" y="149" width="0.0241%" height="15" fill="rgb(212,65,1)" fg:x="4027" fg:w="1"/><text x="97.4736%" y="159.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (2 samples, 0.05%)</title><rect x="97.2236%" y="293" width="0.0483%" height="15" fill="rgb(242,39,24)" fg:x="4027" fg:w="2"/><text x="97.4736%" y="303.50"></text></g><g><title>hx`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.05%)</title><rect x="97.2236%" y="277" width="0.0483%" height="15" fill="rgb(249,32,23)" fg:x="4027" fg:w="2"/><text x="97.4736%" y="287.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.05%)</title><rect x="97.2236%" y="261" width="0.0483%" height="15" fill="rgb(251,195,23)" fg:x="4027" fg:w="2"/><text x="97.4736%" y="271.50"></text></g><g><title>hx`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.02%)</title><rect x="97.2477%" y="245" width="0.0241%" height="15" fill="rgb(236,174,8)" fg:x="4028" fg:w="1"/><text x="97.4977%" y="255.50"></text></g><g><title>hx`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="97.2960%" y="213" width="0.0241%" height="15" fill="rgb(220,197,8)" fg:x="4030" fg:w="1"/><text x="97.5460%" y="223.50"></text></g><g><title>hx`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="97.2960%" y="197" width="0.0241%" height="15" fill="rgb(240,108,37)" fg:x="4030" fg:w="1"/><text x="97.5460%" y="207.50"></text></g><g><title>hx`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="97.2960%" y="181" width="0.0241%" height="15" fill="rgb(232,176,24)" fg:x="4030" fg:w="1"/><text x="97.5460%" y="191.50"></text></g><g><title>hx`_mi_malloc_generic (1 samples, 0.02%)</title><rect x="97.2960%" y="165" width="0.0241%" height="15" fill="rgb(243,35,29)" fg:x="4030" fg:w="1"/><text x="97.5460%" y="175.50"></text></g><g><title>hx`_mi_free_delayed_block (1 samples, 0.02%)</title><rect x="97.2960%" y="149" width="0.0241%" height="15" fill="rgb(210,37,18)" fg:x="4030" fg:w="1"/><text x="97.5460%" y="159.50"></text></g><g><title>hx`core::fmt::write (2 samples, 0.05%)</title><rect x="97.2960%" y="229" width="0.0483%" height="15" fill="rgb(224,184,40)" fg:x="4030" fg:w="2"/><text x="97.5460%" y="239.50"></text></g><g><title>hx`&lt;serde::de::Unexpected as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="97.3201%" y="213" width="0.0241%" height="15" fill="rgb(236,39,29)" fg:x="4031" fg:w="1"/><text x="97.5701%" y="223.50"></text></g><g><title>hx`core::fmt::write (1 samples, 0.02%)</title><rect x="97.3201%" y="197" width="0.0241%" height="15" fill="rgb(232,48,39)" fg:x="4031" fg:w="1"/><text x="97.5701%" y="207.50"></text></g><g><title>hx`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="97.3201%" y="181" width="0.0241%" height="15" fill="rgb(236,34,42)" fg:x="4031" fg:w="1"/><text x="97.5701%" y="191.50"></text></g><g><title>hx`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="97.3201%" y="165" width="0.0241%" height="15" fill="rgb(243,106,37)" fg:x="4031" fg:w="1"/><text x="97.5701%" y="175.50"></text></g><g><title>hx`core::str::pattern::StrSearcher::new (2 samples, 0.05%)</title><rect x="97.3443%" y="213" width="0.0483%" height="15" fill="rgb(218,96,6)" fg:x="4032" fg:w="2"/><text x="97.5943%" y="223.50"></text></g><g><title>hx`core::str::pattern::TwoWaySearcher::next_back (1 samples, 0.02%)</title><rect x="97.3926%" y="213" width="0.0241%" height="15" fill="rgb(235,130,12)" fg:x="4034" fg:w="1"/><text x="97.6426%" y="223.50"></text></g><g><title>hx`helix_lsp::jsonrpc::_::_&lt;impl serde::de::Deserialize for helix_lsp::jsonrpc::Call&gt;::deserialize (18 samples, 0.43%)</title><rect x="97.0063%" y="341" width="0.4346%" height="15" fill="rgb(231,95,0)" fg:x="4018" fg:w="18"/><text x="97.2563%" y="351.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (16 samples, 0.39%)</title><rect x="97.0546%" y="325" width="0.3863%" height="15" fill="rgb(228,12,23)" fg:x="4020" fg:w="16"/><text x="97.3046%" y="335.50"></text></g><g><title>hx`helix_lsp::jsonrpc::_::_&lt;impl serde::de::Deserialize for helix_lsp::jsonrpc::Params&gt;::deserialize (14 samples, 0.34%)</title><rect x="97.1028%" y="309" width="0.3380%" height="15" fill="rgb(216,12,1)" fg:x="4022" fg:w="14"/><text x="97.3528%" y="319.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_seq (7 samples, 0.17%)</title><rect x="97.2718%" y="293" width="0.1690%" height="15" fill="rgb(219,59,3)" fg:x="4029" fg:w="7"/><text x="97.5218%" y="303.50"></text></g><g><title>hx`serde::__private::de::content::ContentRefDeserializer&lt;E&gt;::invalid_type (6 samples, 0.14%)</title><rect x="97.2960%" y="277" width="0.1449%" height="15" fill="rgb(215,208,46)" fg:x="4030" fg:w="6"/><text x="97.5460%" y="287.50"></text></g><g><title>hx`&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (6 samples, 0.14%)</title><rect x="97.2960%" y="261" width="0.1449%" height="15" fill="rgb(254,224,29)" fg:x="4030" fg:w="6"/><text x="97.5460%" y="271.50"></text></g><g><title>hx`&lt;serde_json::error::Error as serde::de::Error&gt;::custom (6 samples, 0.14%)</title><rect x="97.2960%" y="245" width="0.1449%" height="15" fill="rgb(232,14,29)" fg:x="4030" fg:w="6"/><text x="97.5460%" y="255.50"></text></g><g><title>hx`serde_json::error::make_error (4 samples, 0.10%)</title><rect x="97.3443%" y="229" width="0.0966%" height="15" fill="rgb(208,45,52)" fg:x="4032" fg:w="4"/><text x="97.5943%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="97.4167%" y="213" width="0.0241%" height="15" fill="rgb(234,191,28)" fg:x="4035" fg:w="1"/><text x="97.6667%" y="223.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.02%)</title><rect x="97.4408%" y="325" width="0.0241%" height="15" fill="rgb(244,67,43)" fg:x="4036" fg:w="1"/><text x="97.6908%" y="335.50"></text></g><g><title>hx`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.02%)</title><rect x="97.4891%" y="165" width="0.0241%" height="15" fill="rgb(236,189,24)" fg:x="4038" fg:w="1"/><text x="97.7391%" y="175.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="97.4891%" y="149" width="0.0241%" height="15" fill="rgb(239,214,33)" fg:x="4038" fg:w="1"/><text x="97.7391%" y="159.50"></text></g><g><title>hx`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="97.4891%" y="133" width="0.0241%" height="15" fill="rgb(226,176,41)" fg:x="4038" fg:w="1"/><text x="97.7391%" y="143.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="97.4891%" y="117" width="0.0241%" height="15" fill="rgb(248,47,8)" fg:x="4038" fg:w="1"/><text x="97.7391%" y="127.50"></text></g><g><title>hx`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="97.4891%" y="101" width="0.0241%" height="15" fill="rgb(218,81,44)" fg:x="4038" fg:w="1"/><text x="97.7391%" y="111.50"></text></g><g><title>hx`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="97.4891%" y="85" width="0.0241%" height="15" fill="rgb(213,98,6)" fg:x="4038" fg:w="1"/><text x="97.7391%" y="95.50"></text></g><g><title>hx`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="97.4891%" y="69" width="0.0241%" height="15" fill="rgb(222,85,22)" fg:x="4038" fg:w="1"/><text x="97.7391%" y="79.50"></text></g><g><title>hx`_mi_malloc_generic (1 samples, 0.02%)</title><rect x="97.4891%" y="53" width="0.0241%" height="15" fill="rgb(239,46,39)" fg:x="4038" fg:w="1"/><text x="97.7391%" y="63.50"></text></g><g><title>hx`mi_page_free_list_extend (1 samples, 0.02%)</title><rect x="97.4891%" y="37" width="0.0241%" height="15" fill="rgb(237,12,29)" fg:x="4038" fg:w="1"/><text x="97.7391%" y="47.50"></text></g><g><title>hx`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.05%)</title><rect x="97.4891%" y="213" width="0.0483%" height="15" fill="rgb(214,77,8)" fg:x="4038" fg:w="2"/><text x="97.7391%" y="223.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.05%)</title><rect x="97.4891%" y="197" width="0.0483%" height="15" fill="rgb(217,168,37)" fg:x="4038" fg:w="2"/><text x="97.7391%" y="207.50"></text></g><g><title>hx`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.05%)</title><rect x="97.4891%" y="181" width="0.0483%" height="15" fill="rgb(221,217,23)" fg:x="4038" fg:w="2"/><text x="97.7391%" y="191.50"></text></g><g><title>hx`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="97.5133%" y="165" width="0.0241%" height="15" fill="rgb(243,229,36)" fg:x="4039" fg:w="1"/><text x="97.7633%" y="175.50"></text></g><g><title>hx`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="97.5133%" y="149" width="0.0241%" height="15" fill="rgb(251,163,40)" fg:x="4039" fg:w="1"/><text x="97.7633%" y="159.50"></text></g><g><title>hx`_mi_malloc_generic (1 samples, 0.02%)</title><rect x="97.5133%" y="133" width="0.0241%" height="15" fill="rgb(237,222,12)" fg:x="4039" fg:w="1"/><text x="97.7633%" y="143.50"></text></g><g><title>hx`mi_page_free_list_extend (1 samples, 0.02%)</title><rect x="97.5133%" y="117" width="0.0241%" height="15" fill="rgb(248,132,6)" fg:x="4039" fg:w="1"/><text x="97.7633%" y="127.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.07%)</title><rect x="97.4891%" y="309" width="0.0724%" height="15" fill="rgb(227,167,50)" fg:x="4038" fg:w="3"/><text x="97.7391%" y="319.50"></text></g><g><title>hx`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.07%)</title><rect x="97.4891%" y="293" width="0.0724%" height="15" fill="rgb(242,84,37)" fg:x="4038" fg:w="3"/><text x="97.7391%" y="303.50"></text></g><g><title>hx`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.07%)</title><rect x="97.4891%" y="277" width="0.0724%" height="15" fill="rgb(212,4,50)" fg:x="4038" fg:w="3"/><text x="97.7391%" y="287.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.07%)</title><rect x="97.4891%" y="261" width="0.0724%" height="15" fill="rgb(230,228,32)" fg:x="4038" fg:w="3"/><text x="97.7391%" y="271.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.07%)</title><rect x="97.4891%" y="245" width="0.0724%" height="15" fill="rgb(248,217,23)" fg:x="4038" fg:w="3"/><text x="97.7391%" y="255.50"></text></g><g><title>hx`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.07%)</title><rect x="97.4891%" y="229" width="0.0724%" height="15" fill="rgb(238,197,32)" fg:x="4038" fg:w="3"/><text x="97.7391%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.02%)</title><rect x="97.5374%" y="213" width="0.0241%" height="15" fill="rgb(236,106,1)" fg:x="4040" fg:w="1"/><text x="97.7874%" y="223.50"></text></g><g><title>hx`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="97.5857%" y="261" width="0.0241%" height="15" fill="rgb(219,228,13)" fg:x="4042" fg:w="1"/><text x="97.8357%" y="271.50"></text></g><g><title>hx`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="97.5857%" y="245" width="0.0241%" height="15" fill="rgb(238,30,35)" fg:x="4042" fg:w="1"/><text x="97.8357%" y="255.50"></text></g><g><title>hx`mi_realloc (1 samples, 0.02%)</title><rect x="97.5857%" y="229" width="0.0241%" height="15" fill="rgb(236,70,23)" fg:x="4042" fg:w="1"/><text x="97.8357%" y="239.50"></text></g><g><title>hx`core::fmt::write (2 samples, 0.05%)</title><rect x="97.5857%" y="277" width="0.0483%" height="15" fill="rgb(249,104,48)" fg:x="4042" fg:w="2"/><text x="97.8357%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="97.6099%" y="261" width="0.0241%" height="15" fill="rgb(254,117,50)" fg:x="4043" fg:w="1"/><text x="97.8599%" y="271.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (8 samples, 0.19%)</title><rect x="97.4650%" y="325" width="0.1931%" height="15" fill="rgb(223,152,4)" fg:x="4037" fg:w="8"/><text x="97.7150%" y="335.50"></text></g><g><title>hx`serde::de::Error::missing_field (4 samples, 0.10%)</title><rect x="97.5616%" y="309" width="0.0966%" height="15" fill="rgb(245,6,2)" fg:x="4041" fg:w="4"/><text x="97.8116%" y="319.50"></text></g><g><title>hx`&lt;serde_json::error::Error as serde::de::Error&gt;::custom (4 samples, 0.10%)</title><rect x="97.5616%" y="293" width="0.0966%" height="15" fill="rgb(249,150,24)" fg:x="4041" fg:w="4"/><text x="97.8116%" y="303.50"></text></g><g><title>hx`serde_json::error::make_error (1 samples, 0.02%)</title><rect x="97.6340%" y="277" width="0.0241%" height="15" fill="rgb(228,185,42)" fg:x="4044" fg:w="1"/><text x="97.8840%" y="287.50"></text></g><g><title>hx`mi_malloc (1 samples, 0.02%)</title><rect x="97.6340%" y="261" width="0.0241%" height="15" fill="rgb(226,39,33)" fg:x="4044" fg:w="1"/><text x="97.8840%" y="271.50"></text></g><g><title>hx`helix_lsp::jsonrpc::_::_&lt;impl serde::de::Deserialize for helix_lsp::jsonrpc::Output&gt;::deserialize (10 samples, 0.24%)</title><rect x="97.4408%" y="341" width="0.2414%" height="15" fill="rgb(221,166,19)" fg:x="4036" fg:w="10"/><text x="97.6908%" y="351.50"></text></g><g><title>hx`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.02%)</title><rect x="97.6581%" y="325" width="0.0241%" height="15" fill="rgb(209,109,2)" fg:x="4045" fg:w="1"/><text x="97.9081%" y="335.50"></text></g><g><title>hx`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.02%)</title><rect x="97.7064%" y="309" width="0.0241%" height="15" fill="rgb(252,216,26)" fg:x="4047" fg:w="1"/><text x="97.9564%" y="319.50"></text></g><g><title>hx`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect x="97.7064%" y="293" width="0.0241%" height="15" fill="rgb(227,173,36)" fg:x="4047" fg:w="1"/><text x="97.9564%" y="303.50"></text></g><g><title>hx`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect x="97.7306%" y="309" width="0.0241%" height="15" fill="rgb(209,90,7)" fg:x="4048" fg:w="1"/><text x="97.9806%" y="319.50"></text></g><g><title>hx`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="97.7547%" y="197" width="0.0241%" height="15" fill="rgb(250,194,11)" fg:x="4049" fg:w="1"/><text x="98.0047%" y="207.50"></text></g><g><title>hx`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="97.7547%" y="181" width="0.0241%" height="15" fill="rgb(220,72,50)" fg:x="4049" fg:w="1"/><text x="98.0047%" y="191.50"></text></g><g><title>hx`_mi_heap_realloc_zero (1 samples, 0.02%)</title><rect x="97.7547%" y="165" width="0.0241%" height="15" fill="rgb(222,106,48)" fg:x="4049" fg:w="1"/><text x="98.0047%" y="175.50"></text></g><g><title>hx`_mi_malloc_generic (1 samples, 0.02%)</title><rect x="97.7547%" y="149" width="0.0241%" height="15" fill="rgb(216,220,45)" fg:x="4049" fg:w="1"/><text x="98.0047%" y="159.50"></text></g><g><title>hx`mi_find_page (1 samples, 0.02%)</title><rect x="97.7547%" y="133" width="0.0241%" height="15" fill="rgb(234,112,18)" fg:x="4049" fg:w="1"/><text x="98.0047%" y="143.50"></text></g><g><title>hx`mi_page_free_list_extend (1 samples, 0.02%)</title><rect x="97.7547%" y="117" width="0.0241%" height="15" fill="rgb(206,179,9)" fg:x="4049" fg:w="1"/><text x="98.0047%" y="127.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.02%)</title><rect x="97.7789%" y="149" width="0.0241%" height="15" fill="rgb(215,115,40)" fg:x="4050" fg:w="1"/><text x="98.0289%" y="159.50"></text></g><g><title>hx`serde::de::Deserializer::__deserialize_content (5 samples, 0.12%)</title><rect x="97.7789%" y="165" width="0.1207%" height="15" fill="rgb(222,69,34)" fg:x="4050" fg:w="5"/><text x="98.0289%" y="175.50"></text></g><g><title>hx`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (4 samples, 0.10%)</title><rect x="97.8030%" y="149" width="0.0966%" height="15" fill="rgb(209,161,10)" fg:x="4051" fg:w="4"/><text x="98.0530%" y="159.50"></text></g><g><title>hx`helix_lsp::transport::_::_&lt;impl serde::de::Deserialize for helix_lsp::transport::ServerMessage&gt;::deserialize (41 samples, 0.99%)</title><rect x="96.9338%" y="357" width="0.9899%" height="15" fill="rgb(217,6,38)" fg:x="4015" fg:w="41"/><text x="97.1838%" y="367.50"></text></g><g><title>hx`serde::de::Deserializer::__deserialize_content (10 samples, 0.24%)</title><rect x="97.6823%" y="341" width="0.2414%" height="15" fill="rgb(229,229,48)" fg:x="4046" fg:w="10"/><text x="97.9323%" y="351.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.24%)</title><rect x="97.6823%" y="325" width="0.2414%" height="15" fill="rgb(225,21,28)" fg:x="4046" fg:w="10"/><text x="97.9323%" y="335.50"></text></g><g><title>hx`serde::de::Deserializer::__deserialize_content (7 samples, 0.17%)</title><rect x="97.7547%" y="309" width="0.1690%" height="15" fill="rgb(206,33,13)" fg:x="4049" fg:w="7"/><text x="98.0047%" y="319.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.17%)</title><rect x="97.7547%" y="293" width="0.1690%" height="15" fill="rgb(242,178,17)" fg:x="4049" fg:w="7"/><text x="98.0047%" y="303.50"></text></g><g><title>hx`serde::de::Deserializer::__deserialize_content (7 samples, 0.17%)</title><rect x="97.7547%" y="277" width="0.1690%" height="15" fill="rgb(220,162,5)" fg:x="4049" fg:w="7"/><text x="98.0047%" y="287.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (7 samples, 0.17%)</title><rect x="97.7547%" y="261" width="0.1690%" height="15" fill="rgb(210,33,43)" fg:x="4049" fg:w="7"/><text x="98.0047%" y="271.50"></text></g><g><title>hx`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7 samples, 0.17%)</title><rect x="97.7547%" y="245" width="0.1690%" height="15" fill="rgb(216,116,54)" fg:x="4049" fg:w="7"/><text x="98.0047%" y="255.50"></text></g><g><title>hx`serde::de::Deserializer::__deserialize_content (7 samples, 0.17%)</title><rect x="97.7547%" y="229" width="0.1690%" height="15" fill="rgb(249,92,24)" fg:x="4049" fg:w="7"/><text x="98.0047%" y="239.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.17%)</title><rect x="97.7547%" y="213" width="0.1690%" height="15" fill="rgb(231,189,14)" fg:x="4049" fg:w="7"/><text x="98.0047%" y="223.50"></text></g><g><title>hx`serde::de::Deserializer::__deserialize_content (6 samples, 0.14%)</title><rect x="97.7789%" y="197" width="0.1449%" height="15" fill="rgb(230,8,41)" fg:x="4050" fg:w="6"/><text x="98.0289%" y="207.50"></text></g><g><title>hx`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.14%)</title><rect x="97.7789%" y="181" width="0.1449%" height="15" fill="rgb(249,7,27)" fg:x="4050" fg:w="6"/><text x="98.0289%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="97.8996%" y="165" width="0.0241%" height="15" fill="rgb(232,86,5)" fg:x="4055" fg:w="1"/><text x="98.1496%" y="175.50"></text></g><g><title>hx`mi_zalloc (2 samples, 0.05%)</title><rect x="97.9237%" y="357" width="0.0483%" height="15" fill="rgb(224,175,18)" fg:x="4056" fg:w="2"/><text x="98.1737%" y="367.50"></text></g><g><title>hx`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="97.9720%" y="341" width="0.0241%" height="15" fill="rgb(220,129,12)" fg:x="4058" fg:w="1"/><text x="98.2220%" y="351.50"></text></g><g><title>hx`lsp_types::_::_&lt;impl serde::ser::Serialize for lsp_types::VersionedTextDocumentIdentifier&gt;::serialize (1 samples, 0.02%)</title><rect x="97.9961%" y="309" width="0.0241%" height="15" fill="rgb(210,19,36)" fg:x="4059" fg:w="1"/><text x="98.2461%" y="319.50"></text></g><g><title>hx`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="97.9961%" y="293" width="0.0241%" height="15" fill="rgb(219,96,14)" fg:x="4059" fg:w="1"/><text x="98.2461%" y="303.50"></text></g><g><title>hx`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="97.9961%" y="277" width="0.0241%" height="15" fill="rgb(249,106,1)" fg:x="4059" fg:w="1"/><text x="98.2461%" y="287.50"></text></g><g><title>hx`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="97.9961%" y="261" width="0.0241%" height="15" fill="rgb(249,155,20)" fg:x="4059" fg:w="1"/><text x="98.2461%" y="271.50"></text></g><g><title>hx`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.02%)</title><rect x="97.9961%" y="245" width="0.0241%" height="15" fill="rgb(244,168,9)" fg:x="4059" fg:w="1"/><text x="98.2461%" y="255.50"></text></g><g><title>hx`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.07%)</title><rect x="97.9961%" y="325" width="0.0724%" height="15" fill="rgb(216,23,50)" fg:x="4059" fg:w="3"/><text x="98.2461%" y="335.50"></text></g><g><title>hx`serde::ser::Serializer::collect_seq (2 samples, 0.05%)</title><rect x="98.0203%" y="309" width="0.0483%" height="15" fill="rgb(224,219,20)" fg:x="4060" fg:w="2"/><text x="98.2703%" y="319.50"></text></g><g><title>hx`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.02%)</title><rect x="98.0444%" y="293" width="0.0241%" height="15" fill="rgb(222,156,15)" fg:x="4061" fg:w="1"/><text x="98.2944%" y="303.50"></text></g><g><title>hx`serde_json::value::to_value (5 samples, 0.12%)</title><rect x="97.9720%" y="357" width="0.1207%" height="15" fill="rgb(231,97,17)" fg:x="4058" fg:w="5"/><text x="98.2220%" y="367.50"></text></g><g><title>hx`lsp_types::_::_&lt;impl serde::ser::Serialize for lsp_types::DidChangeTextDocumentParams&gt;::serialize (4 samples, 0.10%)</title><rect x="97.9961%" y="341" width="0.0966%" height="15" fill="rgb(218,70,48)" fg:x="4059" fg:w="4"/><text x="98.2461%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="98.0686%" y="325" width="0.0241%" height="15" fill="rgb(212,196,52)" fg:x="4062" fg:w="1"/><text x="98.3186%" y="335.50"></text></g><g><title>hx`tokio::runtime::blocking::pool::spawn_blocking (2 samples, 0.05%)</title><rect x="98.0927%" y="341" width="0.0483%" height="15" fill="rgb(243,203,18)" fg:x="4063" fg:w="2"/><text x="98.3427%" y="351.50"></text></g><g><title>hx`tokio::runtime::blocking::pool::Spawner::spawn_blocking (2 samples, 0.05%)</title><rect x="98.0927%" y="325" width="0.0483%" height="15" fill="rgb(252,125,41)" fg:x="4063" fg:w="2"/><text x="98.3427%" y="335.50"></text></g><g><title>hx`tokio::runtime::blocking::pool::Spawner::spawn_task (2 samples, 0.05%)</title><rect x="98.0927%" y="309" width="0.0483%" height="15" fill="rgb(223,180,33)" fg:x="4063" fg:w="2"/><text x="98.3427%" y="319.50"></text></g><g><title>hx`&lt;ropey::slice::RopeSlice as core::cmp::PartialEq&lt;ropey::slice::RopeSlice&gt;&gt;::eq (2 samples, 0.05%)</title><rect x="98.2134%" y="277" width="0.0483%" height="15" fill="rgb(254,159,46)" fg:x="4068" fg:w="2"/><text x="98.4634%" y="287.50"></text></g><g><title>hx`ropey::iter::Chunks::next_impl (1 samples, 0.02%)</title><rect x="98.2376%" y="261" width="0.0241%" height="15" fill="rgb(254,38,10)" fg:x="4069" fg:w="1"/><text x="98.4876%" y="271.50"></text></g><g><title>hx`&lt;ropey::slice::RopeSlice as core::hash::Hash&gt;::hash (5 samples, 0.12%)</title><rect x="98.2617%" y="277" width="0.1207%" height="15" fill="rgb(208,217,32)" fg:x="4070" fg:w="5"/><text x="98.5117%" y="287.50"></text></g><g><title>hx`ropey::iter::Chunks::next_impl (1 samples, 0.02%)</title><rect x="98.3583%" y="261" width="0.0241%" height="15" fill="rgb(221,120,13)" fg:x="4074" fg:w="1"/><text x="98.6083%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (4 samples, 0.10%)</title><rect x="98.3824%" y="277" width="0.0966%" height="15" fill="rgb(246,54,52)" fg:x="4075" fg:w="4"/><text x="98.6324%" y="287.50"></text></g><g><title>hx`imara_diff::intern::Interner&lt;T&gt;::intern (17 samples, 0.41%)</title><rect x="98.1410%" y="293" width="0.4104%" height="15" fill="rgb(242,34,25)" fg:x="4065" fg:w="17"/><text x="98.3910%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.07%)</title><rect x="98.4790%" y="277" width="0.0724%" height="15" fill="rgb(247,209,9)" fg:x="4079" fg:w="3"/><text x="98.7290%" y="287.50"></text></g><g><title>hx`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (52 samples, 1.26%)</title><rect x="98.1410%" y="309" width="1.2554%" height="15" fill="rgb(228,71,26)" fg:x="4065" fg:w="52"/><text x="98.3910%" y="319.50"></text></g><g><title>hx`ropey::iter::Lines::next_impl (35 samples, 0.85%)</title><rect x="98.5514%" y="293" width="0.8450%" height="15" fill="rgb(222,145,49)" fg:x="4082" fg:w="35"/><text x="98.8014%" y="303.50"></text></g><g><title>hx`str_indices::lines_lf::to_byte_idx (14 samples, 0.34%)</title><rect x="99.0584%" y="277" width="0.3380%" height="15" fill="rgb(218,121,17)" fg:x="4103" fg:w="14"/><text x="99.3084%" y="287.50"></text></g><g><title>hx`imara_diff::intern::Interner&lt;T&gt;::intern (1 samples, 0.02%)</title><rect x="99.3964%" y="309" width="0.0241%" height="15" fill="rgb(244,50,7)" fg:x="4117" fg:w="1"/><text x="99.6464%" y="319.50"></text></g><g><title>hx`helix_vcs::diff::line_cache::InternedRopeLines::update_doc (54 samples, 1.30%)</title><rect x="98.1410%" y="325" width="1.3037%" height="15" fill="rgb(246,229,37)" fg:x="4065" fg:w="54"/><text x="98.3910%" y="335.50"></text></g><g><title>hx`ropey::iter::Lines::new_with_range_at (1 samples, 0.02%)</title><rect x="99.4206%" y="309" width="0.0241%" height="15" fill="rgb(225,18,5)" fg:x="4118" fg:w="1"/><text x="99.6706%" y="319.50"></text></g><g><title>hx`imara_diff::histogram::diff (1 samples, 0.02%)</title><rect x="99.4447%" y="325" width="0.0241%" height="15" fill="rgb(213,204,8)" fg:x="4119" fg:w="1"/><text x="99.6947%" y="335.50"></text></g><g><title>hx`tokio::runtime::scheduler::multi_thread::worker::block_in_place (58 samples, 1.40%)</title><rect x="98.0927%" y="357" width="1.4003%" height="15" fill="rgb(238,103,6)" fg:x="4063" fg:w="58"/><text x="98.3427%" y="367.50"></text></g><g><title>hx`tokio::runtime::context::exit_runtime (56 samples, 1.35%)</title><rect x="98.1410%" y="341" width="1.3520%" height="15" fill="rgb(222,25,35)" fg:x="4065" fg:w="56"/><text x="98.3910%" y="351.50"></text></g><g><title>hx`ropey::iter::Lines::new_with_range_at (1 samples, 0.02%)</title><rect x="99.4689%" y="325" width="0.0241%" height="15" fill="rgb(213,203,35)" fg:x="4120" fg:w="1"/><text x="99.7189%" y="335.50"></text></g><g><title>hx`tokio::runtime::task::waker::wake_by_val (1 samples, 0.02%)</title><rect x="99.4930%" y="357" width="0.0241%" height="15" fill="rgb(221,79,53)" fg:x="4121" fg:w="1"/><text x="99.7430%" y="367.50"></text></g><g><title>hx`tokio::runtime::task::state::State::transition_to_notified_by_val (1 samples, 0.02%)</title><rect x="99.4930%" y="341" width="0.0241%" height="15" fill="rgb(243,200,35)" fg:x="4121" fg:w="1"/><text x="99.7430%" y="351.50"></text></g><g><title>hx`tokio::sync::notify::Notify::notify_waiters (1 samples, 0.02%)</title><rect x="99.5171%" y="357" width="0.0241%" height="15" fill="rgb(248,60,25)" fg:x="4122" fg:w="1"/><text x="99.7671%" y="367.50"></text></g><g><title>hx`tokio::runtime::task::waker::wake_by_val (1 samples, 0.02%)</title><rect x="99.5171%" y="341" width="0.0241%" height="15" fill="rgb(227,53,46)" fg:x="4122" fg:w="1"/><text x="99.7671%" y="351.50"></text></g><g><title>hx`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1 samples, 0.02%)</title><rect x="99.5171%" y="325" width="0.0241%" height="15" fill="rgb(216,120,32)" fg:x="4122" fg:w="1"/><text x="99.7671%" y="335.50"></text></g><g><title>hx`tokio::runtime::driver::Handle::unpark (1 samples, 0.02%)</title><rect x="99.5171%" y="309" width="0.0241%" height="15" fill="rgb(220,134,1)" fg:x="4122" fg:w="1"/><text x="99.7671%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.02%)</title><rect x="99.5171%" y="293" width="0.0241%" height="15" fill="rgb(237,168,5)" fg:x="4122" fg:w="1"/><text x="99.7671%" y="303.50"></text></g><g><title>hx`tokio::runtime::context::try_current (1 samples, 0.02%)</title><rect x="99.5413%" y="341" width="0.0241%" height="15" fill="rgb(231,100,33)" fg:x="4123" fg:w="1"/><text x="99.7913%" y="351.50"></text></g><g><title>hx`mi_heap_malloc_aligned (1 samples, 0.02%)</title><rect x="99.5654%" y="309" width="0.0241%" height="15" fill="rgb(236,177,47)" fg:x="4124" fg:w="1"/><text x="99.8154%" y="319.50"></text></g><g><title>hx`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (134 samples, 3.24%)</title><rect x="96.3786%" y="373" width="3.2352%" height="15" fill="rgb(235,7,49)" fg:x="3992" fg:w="134"/><text x="96.6286%" y="383.50">hx`..</text></g><g><title>hx`tokio::task::spawn::spawn (3 samples, 0.07%)</title><rect x="99.5413%" y="357" width="0.0724%" height="15" fill="rgb(232,119,22)" fg:x="4123" fg:w="3"/><text x="99.7913%" y="367.50"></text></g><g><title>hx`tokio::runtime::scheduler::Handle::spawn (2 samples, 0.05%)</title><rect x="99.5654%" y="341" width="0.0483%" height="15" fill="rgb(254,73,53)" fg:x="4124" fg:w="2"/><text x="99.8154%" y="351.50"></text></g><g><title>hx`tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (2 samples, 0.05%)</title><rect x="99.5654%" y="325" width="0.0483%" height="15" fill="rgb(251,35,20)" fg:x="4124" fg:w="2"/><text x="99.8154%" y="335.50"></text></g><g><title>hx`tokio::runtime::task::core::Cell&lt;T,S&gt;::new (1 samples, 0.02%)</title><rect x="99.5896%" y="309" width="0.0241%" height="15" fill="rgb(241,119,20)" fg:x="4125" fg:w="1"/><text x="99.8396%" y="319.50"></text></g><g><title>hx`mi_heap_malloc_zero_aligned_at_fallback (1 samples, 0.02%)</title><rect x="99.5896%" y="293" width="0.0241%" height="15" fill="rgb(207,102,14)" fg:x="4125" fg:w="1"/><text x="99.8396%" y="303.50"></text></g><g><title>hx`_mi_malloc_generic (1 samples, 0.02%)</title><rect x="99.5896%" y="277" width="0.0241%" height="15" fill="rgb(248,201,50)" fg:x="4125" fg:w="1"/><text x="99.8396%" y="287.50"></text></g><g><title>hx`_mi_free_delayed_block (1 samples, 0.02%)</title><rect x="99.5896%" y="261" width="0.0241%" height="15" fill="rgb(222,185,44)" fg:x="4125" fg:w="1"/><text x="99.8396%" y="271.50"></text></g><g><title>hx`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (147 samples, 3.55%)</title><rect x="96.0888%" y="437" width="3.5490%" height="15" fill="rgb(218,107,18)" fg:x="3980" fg:w="147"/><text x="96.3388%" y="447.50">hx`t..</text></g><g><title>hx`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (137 samples, 3.31%)</title><rect x="96.3303%" y="421" width="3.3076%" height="15" fill="rgb(237,177,39)" fg:x="3990" fg:w="137"/><text x="96.5803%" y="431.50">hx`..</text></g><g><title>hx`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (137 samples, 3.31%)</title><rect x="96.3303%" y="405" width="3.3076%" height="15" fill="rgb(246,69,6)" fg:x="3990" fg:w="137"/><text x="96.5803%" y="415.50">hx`..</text></g><g><title>hx`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (136 samples, 3.28%)</title><rect x="96.3544%" y="389" width="3.2834%" height="15" fill="rgb(234,208,37)" fg:x="3991" fg:w="136"/><text x="96.6044%" y="399.50">hx`..</text></g><g><title>hx`tokio::sync::notify::Notified::poll_notified (1 samples, 0.02%)</title><rect x="99.6137%" y="373" width="0.0241%" height="15" fill="rgb(225,4,6)" fg:x="4126" fg:w="1"/><text x="99.8637%" y="383.50"></text></g><g><title>hx`tokio::runtime::blocking::pool::Inner::run (214 samples, 5.17%)</title><rect x="94.5196%" y="549" width="5.1666%" height="15" fill="rgb(233,45,0)" fg:x="3915" fg:w="214"/><text x="94.7696%" y="559.50">hx`tok..</text></g><g><title>hx`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (210 samples, 5.07%)</title><rect x="94.6161%" y="533" width="5.0700%" height="15" fill="rgb(226,136,5)" fg:x="3919" fg:w="210"/><text x="94.8661%" y="543.50">hx`tok..</text></g><g><title>hx`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (210 samples, 5.07%)</title><rect x="94.6161%" y="517" width="5.0700%" height="15" fill="rgb(211,91,47)" fg:x="3919" fg:w="210"/><text x="94.8661%" y="527.50">hx`tok..</text></g><g><title>hx`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (210 samples, 5.07%)</title><rect x="94.6161%" y="501" width="5.0700%" height="15" fill="rgb(242,88,51)" fg:x="3919" fg:w="210"/><text x="94.8661%" y="511.50">hx`tok..</text></g><g><title>hx`tokio::runtime::scheduler::multi_thread::worker::run (208 samples, 5.02%)</title><rect x="94.6644%" y="485" width="5.0217%" height="15" fill="rgb(230,91,28)" fg:x="3921" fg:w="208"/><text x="94.9144%" y="495.50">hx`tok..</text></g><g><title>hx`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (208 samples, 5.02%)</title><rect x="94.6644%" y="469" width="5.0217%" height="15" fill="rgb(254,186,29)" fg:x="3921" fg:w="208"/><text x="94.9144%" y="479.50">hx`tok..</text></g><g><title>hx`tokio::runtime::scheduler::multi_thread::worker::Context::run (208 samples, 5.02%)</title><rect x="94.6644%" y="453" width="5.0217%" height="15" fill="rgb(238,6,4)" fg:x="3921" fg:w="208"/><text x="94.9144%" y="463.50">hx`tok..</text></g><g><title>hx`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.05%)</title><rect x="99.6379%" y="437" width="0.0483%" height="15" fill="rgb(221,151,16)" fg:x="4127" fg:w="2"/><text x="99.8879%" y="447.50"></text></g><g><title>hx`parking_lot_core::parking_lot::lock_bucket_pair (1 samples, 0.02%)</title><rect x="99.6861%" y="517" width="0.0241%" height="15" fill="rgb(251,143,52)" fg:x="4129" fg:w="1"/><text x="99.9361%" y="527.50"></text></g><g><title>hx`parking_lot::condvar::Condvar::notify_one_slow (4 samples, 0.10%)</title><rect x="99.6861%" y="533" width="0.0966%" height="15" fill="rgb(206,90,15)" fg:x="4129" fg:w="4"/><text x="99.9361%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (3 samples, 0.07%)</title><rect x="99.7103%" y="517" width="0.0724%" height="15" fill="rgb(218,35,8)" fg:x="4130" fg:w="3"/><text x="99.9603%" y="527.50"></text></g><g><title>hx`std::sys_common::backtrace::__rust_begin_short_backtrace (250 samples, 6.04%)</title><rect x="93.7711%" y="565" width="6.0357%" height="15" fill="rgb(239,215,6)" fg:x="3884" fg:w="250"/><text x="94.0211%" y="575.50">hx`std::..</text></g><g><title>hx`tokio::runtime::park::wake (5 samples, 0.12%)</title><rect x="99.6861%" y="549" width="0.1207%" height="15" fill="rgb(245,116,39)" fg:x="4129" fg:w="5"/><text x="99.9361%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.02%)</title><rect x="99.7827%" y="533" width="0.0241%" height="15" fill="rgb(242,65,28)" fg:x="4133" fg:w="1"/><text x="100.0327%" y="543.50"></text></g><g><title>hx`_mi_arena_alloc_aligned (2 samples, 0.05%)</title><rect x="99.8069%" y="469" width="0.0483%" height="15" fill="rgb(252,132,53)" fg:x="4134" fg:w="2"/><text x="100.0569%" y="479.50"></text></g><g><title>hx`_mi_os_alloc_aligned (2 samples, 0.05%)</title><rect x="99.8069%" y="453" width="0.0483%" height="15" fill="rgb(224,159,50)" fg:x="4134" fg:w="2"/><text x="100.0569%" y="463.50"></text></g><g><title>hx`mi_os_mem_alloc (2 samples, 0.05%)</title><rect x="99.8069%" y="437" width="0.0483%" height="15" fill="rgb(224,93,4)" fg:x="4134" fg:w="2"/><text x="100.0569%" y="447.50"></text></g><g><title>hx`mi_unix_mmapx (2 samples, 0.05%)</title><rect x="99.8069%" y="421" width="0.0483%" height="15" fill="rgb(208,81,34)" fg:x="4134" fg:w="2"/><text x="100.0569%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (2 samples, 0.05%)</title><rect x="99.8069%" y="405" width="0.0483%" height="15" fill="rgb(233,92,54)" fg:x="4134" fg:w="2"/><text x="100.0569%" y="415.50"></text></g><g><title>hx`mi_segment_alloc (3 samples, 0.07%)</title><rect x="99.8069%" y="485" width="0.0724%" height="15" fill="rgb(237,21,14)" fg:x="4134" fg:w="3"/><text x="100.0569%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__mprotect (1 samples, 0.02%)</title><rect x="99.8551%" y="469" width="0.0241%" height="15" fill="rgb(249,128,51)" fg:x="4136" fg:w="1"/><text x="100.1051%" y="479.50"></text></g><g><title>hx`mi_segment_reclaim (1 samples, 0.02%)</title><rect x="99.8793%" y="485" width="0.0241%" height="15" fill="rgb(223,129,24)" fg:x="4137" fg:w="1"/><text x="100.1293%" y="495.50"></text></g><g><title>hx`mi_segment_span_free_coalesce (1 samples, 0.02%)</title><rect x="99.8793%" y="469" width="0.0241%" height="15" fill="rgb(231,168,25)" fg:x="4137" fg:w="1"/><text x="100.1293%" y="479.50"></text></g><g><title>hx`mi_segment_span_free (1 samples, 0.02%)</title><rect x="99.8793%" y="453" width="0.0241%" height="15" fill="rgb(224,39,20)" fg:x="4137" fg:w="1"/><text x="100.1293%" y="463.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.02%)</title><rect x="99.8793%" y="437" width="0.0241%" height="15" fill="rgb(225,152,53)" fg:x="4137" fg:w="1"/><text x="100.1293%" y="447.50"></text></g><g><title>hx`core::ops::function::FnOnce::call_once{{vtable.shim}} (256 samples, 6.18%)</title><rect x="93.7470%" y="581" width="6.1806%" height="15" fill="rgb(252,17,24)" fg:x="3883" fg:w="256"/><text x="93.9970%" y="591.50">hx`core:..</text></g><g><title>hx`std::sys_common::thread_info::set (5 samples, 0.12%)</title><rect x="99.8069%" y="565" width="0.1207%" height="15" fill="rgb(250,114,30)" fg:x="4134" fg:w="5"/><text x="100.0569%" y="575.50"></text></g><g><title>hx`_mi_malloc_generic (5 samples, 0.12%)</title><rect x="99.8069%" y="549" width="0.1207%" height="15" fill="rgb(229,5,4)" fg:x="4134" fg:w="5"/><text x="100.0569%" y="559.50"></text></g><g><title>hx`mi_find_page (5 samples, 0.12%)</title><rect x="99.8069%" y="533" width="0.1207%" height="15" fill="rgb(225,176,49)" fg:x="4134" fg:w="5"/><text x="100.0569%" y="543.50"></text></g><g><title>hx`mi_page_fresh_alloc (5 samples, 0.12%)</title><rect x="99.8069%" y="517" width="0.1207%" height="15" fill="rgb(224,221,49)" fg:x="4134" fg:w="5"/><text x="100.0569%" y="527.50"></text></g><g><title>hx`mi_segments_page_alloc (5 samples, 0.12%)</title><rect x="99.8069%" y="501" width="0.1207%" height="15" fill="rgb(253,169,27)" fg:x="4134" fg:w="5"/><text x="100.0569%" y="511.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.02%)</title><rect x="99.9034%" y="485" width="0.0241%" height="15" fill="rgb(211,206,16)" fg:x="4138" fg:w="1"/><text x="100.1534%" y="495.50"></text></g><g><title>hx`std::sys::unix::thread::Thread::new::thread_start (257 samples, 6.20%)</title><rect x="93.7470%" y="597" width="6.2047%" height="15" fill="rgb(244,87,35)" fg:x="3883" fg:w="257"/><text x="93.9970%" y="607.50">hx`std::..</text></g><g><title>libsystem_kernel.dylib`__mprotect (1 samples, 0.02%)</title><rect x="99.9276%" y="581" width="0.0241%" height="15" fill="rgb(246,28,10)" fg:x="4139" fg:w="1"/><text x="100.1776%" y="591.50"></text></g><g><title>hx`_mi_thread_done (1 samples, 0.02%)</title><rect x="99.9517%" y="565" width="0.0241%" height="15" fill="rgb(229,12,44)" fg:x="4140" fg:w="1"/><text x="100.2017%" y="575.50"></text></g><g><title>hx`mi_heap_collect_ex (1 samples, 0.02%)</title><rect x="99.9517%" y="549" width="0.0241%" height="15" fill="rgb(210,145,37)" fg:x="4140" fg:w="1"/><text x="100.2017%" y="559.50"></text></g><g><title>hx`_mi_abandoned_collect (1 samples, 0.02%)</title><rect x="99.9517%" y="533" width="0.0241%" height="15" fill="rgb(227,112,52)" fg:x="4140" fg:w="1"/><text x="100.2017%" y="543.50"></text></g><g><title>hx`mi_segment_delayed_decommit (1 samples, 0.02%)</title><rect x="99.9517%" y="517" width="0.0241%" height="15" fill="rgb(238,155,34)" fg:x="4140" fg:w="1"/><text x="100.2017%" y="527.50"></text></g><g><title>hx`_mi_clock_now (1 samples, 0.02%)</title><rect x="99.9517%" y="501" width="0.0241%" height="15" fill="rgb(239,226,36)" fg:x="4140" fg:w="1"/><text x="100.2017%" y="511.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.02%)</title><rect x="99.9517%" y="485" width="0.0241%" height="15" fill="rgb(230,16,23)" fg:x="4140" fg:w="1"/><text x="100.2017%" y="495.50"></text></g><g><title>libsystem_c.dylib`_mach_boottime_usec (1 samples, 0.02%)</title><rect x="99.9517%" y="469" width="0.0241%" height="15" fill="rgb(236,171,36)" fg:x="4140" fg:w="1"/><text x="100.2017%" y="479.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (1 samples, 0.02%)</title><rect x="99.9517%" y="453" width="0.0241%" height="15" fill="rgb(221,22,14)" fg:x="4140" fg:w="1"/><text x="100.2017%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.02%)</title><rect x="99.9517%" y="437" width="0.0241%" height="15" fill="rgb(242,43,11)" fg:x="4140" fg:w="1"/><text x="100.2017%" y="447.50"></text></g><g><title>all (4,142 samples, 100%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(232,69,23)" fg:x="0" fg:w="4142"/><text x="0.2500%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (259 samples, 6.25%)</title><rect x="93.7470%" y="629" width="6.2530%" height="15" fill="rgb(216,180,54)" fg:x="3883" fg:w="259"/><text x="93.9970%" y="639.50">libsyste..</text></g><g><title>libsystem_pthread.dylib`_pthread_start (259 samples, 6.25%)</title><rect x="93.7470%" y="613" width="6.2530%" height="15" fill="rgb(216,5,24)" fg:x="3883" fg:w="259"/><text x="93.9970%" y="623.50">libsyste..</text></g><g><title>libsystem_pthread.dylib`_pthread_exit (2 samples, 0.05%)</title><rect x="99.9517%" y="597" width="0.0483%" height="15" fill="rgb(225,89,9)" fg:x="4140" fg:w="2"/><text x="100.2017%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_tsd_cleanup (2 samples, 0.05%)</title><rect x="99.9517%" y="581" width="0.0483%" height="15" fill="rgb(243,75,33)" fg:x="4140" fg:w="2"/><text x="100.2017%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__munmap (1 samples, 0.02%)</title><rect x="99.9759%" y="565" width="0.0241%" height="15" fill="rgb(247,141,45)" fg:x="4141" fg:w="1"/><text x="100.2259%" y="575.50"></text></g></svg></svg>